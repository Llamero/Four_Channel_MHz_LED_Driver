# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QtDesigner_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(475, 600)
        MainWindow.setMinimumSize(QtCore.QSize(475, 600))
        font = QtGui.QFont()
        font.setPointSize(12)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.gui_master_tab = QtWidgets.QTabWidget(self.centralwidget)
        self.gui_master_tab.setEnabled(True)
        self.gui_master_tab.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.gui_master_tab.setObjectName("gui_master_tab")


        ###   Main Tab   ###
        self.main_tab = QtWidgets.QWidget()
        self.main_tab.setObjectName("main_tab")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.main_tab)
        self.gridLayout_2.setHorizontalSpacing(3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.main_channel_box = QtWidgets.QGroupBox(self.main_tab)
        self.main_channel_box.setMinimumSize(QtCore.QSize(0, 0))
        self.main_channel_box.setObjectName("main_channel_box")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.main_channel_box)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.main_channel_LED3_button = QtWidgets.QRadioButton(self.main_channel_box)
        self.main_channel_LED3_button.setObjectName("main_channel_LED3_button")
        self.main_channel_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.main_channel_button_group.setObjectName("main_channel_button_group")
        self.main_channel_button_group.addButton(self.main_channel_LED3_button)
        self.gridLayout_6.addWidget(self.main_channel_LED3_button, 0, 2, 1, 1)
        self.main_channel_LED1_button = QtWidgets.QRadioButton(self.main_channel_box)
        self.main_channel_LED1_button.setChecked(True)
        self.main_channel_LED1_button.setObjectName("main_channel_LED1_button")
        self.main_channel_button_group.addButton(self.main_channel_LED1_button)
        self.gridLayout_6.addWidget(self.main_channel_LED1_button, 0, 0, 1, 1)
        self.main_channel_LED2_button = QtWidgets.QRadioButton(self.main_channel_box)
        self.main_channel_LED2_button.setObjectName("main_channel_LED2_button")
        self.main_channel_button_group.addButton(self.main_channel_LED2_button)
        self.gridLayout_6.addWidget(self.main_channel_LED2_button, 0, 1, 1, 1)
        self.main_channel_LED4_button = QtWidgets.QRadioButton(self.main_channel_box)
        self.main_channel_LED4_button.setObjectName("main_channel_LED4_button")
        self.main_channel_button_group.addButton(self.main_channel_LED4_button)
        self.gridLayout_6.addWidget(self.main_channel_LED4_button, 0, 3, 1, 1)
        self.gridLayout_2.addWidget(self.main_channel_box, 1, 0, 1, 2, QtCore.Qt.AlignTop)
        self.main_driver_ID_box = QtWidgets.QGroupBox(self.main_tab)
        self.main_driver_ID_box.setMaximumSize(QtCore.QSize(16777215, 500))
        self.main_driver_ID_box.setObjectName("main_driver_ID_box")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.main_driver_ID_box)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.main_driver_name_label = QtWidgets.QLabel(self.main_driver_ID_box)
        self.main_driver_name_label.setObjectName("main_driver_name_label")
        self.gridLayout_3.addWidget(self.main_driver_name_label, 0, 0, 1, 1)
        self.main_driver_serial_label = QtWidgets.QLabel(self.main_driver_ID_box)
        self.main_driver_serial_label.setObjectName("main_driver_serial_label")
        self.gridLayout_3.addWidget(self.main_driver_serial_label, 0, 1, 1, 1, QtCore.Qt.AlignTop)
        self.gridLayout_2.addWidget(self.main_driver_ID_box, 0, 0, 1, 2, QtCore.Qt.AlignTop)
        self.main_software_control_checkbox = QtWidgets.QCheckBox(self.main_tab)
        self.main_software_control_checkbox.setObjectName("main_software_control_checkbox")
        self.gridLayout_2.addWidget(self.main_software_control_checkbox, 4, 0, 1, 2)
        self.main_toggle_box = QtWidgets.QGroupBox(self.main_tab)
        self.main_toggle_box.setObjectName("main_toggle_box")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.main_toggle_box)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.main_toggle_sync_button = QtWidgets.QPushButton(self.main_toggle_box)
        self.main_toggle_sync_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_toggle_sync_button.sizePolicy().hasHeightForWidth())
        self.main_toggle_sync_button.setSizePolicy(sizePolicy)
        self.main_toggle_sync_button.setCheckable(True)
        self.main_toggle_sync_button.setChecked(False)
        self.main_toggle_sync_button.setAutoExclusive(True)
        self.main_toggle_sync_button.setObjectName("main_toggle_sync_button")
        self.gridLayout_5.addWidget(self.main_toggle_sync_button, 3, 0, 1, 1)
        self.main_toggle_manual_button = QtWidgets.QPushButton(self.main_toggle_box)
        self.main_toggle_manual_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_toggle_manual_button.sizePolicy().hasHeightForWidth())
        self.main_toggle_manual_button.setSizePolicy(sizePolicy)
        self.main_toggle_manual_button.setCheckable(True)
        self.main_toggle_manual_button.setChecked(True)
        self.main_toggle_manual_button.setAutoExclusive(True)
        self.main_toggle_manual_button.setObjectName("main_toggle_manual_button")
        self.gridLayout_5.addWidget(self.main_toggle_manual_button, 4, 0, 1, 1)
        self.gridLayout_2.addWidget(self.main_toggle_box, 2, 1, 2, 1)
        self.main_lock_interface_button = QtWidgets.QPushButton(self.main_tab)
        self.main_lock_interface_button.setObjectName("main_lock_interface_button")
        self.gridLayout_2.addWidget(self.main_lock_interface_button, 5, 0, 1, 2)
        self.main_intensity_control_box = QtWidgets.QGroupBox(self.main_tab)
        self.main_intensity_control_box.setObjectName("main_intensity_control_box")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.main_intensity_control_box)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.main_intensity_percent_label = QtWidgets.QLabel(self.main_intensity_control_box)
        self.main_intensity_percent_label.setObjectName("main_intensity_percent_label")
        self.gridLayout_4.addWidget(self.main_intensity_percent_label, 3, 3, 1, 1)
        self.main_intensity_spinbox = QtWidgets.QDoubleSpinBox(self.main_intensity_control_box)
        self.main_intensity_spinbox.setEnabled(True)
        self.main_intensity_spinbox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.main_intensity_spinbox.setDecimals(3)
        self.main_intensity_spinbox.setObjectName("main_intensity_spinbox")
        self.gridLayout_4.addWidget(self.main_intensity_spinbox, 3, 0, 1, 3)
        self.main_intensity_dial = QtWidgets.QDial(self.main_intensity_control_box)
        self.main_intensity_dial.setEnabled(True)
        self.main_intensity_dial.setMaximum(100)
        self.main_intensity_dial.setSingleStep(1)
        self.main_intensity_dial.setPageStep(10)
        self.main_intensity_dial.setInvertedAppearance(False)
        self.main_intensity_dial.setWrapping(False)
        self.main_intensity_dial.setNotchTarget(2.0)
        self.main_intensity_dial.setNotchesVisible(True)
        self.main_intensity_dial.setObjectName("main_intensity_dial")
        self.gridLayout_4.addWidget(self.main_intensity_dial, 0, 0, 1, 3)
        self.main_intensity_PWM_button = QtWidgets.QRadioButton(self.main_intensity_control_box)
        self.main_intensity_PWM_button.setChecked(True)
        self.main_intensity_PWM_button.setObjectName("main_intensity_PWM_button")
        self.main_intensity_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.main_intensity_button_group.setObjectName("main_intensity_button_group")
        self.main_intensity_button_group.addButton(self.main_intensity_PWM_button)
        self.gridLayout_4.addWidget(self.main_intensity_PWM_button, 1, 0, 1, 1)
        self.main_intensity_current_button = QtWidgets.QRadioButton(self.main_intensity_control_box)
        self.main_intensity_current_button.setObjectName("main_intensity_current_button")
        self.main_intensity_button_group.addButton(self.main_intensity_current_button)
        self.gridLayout_4.addWidget(self.main_intensity_current_button, 1, 1, 1, 1)
        self.main_intensity_off_button = QtWidgets.QRadioButton(self.main_intensity_control_box)
        self.main_intensity_off_button.setObjectName("main_intensity_off_button")
        self.main_intensity_button_group.addButton(self.main_intensity_off_button)
        self.gridLayout_4.addWidget(self.main_intensity_off_button, 1, 2, 1, 1)
        self.gridLayout_4.setColumnStretch(0, 10)
        self.gridLayout_4.setColumnStretch(1, 10)
        self.gridLayout_4.setColumnStretch(2, 10)
        self.gridLayout_2.addWidget(self.main_intensity_control_box, 2, 0, 2, 1)
        self.gridLayout_2.setColumnStretch(0, 10)
        self.gridLayout_2.setColumnStretch(1, 5)
        self.gridLayout_2.setRowStretch(3, 10)
        self.gridLayout_2.setRowStretch(4, 10)
        self.gridLayout_2.setRowStretch(5, 10)
        self.gui_master_tab.addTab(self.main_tab, "")


        ###   Sync Tab   ###
        self.sync_tab = QtWidgets.QWidget()
        self.sync_tab.setObjectName("sync_tab")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.sync_tab)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.sync_download_button = QtWidgets.QPushButton(self.sync_tab)
        self.sync_download_button.setObjectName("sync_download_button")
        self.gridLayout_9.addWidget(self.sync_download_button, 2, 1, 1, 1)
        self.sync_load_button = QtWidgets.QPushButton(self.sync_tab)
        self.sync_load_button.setObjectName("sync_load_button")
        self.gridLayout_9.addWidget(self.sync_load_button, 2, 5, 1, 1)
        self.sync_button_line = QtWidgets.QFrame(self.sync_tab)
        self.sync_button_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.sync_button_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.sync_button_line.setObjectName("sync_button_line")
        self.gridLayout_9.addWidget(self.sync_button_line, 2, 3, 1, 1)
        self.sync_scroll_area = QtWidgets.QScrollArea(self.sync_tab)
        self.sync_scroll_area.setWidgetResizable(True)
        self.sync_scroll_area.setObjectName("sync_scroll_area")
        self.sync_scroll_contents = QtWidgets.QWidget()
        self.sync_scroll_contents.setGeometry(QtCore.QRect(0, 0, 431, 388))
        self.sync_scroll_contents.setObjectName("sync_scroll_contents")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.sync_scroll_contents)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.sync_toolbox = QtWidgets.QToolBox(self.sync_scroll_contents)
        self.sync_toolbox.setObjectName("sync_toolbox")

        #Sync - digital
        self.sync_digital_page = QtWidgets.QWidget()
        self.sync_digital_page.setGeometry(QtCore.QRect(0, 0, 523, 628))
        self.sync_digital_page.setObjectName("sync_digital_page")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.sync_digital_page)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.sync_digital_trigger_channel_box = QtWidgets.QGroupBox(self.sync_digital_page)
        self.sync_digital_trigger_channel_box.setObjectName("sync_digital_trigger_channel_box")
        self.gridLayout_28 = QtWidgets.QGridLayout(self.sync_digital_trigger_channel_box)
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.sync_digital_input1_button = QtWidgets.QRadioButton(self.sync_digital_trigger_channel_box)
        self.sync_digital_input1_button.setChecked(True)
        self.sync_digital_input1_button.setObjectName("sync_digital_input1_button")
        self.sync_digital_trigger_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_digital_trigger_button_group.setObjectName("sync_digital_trigger_button_group")
        self.sync_digital_trigger_button_group.addButton(self.sync_digital_input1_button)
        self.gridLayout_28.addWidget(self.sync_digital_input1_button, 0, 0, 1, 1)
        self.sync_digital_input2_button = QtWidgets.QRadioButton(self.sync_digital_trigger_channel_box)
        self.sync_digital_input2_button.setObjectName("sync_digital_input2_button")
        self.sync_digital_trigger_button_group.addButton(self.sync_digital_input2_button)
        self.gridLayout_28.addWidget(self.sync_digital_input2_button, 0, 1, 1, 1)
        self.sync_digital_input3_button = QtWidgets.QRadioButton(self.sync_digital_trigger_channel_box)
        self.sync_digital_input3_button.setObjectName("sync_digital_input3_button")
        self.sync_digital_trigger_button_group.addButton(self.sync_digital_input3_button)
        self.gridLayout_28.addWidget(self.sync_digital_input3_button, 0, 2, 1, 1)
        self.sync_digital_input4_button = QtWidgets.QRadioButton(self.sync_digital_trigger_channel_box)
        self.sync_digital_input4_button.setObjectName("sync_digital_input4_button")
        self.sync_digital_trigger_button_group.addButton(self.sync_digital_input4_button)
        self.gridLayout_28.addWidget(self.sync_digital_input4_button, 0, 3, 1, 1)
        self.gridLayout_24.addWidget(self.sync_digital_trigger_channel_box, 0, 0, 1, 1)
        self.sync_digital_trigger_low_box = QtWidgets.QGroupBox(self.sync_digital_page)
        self.sync_digital_trigger_low_box.setStatusTip("")
        self.sync_digital_trigger_low_box.setObjectName("sync_digital_trigger_low_box")
        self.gridLayout_35 = QtWidgets.QGridLayout(self.sync_digital_trigger_low_box)
        self.gridLayout_35.setObjectName("gridLayout_35")
        self.sync_digital_trigger_low_tab = QtWidgets.QTabWidget(self.sync_digital_trigger_low_box)
        self.sync_digital_trigger_low_tab.setObjectName("sync_digital_trigger_low_tab")
        self.sync_digital_trigger_low_off_tab = QtWidgets.QWidget()
        self.sync_digital_trigger_low_off_tab.setObjectName("sync_digital_trigger_low_off_tab")
        self.gridLayout_41 = QtWidgets.QGridLayout(self.sync_digital_trigger_low_off_tab)
        self.gridLayout_41.setObjectName("gridLayout_41")
        self.sync_digital_trigger_low_off_label = QtWidgets.QLabel(self.sync_digital_trigger_low_off_tab)
        self.sync_digital_trigger_low_off_label.setObjectName("sync_digital_trigger_low_off_label")
        self.gridLayout_41.addWidget(self.sync_digital_trigger_low_off_label, 0, 0, 1, 1)
        self.sync_digital_trigger_low_tab.addTab(self.sync_digital_trigger_low_off_tab, "")
        self.sync_digital_trigger_low_constant_tab = QtWidgets.QWidget()
        self.sync_digital_trigger_low_constant_tab.setObjectName("sync_digital_trigger_low_constant_tab")
        self.gridLayout_44 = QtWidgets.QGridLayout(self.sync_digital_trigger_low_constant_tab)
        self.gridLayout_44.setObjectName("gridLayout_44")
        self.sync_digital_trigger_low_constant_LED_box = QtWidgets.QGroupBox(self.sync_digital_trigger_low_constant_tab)
        self.sync_digital_trigger_low_constant_LED_box.setObjectName("sync_digital_trigger_low_constant_LED_box")
        self.gridLayout_42 = QtWidgets.QGridLayout(self.sync_digital_trigger_low_constant_LED_box)
        self.gridLayout_42.setObjectName("gridLayout_42")
        self.sync_digital_trigger_low_constant_LED3_button = QtWidgets.QRadioButton(self.sync_digital_trigger_low_constant_LED_box)
        self.sync_digital_trigger_low_constant_LED3_button.setObjectName("sync_digital_trigger_low_constant_LED3_button")
        self.sync_digital_trigger_low_channel_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_digital_trigger_low_channel_button_group.setObjectName("sync_digital_trigger_low_channel_button_group")
        self.sync_digital_trigger_low_channel_button_group.addButton(self.sync_digital_trigger_low_constant_LED3_button)
        self.gridLayout_42.addWidget(self.sync_digital_trigger_low_constant_LED3_button, 0, 2, 1, 1)
        self.sync_digital_trigger_low_constant_LED1_button = QtWidgets.QRadioButton(self.sync_digital_trigger_low_constant_LED_box)
        self.sync_digital_trigger_low_constant_LED1_button.setObjectName("sync_digital_trigger_low_constant_LED1_button")
        self.sync_digital_trigger_low_channel_button_group.addButton(self.sync_digital_trigger_low_constant_LED1_button)
        self.gridLayout_42.addWidget(self.sync_digital_trigger_low_constant_LED1_button, 0, 0, 1, 1)
        self.sync_digital_trigger_low_constant_LED2_button = QtWidgets.QRadioButton(self.sync_digital_trigger_low_constant_LED_box)
        self.sync_digital_trigger_low_constant_LED2_button.setObjectName("sync_digital_trigger_low_constant_LED2_button")
        self.sync_digital_trigger_low_channel_button_group.addButton(self.sync_digital_trigger_low_constant_LED2_button)
        self.gridLayout_42.addWidget(self.sync_digital_trigger_low_constant_LED2_button, 0, 1, 1, 1)
        self.sync_digital_trigger_low_constant_LEDn_button = QtWidgets.QRadioButton(self.sync_digital_trigger_low_constant_LED_box)
        self.sync_digital_trigger_low_constant_LEDn_button.setChecked(True)
        self.sync_digital_trigger_low_constant_LEDn_button.setObjectName("sync_digital_trigger_low_constant_LEDn_button")
        self.sync_digital_trigger_low_channel_button_group.addButton(self.sync_digital_trigger_low_constant_LEDn_button)
        self.gridLayout_42.addWidget(self.sync_digital_trigger_low_constant_LEDn_button, 0, 4, 1, 1)
        self.sync_digital_trigger_low_constant_LED4_button = QtWidgets.QRadioButton(self.sync_digital_trigger_low_constant_LED_box)
        self.sync_digital_trigger_low_constant_LED4_button.setObjectName("sync_digital_trigger_low_constant_LED4_button")
        self.sync_digital_trigger_low_channel_button_group.addButton(self.sync_digital_trigger_low_constant_LED4_button)
        self.gridLayout_42.addWidget(self.sync_digital_trigger_low_constant_LED4_button, 0, 3, 1, 1)
        self.gridLayout_44.addWidget(self.sync_digital_trigger_low_constant_LED_box, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_digital_trigger_low_constant_config_frame = QtWidgets.QFrame(self.sync_digital_trigger_low_constant_tab)
        self.sync_digital_trigger_low_constant_config_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_digital_trigger_low_constant_config_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_digital_trigger_low_constant_config_frame.setObjectName("sync_digital_trigger_low_constant_config_frame")
        self.gridLayout_43 = QtWidgets.QGridLayout(self.sync_digital_trigger_low_constant_config_frame)
        self.gridLayout_43.setObjectName("gridLayout_43")
        self.sync_digital_trigger_low_constant_config_current_label2 = QtWidgets.QLabel(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_current_label2.setObjectName("sync_digital_trigger_low_constant_config_current_label2")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_current_label2, 1, 2, 1, 1)
        self.sync_digital_trigger_low_constant_config_PWM_box = QtWidgets.QDoubleSpinBox(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_PWM_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_digital_trigger_low_constant_config_PWM_box.setDecimals(3)
        self.sync_digital_trigger_low_constant_config_PWM_box.setMaximum(100.0)
        self.sync_digital_trigger_low_constant_config_PWM_box.setObjectName("sync_digital_trigger_low_constant_config_PWM_box")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_PWM_box, 0, 1, 1, 1)
        self.sync_digital_trigger_low_constant_config_PWM_label2 = QtWidgets.QLabel(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_PWM_label2.setObjectName("sync_digital_trigger_low_constant_config_PWM_label2")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_PWM_label2, 0, 2, 1, 1)
        self.sync_digital_trigger_low_constant_config_duration_label1 = QtWidgets.QLabel(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_duration_label1.setObjectName("sync_digital_trigger_low_constant_config_duration_label1")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_duration_label1, 2, 0, 1, 1)
        self.sync_digital_trigger_low_constant_config_duration_box = QtWidgets.QDoubleSpinBox(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_duration_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_digital_trigger_low_constant_config_duration_box.setReadOnly(False)
        self.sync_digital_trigger_low_constant_config_duration_box.setSpecialValueText("")
        self.sync_digital_trigger_low_constant_config_duration_box.setDecimals(3)
        self.sync_digital_trigger_low_constant_config_duration_box.setMaximum(4294.96)
        self.sync_digital_trigger_low_constant_config_duration_box.setObjectName("sync_digital_trigger_low_constant_config_duration_box")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_duration_box, 2, 1, 1, 1)
        self.sync_digital_trigger_low_constant_config_current_box = QtWidgets.QDoubleSpinBox(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_current_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_digital_trigger_low_constant_config_current_box.setDecimals(3)
        self.sync_digital_trigger_low_constant_config_current_box.setMaximum(100.0)
        self.sync_digital_trigger_low_constant_config_current_box.setObjectName("sync_digital_trigger_low_constant_config_current_box")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_current_box, 1, 1, 1, 1)
        self.sync_digital_trigger_low_constant_config_PWM_label1 = QtWidgets.QLabel(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_PWM_label1.setObjectName("sync_digital_trigger_low_constant_config_PWM_label1")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_PWM_label1, 0, 0, 1, 1)
        self.sync_digital_trigger_low_constant_config_duration_label2 = QtWidgets.QLabel(self.sync_digital_trigger_low_constant_config_frame)
        font = QtGui.QFont()
        font.setStrikeOut(False)
        self.sync_digital_trigger_low_constant_config_duration_label2.setFont(font)
        self.sync_digital_trigger_low_constant_config_duration_label2.setObjectName("sync_digital_trigger_low_constant_config_duration_label2")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_duration_label2, 2, 2, 1, 1)
        self.sync_digital_trigger_low_constant_config_current_label1 = QtWidgets.QLabel(self.sync_digital_trigger_low_constant_config_frame)
        self.sync_digital_trigger_low_constant_config_current_label1.setObjectName("sync_digital_trigger_low_constant_config_current_label1")
        self.gridLayout_43.addWidget(self.sync_digital_trigger_low_constant_config_current_label1, 1, 0, 1, 1)
        self.gridLayout_43.setColumnStretch(1, 10)
        self.gridLayout_44.addWidget(self.sync_digital_trigger_low_constant_config_frame, 1, 0, 1, 1)
        self.sync_digital_trigger_low_tab.addTab(self.sync_digital_trigger_low_constant_tab, "")
        self.sync_digital_trigger_low_sequence_tab = QtWidgets.QWidget()
        self.sync_digital_trigger_low_sequence_tab.setObjectName("sync_digital_trigger_low_sequence_tab")
        self.gridLayout_45 = QtWidgets.QGridLayout(self.sync_digital_trigger_low_sequence_tab)
        self.gridLayout_45.setObjectName("gridLayout_45")
        self.sync_digital_trigger_low_sequence_table = QtWidgets.QTableWidget(self.sync_digital_trigger_low_sequence_tab)
        self.sync_digital_trigger_low_sequence_table.setRowCount(100)
        self.sync_digital_trigger_low_sequence_table.setColumnCount(4)
        self.sync_digital_trigger_low_sequence_table.setObjectName("sync_digital_trigger_low_sequence_table")
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_low_sequence_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_low_sequence_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_low_sequence_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_low_sequence_table.setHorizontalHeaderItem(3, item)
        self.gridLayout_45.addWidget(self.sync_digital_trigger_low_sequence_table, 0, 0, 1, 2)
        self.sync_digital_trigger_low_sequence_load_button = QtWidgets.QPushButton(self.sync_digital_trigger_low_sequence_tab)
        self.sync_digital_trigger_low_sequence_load_button.setObjectName("sync_digital_trigger_low_sequence_load_button")
        self.gridLayout_45.addWidget(self.sync_digital_trigger_low_sequence_load_button, 1, 0, 1, 1)
        self.sync_digital_trigger_low_sequence_save_button = QtWidgets.QPushButton(self.sync_digital_trigger_low_sequence_tab)
        self.sync_digital_trigger_low_sequence_save_button.setObjectName("sync_digital_trigger_low_sequence_save_button")
        self.gridLayout_45.addWidget(self.sync_digital_trigger_low_sequence_save_button, 1, 1, 1, 1)
        self.sync_digital_trigger_low_tab.addTab(self.sync_digital_trigger_low_sequence_tab, "")
        self.gridLayout_35.addWidget(self.sync_digital_trigger_low_tab, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.gridLayout_24.addWidget(self.sync_digital_trigger_low_box, 1, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_digital_trigger_high_box = QtWidgets.QGroupBox(self.sync_digital_page)
        self.sync_digital_trigger_high_box.setStatusTip("")
        self.sync_digital_trigger_high_box.setObjectName("sync_digital_trigger_high_box")
        self.gridLayout_70 = QtWidgets.QGridLayout(self.sync_digital_trigger_high_box)
        self.gridLayout_70.setObjectName("gridLayout_70")
        self.sync_digital_trigger_high_tab = QtWidgets.QTabWidget(self.sync_digital_trigger_high_box)
        self.sync_digital_trigger_high_tab.setObjectName("sync_digital_trigger_high_tab")
        self.sync_digital_trigger_high_off_tab = QtWidgets.QWidget()
        self.sync_digital_trigger_high_off_tab.setObjectName("sync_digital_trigger_high_off_tab")
        self.gridLayout_71 = QtWidgets.QGridLayout(self.sync_digital_trigger_high_off_tab)
        self.gridLayout_71.setObjectName("gridLayout_71")
        self.sync_digital_trigger_high_off_label = QtWidgets.QLabel(self.sync_digital_trigger_high_off_tab)
        self.sync_digital_trigger_high_off_label.setObjectName("sync_digital_trigger_high_off_label")
        self.gridLayout_71.addWidget(self.sync_digital_trigger_high_off_label, 0, 0, 1, 1)
        self.sync_digital_trigger_high_tab.addTab(self.sync_digital_trigger_high_off_tab, "")
        self.sync_digital_trigger_high_constant_tab = QtWidgets.QWidget()
        self.sync_digital_trigger_high_constant_tab.setObjectName("sync_digital_trigger_high_constant_tab")
        self.gridLayout_72 = QtWidgets.QGridLayout(self.sync_digital_trigger_high_constant_tab)
        self.gridLayout_72.setObjectName("gridLayout_72")
        self.sync_digital_trigger_high_constant_LED_box = QtWidgets.QGroupBox(self.sync_digital_trigger_high_constant_tab)
        self.sync_digital_trigger_high_constant_LED_box.setObjectName("sync_digital_trigger_high_constant_LED_box")
        self.gridLayout_73 = QtWidgets.QGridLayout(self.sync_digital_trigger_high_constant_LED_box)
        self.gridLayout_73.setObjectName("gridLayout_73")
        self.sync_digital_trigger_high_constant_LED3_button = QtWidgets.QRadioButton(self.sync_digital_trigger_high_constant_LED_box)
        self.sync_digital_trigger_high_constant_LED3_button.setObjectName("sync_digital_trigger_high_constant_LED3_button")
        self.sync_digital_trigger_high_channel_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_digital_trigger_high_channel_button_group.setObjectName("sync_digital_trigger_high_channel_button_group")
        self.sync_digital_trigger_high_channel_button_group.addButton(self.sync_digital_trigger_high_constant_LED3_button)
        self.gridLayout_73.addWidget(self.sync_digital_trigger_high_constant_LED3_button, 0, 2, 1, 1)
        self.sync_digital_trigger_high_constant_LED1_button = QtWidgets.QRadioButton(self.sync_digital_trigger_high_constant_LED_box)
        self.sync_digital_trigger_high_constant_LED1_button.setObjectName("sync_digital_trigger_high_constant_LED1_button")
        self.sync_digital_trigger_high_channel_button_group.addButton(self.sync_digital_trigger_high_constant_LED1_button)
        self.gridLayout_73.addWidget(self.sync_digital_trigger_high_constant_LED1_button, 0, 0, 1, 1)
        self.sync_digital_trigger_high_constant_LED2_button = QtWidgets.QRadioButton(self.sync_digital_trigger_high_constant_LED_box)
        self.sync_digital_trigger_high_constant_LED2_button.setObjectName("sync_digital_trigger_high_constant_LED2_button")
        self.sync_digital_trigger_high_channel_button_group.addButton(self.sync_digital_trigger_high_constant_LED2_button)
        self.gridLayout_73.addWidget(self.sync_digital_trigger_high_constant_LED2_button, 0, 1, 1, 1)
        self.sync_digital_trigger_high_constant_LEDn_button = QtWidgets.QRadioButton(self.sync_digital_trigger_high_constant_LED_box)
        self.sync_digital_trigger_high_constant_LEDn_button.setChecked(True)
        self.sync_digital_trigger_high_constant_LEDn_button.setObjectName("sync_digital_trigger_high_constant_LEDn_button")
        self.sync_digital_trigger_high_channel_button_group.addButton(self.sync_digital_trigger_high_constant_LEDn_button)
        self.gridLayout_73.addWidget(self.sync_digital_trigger_high_constant_LEDn_button, 0, 4, 1, 1)
        self.sync_digital_trigger_high_constant_LED4_button = QtWidgets.QRadioButton(self.sync_digital_trigger_high_constant_LED_box)
        self.sync_digital_trigger_high_constant_LED4_button.setObjectName("sync_digital_trigger_high_constant_LED4_button")
        self.sync_digital_trigger_high_channel_button_group.addButton(self.sync_digital_trigger_high_constant_LED4_button)
        self.gridLayout_73.addWidget(self.sync_digital_trigger_high_constant_LED4_button, 0, 3, 1, 1)
        self.gridLayout_72.addWidget(self.sync_digital_trigger_high_constant_LED_box, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_digital_trigger_high_constant_config_frame = QtWidgets.QFrame(self.sync_digital_trigger_high_constant_tab)
        self.sync_digital_trigger_high_constant_config_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_digital_trigger_high_constant_config_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_digital_trigger_high_constant_config_frame.setObjectName("sync_digital_trigger_high_constant_config_frame")
        self.gridLayout_74 = QtWidgets.QGridLayout(self.sync_digital_trigger_high_constant_config_frame)
        self.gridLayout_74.setObjectName("gridLayout_74")
        self.sync_digital_trigger_high_constant_config_current_label2 = QtWidgets.QLabel(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_current_label2.setObjectName("sync_digital_trigger_high_constant_config_current_label2")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_current_label2, 1, 2, 1, 1)
        self.sync_digital_trigger_high_constant_config_PWM_box = QtWidgets.QDoubleSpinBox(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_PWM_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_digital_trigger_high_constant_config_PWM_box.setDecimals(3)
        self.sync_digital_trigger_high_constant_config_PWM_box.setMaximum(100.0)
        self.sync_digital_trigger_high_constant_config_PWM_box.setObjectName("sync_digital_trigger_high_constant_config_PWM_box")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_PWM_box, 0, 1, 1, 1)
        self.sync_digital_trigger_high_constant_config_PWM_label2 = QtWidgets.QLabel(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_PWM_label2.setObjectName("sync_digital_trigger_high_constant_config_PWM_label2")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_PWM_label2, 0, 2, 1, 1)
        self.sync_digital_trigger_high_constant_config_duration_label1 = QtWidgets.QLabel(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_duration_label1.setObjectName("sync_digital_trigger_high_constant_config_duration_label1")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_duration_label1, 2, 0, 1, 1)
        self.sync_digital_trigger_high_constant_config_duration_box = QtWidgets.QDoubleSpinBox(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_duration_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_digital_trigger_high_constant_config_duration_box.setReadOnly(False)
        self.sync_digital_trigger_high_constant_config_duration_box.setSpecialValueText("")
        self.sync_digital_trigger_high_constant_config_duration_box.setDecimals(3)
        self.sync_digital_trigger_high_constant_config_duration_box.setMaximum(4294.96)
        self.sync_digital_trigger_high_constant_config_duration_box.setObjectName("sync_digital_trigger_high_constant_config_duration_box")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_duration_box, 2, 1, 1, 1)
        self.sync_digital_trigger_high_constant_config_current_box = QtWidgets.QDoubleSpinBox(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_current_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_digital_trigger_high_constant_config_current_box.setDecimals(3)
        self.sync_digital_trigger_high_constant_config_current_box.setMaximum(100.0)
        self.sync_digital_trigger_high_constant_config_current_box.setObjectName("sync_digital_trigger_high_constant_config_current_box")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_current_box, 1, 1, 1, 1)
        self.sync_digital_trigger_high_constant_config_PWM_label1 = QtWidgets.QLabel(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_PWM_label1.setObjectName("sync_digital_trigger_high_constant_config_PWM_label1")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_PWM_label1, 0, 0, 1, 1)
        self.sync_digital_trigger_high_constant_config_duration_label2 = QtWidgets.QLabel(self.sync_digital_trigger_high_constant_config_frame)
        font = QtGui.QFont()
        font.setStrikeOut(False)
        self.sync_digital_trigger_high_constant_config_duration_label2.setFont(font)
        self.sync_digital_trigger_high_constant_config_duration_label2.setObjectName("sync_digital_trigger_high_constant_config_duration_label2")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_duration_label2, 2, 2, 1, 1)
        self.sync_digital_trigger_high_constant_config_current_label1 = QtWidgets.QLabel(self.sync_digital_trigger_high_constant_config_frame)
        self.sync_digital_trigger_high_constant_config_current_label1.setObjectName("sync_digital_trigger_high_constant_config_current_label1")
        self.gridLayout_74.addWidget(self.sync_digital_trigger_high_constant_config_current_label1, 1, 0, 1, 1)
        self.gridLayout_74.setColumnStretch(1, 10)
        self.gridLayout_72.addWidget(self.sync_digital_trigger_high_constant_config_frame, 1, 0, 1, 1)
        self.sync_digital_trigger_high_tab.addTab(self.sync_digital_trigger_high_constant_tab, "")
        self.sync_digital_trigger_high_sequence_tab = QtWidgets.QWidget()
        self.sync_digital_trigger_high_sequence_tab.setObjectName("sync_digital_trigger_high_sequence_tab")
        self.gridLayout_75 = QtWidgets.QGridLayout(self.sync_digital_trigger_high_sequence_tab)
        self.gridLayout_75.setObjectName("gridLayout_75")
        self.sync_digital_trigger_high_sequence_table = QtWidgets.QTableWidget(self.sync_digital_trigger_high_sequence_tab)
        self.sync_digital_trigger_high_sequence_table.setRowCount(100)
        self.sync_digital_trigger_high_sequence_table.setColumnCount(4)
        self.sync_digital_trigger_high_sequence_table.setObjectName("sync_digital_trigger_high_sequence_table")
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_high_sequence_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_high_sequence_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_high_sequence_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_digital_trigger_high_sequence_table.setHorizontalHeaderItem(3, item)
        self.gridLayout_75.addWidget(self.sync_digital_trigger_high_sequence_table, 0, 0, 1, 2)
        self.sync_digital_trigger_high_sequence_load_button = QtWidgets.QPushButton(self.sync_digital_trigger_high_sequence_tab)
        self.sync_digital_trigger_high_sequence_load_button.setObjectName("sync_digital_trigger_high_sequence_load_button")
        self.gridLayout_75.addWidget(self.sync_digital_trigger_high_sequence_load_button, 1, 0, 1, 1)
        self.sync_digital_trigger_high_sequence_save_button = QtWidgets.QPushButton(self.sync_digital_trigger_high_sequence_tab)
        self.sync_digital_trigger_high_sequence_save_button.setObjectName("sync_digital_trigger_high_sequence_save_button")
        self.gridLayout_75.addWidget(self.sync_digital_trigger_high_sequence_save_button, 1, 1, 1, 1)
        self.sync_digital_trigger_high_tab.addTab(self.sync_digital_trigger_high_sequence_tab, "")
        self.gridLayout_70.addWidget(self.sync_digital_trigger_high_tab, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.gridLayout_24.addWidget(self.sync_digital_trigger_high_box, 2, 0, 1, 1, QtCore.Qt.AlignTop)
        spacerItem = QtWidgets.QSpacerItem(40, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_24.addItem(spacerItem, 3, 0, 1, 1)
        self.gridLayout_24.setRowStretch(1, 1)
        self.gridLayout_24.setRowStretch(2, 1)
        self.gridLayout_24.setRowStretch(3, 10)
        self.sync_toolbox.addItem(self.sync_digital_page, "")

        # Sync - analog
        self.sync_analog_page = QtWidgets.QWidget()
        self.sync_analog_page.setGeometry(QtCore.QRect(0, 0, 752, 598))
        self.sync_analog_page.setObjectName("sync_analog_page")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.sync_analog_page)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.sync_analog_output_tab = QtWidgets.QTabWidget(self.sync_analog_page)
        self.sync_analog_output_tab.setObjectName("sync_analog_output_tab")
        self.sync_analog_output_PWM_tab = QtWidgets.QWidget()
        self.sync_analog_output_PWM_tab.setObjectName("sync_analog_output_PWM_tab")
        self.gridLayout_32 = QtWidgets.QGridLayout(self.sync_analog_output_PWM_tab)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.sync_analog_output_PWM_avg_slider_label = QtWidgets.QLabel(self.sync_analog_output_PWM_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sync_analog_output_PWM_avg_slider_label.sizePolicy().hasHeightForWidth())
        self.sync_analog_output_PWM_avg_slider_label.setSizePolicy(sizePolicy)
        self.sync_analog_output_PWM_avg_slider_label.setObjectName("sync_analog_output_PWM_avg_slider_label")
        self.gridLayout_32.addWidget(self.sync_analog_output_PWM_avg_slider_label, 1, 0, 1, 1)
        self.sync_analog_output_PWM_avg_slider = QtWidgets.QSlider(self.sync_analog_output_PWM_tab)
        self.sync_analog_output_PWM_avg_slider.setMinimum(1)
        self.sync_analog_output_PWM_avg_slider.setMaximum(100)
        self.sync_analog_output_PWM_avg_slider.setSingleStep(0)
        self.sync_analog_output_PWM_avg_slider.setPageStep(1)
        self.sync_analog_output_PWM_avg_slider.setProperty("value", 1)
        self.sync_analog_output_PWM_avg_slider.setOrientation(QtCore.Qt.Horizontal)
        self.sync_analog_output_PWM_avg_slider.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.sync_analog_output_PWM_avg_slider.setTickInterval(10)
        self.sync_analog_output_PWM_avg_slider.setObjectName("sync_analog_output_PWM_avg_slider")
        self.gridLayout_32.addWidget(self.sync_analog_output_PWM_avg_slider, 1, 1, 1, 1)
        self.sync_analog_output_PWM_avg_frame = QtWidgets.QFrame(self.sync_analog_output_PWM_tab)
        self.sync_analog_output_PWM_avg_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_analog_output_PWM_avg_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_analog_output_PWM_avg_frame.setObjectName("sync_analog_output_PWM_avg_frame")
        self.gridLayout_34 = QtWidgets.QGridLayout(self.sync_analog_output_PWM_avg_frame)
        self.gridLayout_34.setContentsMargins(0, -1, 0, -1)
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.sync_analog_output_PWM_avg_num_label = QtWidgets.QLabel(self.sync_analog_output_PWM_avg_frame)
        self.sync_analog_output_PWM_avg_num_label.setObjectName("sync_analog_output_PWM_avg_num_label")
        self.gridLayout_34.addWidget(self.sync_analog_output_PWM_avg_num_label, 0, 0, 1, 1)
        self.sync_analog_output_PWM_avg_bandiwdth_label = QtWidgets.QLabel(self.sync_analog_output_PWM_avg_frame)
        self.sync_analog_output_PWM_avg_bandiwdth_label.setObjectName("sync_analog_output_PWM_avg_bandiwdth_label")
        self.gridLayout_34.addWidget(self.sync_analog_output_PWM_avg_bandiwdth_label, 0, 1, 1, 1)
        self.gridLayout_34.setColumnStretch(0, 10)
        self.gridLayout_34.setColumnStretch(1, 13)
        self.gridLayout_32.addWidget(self.sync_analog_output_PWM_avg_frame, 2, 0, 1, 2, QtCore.Qt.AlignTop)
        self.sync_analog_output_PWM_label = QtWidgets.QLabel(self.sync_analog_output_PWM_tab)
        self.sync_analog_output_PWM_label.setWordWrap(False)
        self.sync_analog_output_PWM_label.setObjectName("sync_analog_output_PWM_label")
        self.gridLayout_32.addWidget(self.sync_analog_output_PWM_label, 0, 0, 1, 2)
        self.gridLayout_32.setRowStretch(2, 10)
        self.sync_analog_output_tab.addTab(self.sync_analog_output_PWM_tab, "")
        self.sync_analog_output_current_tab = QtWidgets.QWidget()
        self.sync_analog_output_current_tab.setObjectName("sync_analog_output_current_tab")
        self.gridLayout_30 = QtWidgets.QGridLayout(self.sync_analog_output_current_tab)
        self.gridLayout_30.setObjectName("gridLayout_30")
        self.sync_analog_output_current_avg_frame = QtWidgets.QFrame(self.sync_analog_output_current_tab)
        self.sync_analog_output_current_avg_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_analog_output_current_avg_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_analog_output_current_avg_frame.setObjectName("sync_analog_output_current_avg_frame")
        self.gridLayout_47 = QtWidgets.QGridLayout(self.sync_analog_output_current_avg_frame)
        self.gridLayout_47.setContentsMargins(0, -1, 0, -1)
        self.gridLayout_47.setObjectName("gridLayout_47")
        self.sync_analog_output_current_avg_num_label = QtWidgets.QLabel(self.sync_analog_output_current_avg_frame)
        self.sync_analog_output_current_avg_num_label.setObjectName("sync_analog_output_current_avg_num_label")
        self.gridLayout_47.addWidget(self.sync_analog_output_current_avg_num_label, 0, 0, 1, 1)
        self.sync_analog_output_current_avg_bandiwdth_label = QtWidgets.QLabel(self.sync_analog_output_current_avg_frame)
        self.sync_analog_output_current_avg_bandiwdth_label.setObjectName("sync_analog_output_current_avg_bandiwdth_label")
        self.gridLayout_47.addWidget(self.sync_analog_output_current_avg_bandiwdth_label, 0, 1, 1, 1)
        self.gridLayout_47.setColumnStretch(0, 10)
        self.gridLayout_47.setColumnStretch(1, 13)
        self.gridLayout_30.addWidget(self.sync_analog_output_current_avg_frame, 2, 0, 1, 2, QtCore.Qt.AlignTop)
        self.sync_analog_output_current_avg_slider = QtWidgets.QSlider(self.sync_analog_output_current_tab)
        self.sync_analog_output_current_avg_slider.setMinimum(1)
        self.sync_analog_output_current_avg_slider.setMaximum(100)
        self.sync_analog_output_current_avg_slider.setSingleStep(0)
        self.sync_analog_output_current_avg_slider.setPageStep(1)
        self.sync_analog_output_current_avg_slider.setProperty("value", 1)
        self.sync_analog_output_current_avg_slider.setOrientation(QtCore.Qt.Horizontal)
        self.sync_analog_output_current_avg_slider.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.sync_analog_output_current_avg_slider.setTickInterval(10)
        self.sync_analog_output_current_avg_slider.setObjectName("sync_analog_output_current_avg_slider")
        self.gridLayout_30.addWidget(self.sync_analog_output_current_avg_slider, 1, 1, 1, 1)
        self.sync_analog_output_current_avg_slider_label = QtWidgets.QLabel(self.sync_analog_output_current_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sync_analog_output_current_avg_slider_label.sizePolicy().hasHeightForWidth())
        self.sync_analog_output_current_avg_slider_label.setSizePolicy(sizePolicy)
        self.sync_analog_output_current_avg_slider_label.setObjectName("sync_analog_output_current_avg_slider_label")
        self.gridLayout_30.addWidget(self.sync_analog_output_current_avg_slider_label, 1, 0, 1, 1)
        self.sync_analog_output_current_label = QtWidgets.QLabel(self.sync_analog_output_current_tab)
        self.sync_analog_output_current_label.setObjectName("sync_analog_output_current_label")
        self.gridLayout_30.addWidget(self.sync_analog_output_current_label, 0, 0, 1, 2)
        self.gridLayout_30.setRowStretch(2, 10)
        self.sync_analog_output_tab.addTab(self.sync_analog_output_current_tab, "")
        self.sync_analog_output_unbuffered_tab = QtWidgets.QWidget()
        self.sync_analog_output_unbuffered_tab.setObjectName("sync_analog_output_unbuffered_tab")
        self.gridLayout_33 = QtWidgets.QGridLayout(self.sync_analog_output_unbuffered_tab)
        self.gridLayout_33.setObjectName("gridLayout_33")
        self.sync_analog_output_unbuffered_label = QtWidgets.QLabel(self.sync_analog_output_unbuffered_tab)
        self.sync_analog_output_unbuffered_label.setWordWrap(True)
        self.sync_analog_output_unbuffered_label.setObjectName("sync_analog_output_unbuffered_label")
        self.gridLayout_33.addWidget(self.sync_analog_output_unbuffered_label, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_analog_output_tab.addTab(self.sync_analog_output_unbuffered_tab, "")
        self.gridLayout_25.addWidget(self.sync_analog_output_tab, 3, 1, 1, 1)
        self.sync_analog_input_channel_box = QtWidgets.QGroupBox(self.sync_analog_page)
        self.sync_analog_input_channel_box.setObjectName("sync_analog_input_channel_box")
        self.gridLayout_31 = QtWidgets.QGridLayout(self.sync_analog_input_channel_box)
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.sync_analog_input1_button = QtWidgets.QRadioButton(self.sync_analog_input_channel_box)
        self.sync_analog_input1_button.setChecked(True)
        self.sync_analog_input1_button.setObjectName("sync_analog_input1_button")
        self.sync_analog_input_channel_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_analog_input_channel_button_group.setObjectName("sync_analog_input_channel_button_group")
        self.sync_analog_input_channel_button_group.addButton(self.sync_analog_input1_button)
        self.gridLayout_31.addWidget(self.sync_analog_input1_button, 0, 0, 1, 1)
        self.sync_analog_input2_button = QtWidgets.QRadioButton(self.sync_analog_input_channel_box)
        self.sync_analog_input2_button.setObjectName("sync_analog_input2_button")
        self.sync_analog_input_channel_button_group.addButton(self.sync_analog_input2_button)
        self.gridLayout_31.addWidget(self.sync_analog_input2_button, 0, 1, 1, 1)
        self.sync_analog_input3_button = QtWidgets.QRadioButton(self.sync_analog_input_channel_box)
        self.sync_analog_input3_button.setObjectName("sync_analog_input3_button")
        self.sync_analog_input_channel_button_group.addButton(self.sync_analog_input3_button)
        self.gridLayout_31.addWidget(self.sync_analog_input3_button, 0, 2, 1, 1)
        self.sync_analog_input4_button = QtWidgets.QRadioButton(self.sync_analog_input_channel_box)
        self.sync_analog_input4_button.setObjectName("sync_analog_input4_button")
        self.sync_analog_input_channel_button_group.addButton(self.sync_analog_input4_button)
        self.gridLayout_31.addWidget(self.sync_analog_input4_button, 0, 3, 1, 1)
        self.gridLayout_25.addWidget(self.sync_analog_input_channel_box, 1, 1, 1, 1)
        self.sync_analog_LED_box = QtWidgets.QGroupBox(self.sync_analog_page)
        self.sync_analog_LED_box.setObjectName("sync_analog_LED_box")
        self.gridLayout_51 = QtWidgets.QGridLayout(self.sync_analog_LED_box)
        self.gridLayout_51.setObjectName("gridLayout_51")
        self.sync_analog_LED1_button = QtWidgets.QRadioButton(self.sync_analog_LED_box)
        self.sync_analog_LED1_button.setObjectName("sync_analog_LED1_button")
        self.sync_analog_led_channel_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_analog_led_channel_button_group.setObjectName("sync_analog_led_channel_button_group")
        self.sync_analog_led_channel_button_group.addButton(self.sync_analog_LED1_button)
        self.gridLayout_51.addWidget(self.sync_analog_LED1_button, 0, 0, 1, 1)
        self.sync_analog_LED4_button = QtWidgets.QRadioButton(self.sync_analog_LED_box)
        self.sync_analog_LED4_button.setObjectName("sync_analog_LED4_button")
        self.sync_analog_led_channel_button_group.addButton(self.sync_analog_LED4_button)
        self.gridLayout_51.addWidget(self.sync_analog_LED4_button, 0, 3, 1, 1)
        self.sync_analog_LEDn_button = QtWidgets.QRadioButton(self.sync_analog_LED_box)
        self.sync_analog_LEDn_button.setChecked(True)
        self.sync_analog_LEDn_button.setObjectName("sync_analog_LEDn_button")
        self.sync_analog_led_channel_button_group.addButton(self.sync_analog_LEDn_button)
        self.gridLayout_51.addWidget(self.sync_analog_LEDn_button, 0, 4, 1, 1)
        self.sync_analog_LED2_button = QtWidgets.QRadioButton(self.sync_analog_LED_box)
        self.sync_analog_LED2_button.setObjectName("sync_analog_LED2_button")
        self.sync_analog_led_channel_button_group.addButton(self.sync_analog_LED2_button)
        self.gridLayout_51.addWidget(self.sync_analog_LED2_button, 0, 1, 1, 1)
        self.sync_analog_LED3_button = QtWidgets.QRadioButton(self.sync_analog_LED_box)
        self.sync_analog_LED3_button.setObjectName("sync_analog_LED3_button")
        self.sync_analog_led_channel_button_group.addButton(self.sync_analog_LED3_button)
        self.gridLayout_51.addWidget(self.sync_analog_LED3_button, 0, 2, 1, 1)
        self.gridLayout_25.addWidget(self.sync_analog_LED_box, 0, 1, 1, 1)
        self.sync_toolbox.addItem(self.sync_analog_page, "")

        # Sync - confocal
        self.sync_confocal_page = QtWidgets.QWidget()
        self.sync_confocal_page.setGeometry(QtCore.QRect(0, -432, 735, 1030))
        self.sync_confocal_page.setObjectName("sync_confocal_page")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.sync_confocal_page)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.sync_confocal_frame = QtWidgets.QFrame(self.sync_confocal_page)
        self.sync_confocal_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_confocal_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_confocal_frame.setObjectName("sync_confocal_frame")
        self.gridLayout_39 = QtWidgets.QGridLayout(self.sync_confocal_frame)
        self.gridLayout_39.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_39.setObjectName("gridLayout_39")
        self.sync_confocal_shutter_box = QtWidgets.QGroupBox(self.sync_confocal_frame)
        self.sync_confocal_shutter_box.setObjectName("sync_confocal_shutter_box")
        self.gridLayout_63 = QtWidgets.QGridLayout(self.sync_confocal_shutter_box)
        self.gridLayout_63.setObjectName("gridLayout_63")
        self.sync_confocal_shutter_high_button = QtWidgets.QRadioButton(self.sync_confocal_shutter_box)
        self.sync_confocal_shutter_high_button.setChecked(True)
        self.sync_confocal_shutter_high_button.setObjectName("sync_confocal_shutter_high_button")
        self.sync_confocal_shutter_polarity_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_confocal_shutter_polarity_button_group.setObjectName("sync_confocal_shutter_polarity_button_group")
        self.sync_confocal_shutter_polarity_button_group.addButton(self.sync_confocal_shutter_high_button)
        self.gridLayout_63.addWidget(self.sync_confocal_shutter_high_button, 1, 1, 1, 1)
        self.sync_confocal_shutter_polarity_label = QtWidgets.QLabel(self.sync_confocal_shutter_box)
        self.sync_confocal_shutter_polarity_label.setMinimumSize(QtCore.QSize(0, 0))
        self.sync_confocal_shutter_polarity_label.setObjectName("sync_confocal_shutter_polarity_label")
        self.gridLayout_63.addWidget(self.sync_confocal_shutter_polarity_label, 1, 0, 1, 1)
        self.sync_confocal_shutter_low_button = QtWidgets.QRadioButton(self.sync_confocal_shutter_box)
        self.sync_confocal_shutter_low_button.setObjectName("sync_confocal_shutter_low_button")
        self.sync_confocal_shutter_polarity_button_group.addButton(self.sync_confocal_shutter_low_button)
        self.gridLayout_63.addWidget(self.sync_confocal_shutter_low_button, 1, 2, 1, 1)
        self.sync_confocal_shutter_label = QtWidgets.QLabel(self.sync_confocal_shutter_box)
        self.sync_confocal_shutter_label.setObjectName("sync_confocal_shutter_label")
        self.gridLayout_63.addWidget(self.sync_confocal_shutter_label, 0, 0, 1, 3)
        self.gridLayout_63.setColumnStretch(2, 10)
        self.gridLayout_39.addWidget(self.sync_confocal_shutter_box, 0, 0, 1, 1)
        self.sync_confocal_line_box = QtWidgets.QGroupBox(self.sync_confocal_frame)
        self.sync_confocal_line_box.setObjectName("sync_confocal_line_box")
        self.gridLayout_49 = QtWidgets.QGridLayout(self.sync_confocal_line_box)
        self.gridLayout_49.setObjectName("gridLayout_49")
        self.sync_confocal_line_channel_box = QtWidgets.QGroupBox(self.sync_confocal_line_box)
        self.sync_confocal_line_channel_box.setObjectName("sync_confocal_line_channel_box")
        self.gridLayout_48 = QtWidgets.QGridLayout(self.sync_confocal_line_channel_box)
        self.gridLayout_48.setObjectName("gridLayout_48")
        self.sync_confocal_line_input1_button = QtWidgets.QRadioButton(self.sync_confocal_line_channel_box)
        self.sync_confocal_line_input1_button.setEnabled(False)
        self.sync_confocal_line_input1_button.setCheckable(False)
        self.sync_confocal_line_input1_button.setChecked(False)
        self.sync_confocal_line_input1_button.setObjectName("sync_confocal_line_input1_button")
        self.sync_confocal_line_input_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_confocal_line_input_button_group.setObjectName("sync_confocal_line_input_button_group")
        self.sync_confocal_line_input_button_group.addButton(self.sync_confocal_line_input1_button)
        self.gridLayout_48.addWidget(self.sync_confocal_line_input1_button, 0, 0, 1, 1)
        self.sync_confocal_line_input2_button = QtWidgets.QRadioButton(self.sync_confocal_line_channel_box)
        self.sync_confocal_line_input2_button.setChecked(True)
        self.sync_confocal_line_input2_button.setObjectName("sync_confocal_line_input2_button")
        self.sync_confocal_line_input_button_group.addButton(self.sync_confocal_line_input2_button)
        self.gridLayout_48.addWidget(self.sync_confocal_line_input2_button, 0, 1, 1, 1)
        self.sync_confocal_line_input3_button = QtWidgets.QRadioButton(self.sync_confocal_line_channel_box)
        self.sync_confocal_line_input3_button.setObjectName("sync_confocal_line_input3_button")
        self.sync_confocal_line_input_button_group.addButton(self.sync_confocal_line_input3_button)
        self.gridLayout_48.addWidget(self.sync_confocal_line_input3_button, 0, 2, 1, 1)
        self.sync_confocal_line_input4_button = QtWidgets.QRadioButton(self.sync_confocal_line_channel_box)
        self.sync_confocal_line_input4_button.setObjectName("sync_confocal_line_input4_button")
        self.sync_confocal_line_input_button_group.addButton(self.sync_confocal_line_input4_button)
        self.gridLayout_48.addWidget(self.sync_confocal_line_input4_button, 0, 3, 1, 1)
        self.gridLayout_49.addWidget(self.sync_confocal_line_channel_box, 0, 0, 1, 1)
        self.sync_confocal_line_tab = QtWidgets.QTabWidget(self.sync_confocal_line_box)
        self.sync_confocal_line_tab.setObjectName("sync_confocal_line_tab")
        self.sync_confocal_line_digital_tab = QtWidgets.QWidget()
        self.sync_confocal_line_digital_tab.setObjectName("sync_confocal_line_digital_tab")
        self.gridLayout_65 = QtWidgets.QGridLayout(self.sync_confocal_line_digital_tab)
        self.gridLayout_65.setObjectName("gridLayout_65")
        self.sync_confocal_line_digital_label = QtWidgets.QLabel(self.sync_confocal_line_digital_tab)
        self.sync_confocal_line_digital_label.setObjectName("sync_confocal_line_digital_label")
        self.gridLayout_65.addWidget(self.sync_confocal_line_digital_label, 0, 0, 1, 1)
        self.sync_confocal_line_digital_high_button = QtWidgets.QRadioButton(self.sync_confocal_line_digital_tab)
        self.sync_confocal_line_digital_high_button.setChecked(True)
        self.sync_confocal_line_digital_high_button.setObjectName("sync_confocal_line_digital_high_button")
        self.sync_confocal_line_digital_polarity_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_confocal_line_digital_polarity_button_group.setObjectName("sync_confocal_line_digital_polarity_button_group")
        self.sync_confocal_line_digital_polarity_button_group.addButton(self.sync_confocal_line_digital_high_button)
        self.gridLayout_65.addWidget(self.sync_confocal_line_digital_high_button, 0, 1, 1, 1)
        self.sync_confocal_line_digital_low_button = QtWidgets.QRadioButton(self.sync_confocal_line_digital_tab)
        self.sync_confocal_line_digital_low_button.setObjectName("sync_confocal_line_digital_low_button")
        self.sync_confocal_line_digital_polarity_button_group.addButton(self.sync_confocal_line_digital_low_button)
        self.gridLayout_65.addWidget(self.sync_confocal_line_digital_low_button, 0, 2, 1, 1)
        self.gridLayout_65.setColumnStretch(2, 10)
        self.sync_confocal_line_tab.addTab(self.sync_confocal_line_digital_tab, "")
        self.sync_confocal_line_analog_tab = QtWidgets.QWidget()
        self.sync_confocal_line_analog_tab.setObjectName("sync_confocal_line_analog_tab")
        self.gridLayout_66 = QtWidgets.QGridLayout(self.sync_confocal_line_analog_tab)
        self.gridLayout_66.setObjectName("gridLayout_66")
        self.sync_confocal_line_analog_polarity_label = QtWidgets.QLabel(self.sync_confocal_line_analog_tab)
        self.sync_confocal_line_analog_polarity_label.setObjectName("sync_confocal_line_analog_polarity_label")
        self.gridLayout_66.addWidget(self.sync_confocal_line_analog_polarity_label, 1, 0, 1, 1)
        self.sync_confocal_line_analog_threshold_label1 = QtWidgets.QLabel(self.sync_confocal_line_analog_tab)
        self.sync_confocal_line_analog_threshold_label1.setObjectName("sync_confocal_line_analog_threshold_label1")
        self.gridLayout_66.addWidget(self.sync_confocal_line_analog_threshold_label1, 0, 0, 1, 1)
        self.sync_confocal_line_analog_polarity_above_button = QtWidgets.QRadioButton(self.sync_confocal_line_analog_tab)
        self.sync_confocal_line_analog_polarity_above_button.setChecked(True)
        self.sync_confocal_line_analog_polarity_above_button.setObjectName("sync_confocal_line_analog_polarity_above_button")
        self.sync_confocal_line_analog_polarity_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_confocal_line_analog_polarity_button_group.setObjectName("sync_confocal_line_analog_polarity_button_group")
        self.sync_confocal_line_analog_polarity_button_group.addButton(self.sync_confocal_line_analog_polarity_above_button)
        self.gridLayout_66.addWidget(self.sync_confocal_line_analog_polarity_above_button, 1, 1, 1, 1)
        self.sync_confocal_line_analog_polarity_below_button = QtWidgets.QRadioButton(self.sync_confocal_line_analog_tab)
        self.sync_confocal_line_analog_polarity_below_button.setObjectName("sync_confocal_line_analog_polarity_below_button")
        self.sync_confocal_line_analog_polarity_button_group.addButton(self.sync_confocal_line_analog_polarity_below_button)
        self.gridLayout_66.addWidget(self.sync_confocal_line_analog_polarity_below_button, 1, 2, 1, 1)
        self.sync_confocal_line_analog_threshold_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_line_analog_tab)
        self.sync_confocal_line_analog_threshold_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_line_analog_threshold_box.setDecimals(3)
        self.sync_confocal_line_analog_threshold_box.setMinimum(0.01)
        self.sync_confocal_line_analog_threshold_box.setMaximum(3.29)
        self.sync_confocal_line_analog_threshold_box.setSingleStep(0.1)
        self.sync_confocal_line_analog_threshold_box.setObjectName("sync_confocal_line_analog_threshold_box")
        self.gridLayout_66.addWidget(self.sync_confocal_line_analog_threshold_box, 0, 1, 1, 1)
        self.sync_confocal_line_analog_threshold_label2 = QtWidgets.QLabel(self.sync_confocal_line_analog_tab)
        self.sync_confocal_line_analog_threshold_label2.setObjectName("sync_confocal_line_analog_threshold_label2")
        self.gridLayout_66.addWidget(self.sync_confocal_line_analog_threshold_label2, 0, 2, 1, 1)
        self.sync_confocal_line_tab.addTab(self.sync_confocal_line_analog_tab, "")
        self.gridLayout_49.addWidget(self.sync_confocal_line_tab, 1, 0, 1, 1)
        self.gridLayout_39.addWidget(self.sync_confocal_line_box, 1, 0, 1, 1)
        self.sync_confocal_delay_box = QtWidgets.QGroupBox(self.sync_confocal_frame)
        self.sync_confocal_delay_box.setObjectName("sync_confocal_delay_box")
        self.gridLayout_37 = QtWidgets.QGridLayout(self.sync_confocal_delay_box)
        self.gridLayout_37.setObjectName("gridLayout_37")
        self.sync_confocal_delay2_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_delay_box)
        self.sync_confocal_delay2_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_delay2_box.setMaximum(23860929.0)
        self.sync_confocal_delay2_box.setObjectName("sync_confocal_delay2_box")
        self.gridLayout_37.addWidget(self.sync_confocal_delay2_box, 2, 1, 1, 1)
        self.sync_confocal_delay3_label1 = QtWidgets.QLabel(self.sync_confocal_delay_box)
        self.sync_confocal_delay3_label1.setObjectName("sync_confocal_delay3_label1")
        self.gridLayout_37.addWidget(self.sync_confocal_delay3_label1, 3, 0, 1, 1)
        self.sync_confocal_delay1_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_delay_box)
        self.sync_confocal_delay1_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_delay1_box.setMaximum(23860929.0)
        self.sync_confocal_delay1_box.setObjectName("sync_confocal_delay1_box")
        self.gridLayout_37.addWidget(self.sync_confocal_delay1_box, 1, 1, 1, 1)
        self.sync_confocal_scan_mode_frame = QtWidgets.QFrame(self.sync_confocal_delay_box)
        self.sync_confocal_scan_mode_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_confocal_scan_mode_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_confocal_scan_mode_frame.setObjectName("sync_confocal_scan_mode_frame")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.sync_confocal_scan_mode_frame)
        self.gridLayout_29.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.sync_confocal_scan_unidirectional_button = QtWidgets.QRadioButton(self.sync_confocal_scan_mode_frame)
        self.sync_confocal_scan_unidirectional_button.setObjectName("sync_confocal_scan_unidirectional_button")
        self.sync_confocal_scan_mode_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_confocal_scan_mode_button_group.setObjectName("sync_confocal_scan_mode_button_group")
        self.sync_confocal_scan_mode_button_group.addButton(self.sync_confocal_scan_unidirectional_button)
        self.gridLayout_29.addWidget(self.sync_confocal_scan_unidirectional_button, 2, 1, 1, 1)
        self.sync_confocal_scan_mode_label = QtWidgets.QLabel(self.sync_confocal_scan_mode_frame)
        self.sync_confocal_scan_mode_label.setObjectName("sync_confocal_scan_mode_label")
        self.gridLayout_29.addWidget(self.sync_confocal_scan_mode_label, 2, 0, 1, 1)
        self.sync_confocal_scan_bidirectional_button = QtWidgets.QRadioButton(self.sync_confocal_scan_mode_frame)
        self.sync_confocal_scan_bidirectional_button.setChecked(True)
        self.sync_confocal_scan_bidirectional_button.setObjectName("sync_confocal_scan_bidirectional_button")
        self.sync_confocal_scan_mode_button_group.addButton(self.sync_confocal_scan_bidirectional_button)
        self.gridLayout_29.addWidget(self.sync_confocal_scan_bidirectional_button, 2, 2, 1, 1)
        self.gridLayout_37.addWidget(self.sync_confocal_scan_mode_frame, 0, 0, 1, 3)
        self.sync_confocal_delay1_label1 = QtWidgets.QLabel(self.sync_confocal_delay_box)
        self.sync_confocal_delay1_label1.setObjectName("sync_confocal_delay1_label1")
        self.gridLayout_37.addWidget(self.sync_confocal_delay1_label1, 1, 0, 1, 1)
        self.sync_confocal_delay3_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_delay_box)
        self.sync_confocal_delay3_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_delay3_box.setMaximum(23860929.0)
        self.sync_confocal_delay3_box.setObjectName("sync_confocal_delay3_box")
        self.gridLayout_37.addWidget(self.sync_confocal_delay3_box, 3, 1, 1, 1)
        self.sync_confocal_delay2_label2 = QtWidgets.QLabel(self.sync_confocal_delay_box)
        self.sync_confocal_delay2_label2.setObjectName("sync_confocal_delay2_label2")
        self.gridLayout_37.addWidget(self.sync_confocal_delay2_label2, 2, 2, 1, 1)
        self.sync_confocal_delay2_label1 = QtWidgets.QLabel(self.sync_confocal_delay_box)
        self.sync_confocal_delay2_label1.setObjectName("sync_confocal_delay2_label1")
        self.gridLayout_37.addWidget(self.sync_confocal_delay2_label1, 2, 0, 1, 1)
        self.sync_confocal_delay1_label2 = QtWidgets.QLabel(self.sync_confocal_delay_box)
        self.sync_confocal_delay1_label2.setObjectName("sync_confocal_delay1_label2")
        self.gridLayout_37.addWidget(self.sync_confocal_delay1_label2, 1, 2, 1, 1)
        self.sync_confocal_delay3_label2 = QtWidgets.QLabel(self.sync_confocal_delay_box)
        self.sync_confocal_delay3_label2.setObjectName("sync_confocal_delay3_label2")
        self.gridLayout_37.addWidget(self.sync_confocal_delay3_label2, 3, 2, 1, 1)
        self.gridLayout_39.addWidget(self.sync_confocal_delay_box, 2, 0, 1, 1)
        self.sync_confocal_image_box = QtWidgets.QGroupBox(self.sync_confocal_frame)
        self.sync_confocal_image_box.setStatusTip("")
        self.sync_confocal_image_box.setObjectName("sync_confocal_image_box")
        self.gridLayout_50 = QtWidgets.QGridLayout(self.sync_confocal_image_box)
        self.gridLayout_50.setObjectName("gridLayout_50")
        self.sync_confocal_image_tab = QtWidgets.QTabWidget(self.sync_confocal_image_box)
        self.sync_confocal_image_tab.setObjectName("sync_confocal_image_tab")
        self.sync_confocal_image_off_tab = QtWidgets.QWidget()
        self.sync_confocal_image_off_tab.setObjectName("sync_confocal_image_off_tab")
        self.gridLayout_62 = QtWidgets.QGridLayout(self.sync_confocal_image_off_tab)
        self.gridLayout_62.setObjectName("gridLayout_62")
        self.sync_confocal_image_off_label = QtWidgets.QLabel(self.sync_confocal_image_off_tab)
        self.sync_confocal_image_off_label.setObjectName("sync_confocal_image_off_label")
        self.gridLayout_62.addWidget(self.sync_confocal_image_off_label, 0, 0, 1, 1)
        self.sync_confocal_image_tab.addTab(self.sync_confocal_image_off_tab, "")
        self.sync_confocal_image_constant_tab = QtWidgets.QWidget()
        self.sync_confocal_image_constant_tab.setObjectName("sync_confocal_image_constant_tab")
        self.gridLayout_64 = QtWidgets.QGridLayout(self.sync_confocal_image_constant_tab)
        self.gridLayout_64.setObjectName("gridLayout_64")
        self.sync_confocal_image_constant_LED_box = QtWidgets.QGroupBox(self.sync_confocal_image_constant_tab)
        self.sync_confocal_image_constant_LED_box.setObjectName("sync_confocal_image_constant_LED_box")
        self.gridLayout_67 = QtWidgets.QGridLayout(self.sync_confocal_image_constant_LED_box)
        self.gridLayout_67.setObjectName("gridLayout_67")
        self.sync_confocal_image_constant_LED3_button = QtWidgets.QRadioButton(self.sync_confocal_image_constant_LED_box)
        self.sync_confocal_image_constant_LED3_button.setObjectName("sync_confocal_image_constant_LED3_button")
        self.sync_confocal_image_LED_channel_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_confocal_image_LED_channel_button_group.setObjectName("sync_confocal_image_LED_channel_button_group")
        self.sync_confocal_image_LED_channel_button_group.addButton(self.sync_confocal_image_constant_LED3_button)
        self.gridLayout_67.addWidget(self.sync_confocal_image_constant_LED3_button, 0, 2, 1, 1)
        self.sync_confocal_image_constant_LED1_button = QtWidgets.QRadioButton(self.sync_confocal_image_constant_LED_box)
        self.sync_confocal_image_constant_LED1_button.setObjectName("sync_confocal_image_constant_LED1_button")
        self.sync_confocal_image_LED_channel_button_group.addButton(self.sync_confocal_image_constant_LED1_button)
        self.gridLayout_67.addWidget(self.sync_confocal_image_constant_LED1_button, 0, 0, 1, 1)
        self.sync_confocal_image_constant_LED2_button = QtWidgets.QRadioButton(self.sync_confocal_image_constant_LED_box)
        self.sync_confocal_image_constant_LED2_button.setObjectName("sync_confocal_image_constant_LED2_button")
        self.sync_confocal_image_LED_channel_button_group.addButton(self.sync_confocal_image_constant_LED2_button)
        self.gridLayout_67.addWidget(self.sync_confocal_image_constant_LED2_button, 0, 1, 1, 1)
        self.sync_confocal_image_constant_LEDn_button = QtWidgets.QRadioButton(self.sync_confocal_image_constant_LED_box)
        self.sync_confocal_image_constant_LEDn_button.setChecked(True)
        self.sync_confocal_image_constant_LEDn_button.setObjectName("sync_confocal_image_constant_LEDn_button")
        self.sync_confocal_image_LED_channel_button_group.addButton(self.sync_confocal_image_constant_LEDn_button)
        self.gridLayout_67.addWidget(self.sync_confocal_image_constant_LEDn_button, 0, 4, 1, 1)
        self.sync_confocal_image_constant_LED4_button = QtWidgets.QRadioButton(self.sync_confocal_image_constant_LED_box)
        self.sync_confocal_image_constant_LED4_button.setObjectName("sync_confocal_image_constant_LED4_button")
        self.sync_confocal_image_LED_channel_button_group.addButton(self.sync_confocal_image_constant_LED4_button)
        self.gridLayout_67.addWidget(self.sync_confocal_image_constant_LED4_button, 0, 3, 1, 1)
        self.gridLayout_64.addWidget(self.sync_confocal_image_constant_LED_box, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_confocal_image_constant_config_frame = QtWidgets.QFrame(self.sync_confocal_image_constant_tab)
        self.sync_confocal_image_constant_config_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_confocal_image_constant_config_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_confocal_image_constant_config_frame.setObjectName("sync_confocal_image_constant_config_frame")
        self.gridLayout_69 = QtWidgets.QGridLayout(self.sync_confocal_image_constant_config_frame)
        self.gridLayout_69.setObjectName("gridLayout_69")
        self.sync_confocal_image_constant_config_current_label2 = QtWidgets.QLabel(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_current_label2.setObjectName("sync_confocal_image_constant_config_current_label2")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_current_label2, 1, 2, 1, 1)
        self.sync_confocal_image_constant_config_PWM_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_PWM_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_image_constant_config_PWM_box.setDecimals(3)
        self.sync_confocal_image_constant_config_PWM_box.setMaximum(100.0)
        self.sync_confocal_image_constant_config_PWM_box.setObjectName("sync_confocal_image_constant_config_PWM_box")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_PWM_box, 0, 1, 1, 1)
        self.sync_confocal_image_constant_config_PWM_label2 = QtWidgets.QLabel(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_PWM_label2.setObjectName("sync_confocal_image_constant_config_PWM_label2")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_PWM_label2, 0, 2, 1, 1)
        self.sync_confocal_image_constant_config_duration_label1 = QtWidgets.QLabel(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_duration_label1.setObjectName("sync_confocal_image_constant_config_duration_label1")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_duration_label1, 2, 0, 1, 1)
        self.sync_confocal_image_constant_config_duration_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_duration_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_image_constant_config_duration_box.setReadOnly(False)
        self.sync_confocal_image_constant_config_duration_box.setSpecialValueText("")
        self.sync_confocal_image_constant_config_duration_box.setDecimals(3)
        self.sync_confocal_image_constant_config_duration_box.setMaximum(4294.96)
        self.sync_confocal_image_constant_config_duration_box.setObjectName("sync_confocal_image_constant_config_duration_box")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_duration_box, 2, 1, 1, 1)
        self.sync_confocal_image_constant_config_current_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_current_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_image_constant_config_current_box.setDecimals(3)
        self.sync_confocal_image_constant_config_current_box.setMaximum(100.0)
        self.sync_confocal_image_constant_config_current_box.setObjectName("sync_confocal_image_constant_config_current_box")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_current_box, 1, 1, 1, 1)
        self.sync_confocal_image_constant_config_PWM_label1 = QtWidgets.QLabel(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_PWM_label1.setObjectName("sync_confocal_image_constant_config_PWM_label1")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_PWM_label1, 0, 0, 1, 1)
        self.sync_confocal_image_constant_config_duration_label2 = QtWidgets.QLabel(self.sync_confocal_image_constant_config_frame)
        font = QtGui.QFont()
        font.setStrikeOut(False)
        self.sync_confocal_image_constant_config_duration_label2.setFont(font)
        self.sync_confocal_image_constant_config_duration_label2.setObjectName("sync_confocal_image_constant_config_duration_label2")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_duration_label2, 2, 2, 1, 1)
        self.sync_confocal_image_constant_config_current_label1 = QtWidgets.QLabel(self.sync_confocal_image_constant_config_frame)
        self.sync_confocal_image_constant_config_current_label1.setObjectName("sync_confocal_image_constant_config_current_label1")
        self.gridLayout_69.addWidget(self.sync_confocal_image_constant_config_current_label1, 1, 0, 1, 1)
        self.gridLayout_69.setColumnStretch(1, 10)
        self.gridLayout_64.addWidget(self.sync_confocal_image_constant_config_frame, 1, 0, 1, 1)
        self.sync_confocal_image_tab.addTab(self.sync_confocal_image_constant_tab, "")
        self.sync_confocal_image_sequence_tab = QtWidgets.QWidget()
        self.sync_confocal_image_sequence_tab.setObjectName("sync_confocal_image_sequence_tab")
        self.gridLayout_76 = QtWidgets.QGridLayout(self.sync_confocal_image_sequence_tab)
        self.gridLayout_76.setObjectName("gridLayout_76")
        self.sync_confocal_image_sequence_table = QtWidgets.QTableWidget(self.sync_confocal_image_sequence_tab)
        self.sync_confocal_image_sequence_table.setRowCount(100)
        self.sync_confocal_image_sequence_table.setColumnCount(4)
        self.sync_confocal_image_sequence_table.setObjectName("sync_confocal_image_sequence_table")
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_image_sequence_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_image_sequence_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_image_sequence_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_image_sequence_table.setHorizontalHeaderItem(3, item)
        self.gridLayout_76.addWidget(self.sync_confocal_image_sequence_table, 0, 0, 1, 2)
        self.sync_confocal_image_sequence_load_button = QtWidgets.QPushButton(self.sync_confocal_image_sequence_tab)
        self.sync_confocal_image_sequence_load_button.setObjectName("sync_confocal_image_sequence_load_button")
        self.gridLayout_76.addWidget(self.sync_confocal_image_sequence_load_button, 1, 0, 1, 1)
        self.sync_confocal_image_sequence_save_button = QtWidgets.QPushButton(self.sync_confocal_image_sequence_tab)
        self.sync_confocal_image_sequence_save_button.setObjectName("sync_confocal_image_sequence_save_button")
        self.gridLayout_76.addWidget(self.sync_confocal_image_sequence_save_button, 1, 1, 1, 1)
        self.sync_confocal_image_tab.addTab(self.sync_confocal_image_sequence_tab, "")
        self.sync_confocal_image_external_tab = QtWidgets.QWidget()
        self.sync_confocal_image_external_tab.setObjectName("sync_confocal_image_external_tab")
        self.gridLayout_36 = QtWidgets.QGridLayout(self.sync_confocal_image_external_tab)
        self.gridLayout_36.setObjectName("gridLayout_36")
        self.sync_confocal_image_external_label = QtWidgets.QLabel(self.sync_confocal_image_external_tab)
        self.sync_confocal_image_external_label.setWordWrap(True)
        self.sync_confocal_image_external_label.setObjectName("sync_confocal_image_external_label")
        self.gridLayout_36.addWidget(self.sync_confocal_image_external_label, 0, 0, 1, 1)
        self.sync_confocal_image_tab.addTab(self.sync_confocal_image_external_tab, "")
        self.gridLayout_50.addWidget(self.sync_confocal_image_tab, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.gridLayout_39.addWidget(self.sync_confocal_image_box, 3, 0, 1, 1)
        self.sync_confocal_flyback_box = QtWidgets.QGroupBox(self.sync_confocal_frame)
        self.sync_confocal_flyback_box.setStatusTip("")
        self.sync_confocal_flyback_box.setObjectName("sync_confocal_flyback_box")
        self.gridLayout_52 = QtWidgets.QGridLayout(self.sync_confocal_flyback_box)
        self.gridLayout_52.setObjectName("gridLayout_52")
        self.sync_confocal_flyback_tab = QtWidgets.QTabWidget(self.sync_confocal_flyback_box)
        self.sync_confocal_flyback_tab.setObjectName("sync_confocal_flyback_tab")
        self.sync_confocal_flyback_off_tab = QtWidgets.QWidget()
        self.sync_confocal_flyback_off_tab.setObjectName("sync_confocal_flyback_off_tab")
        self.gridLayout_89 = QtWidgets.QGridLayout(self.sync_confocal_flyback_off_tab)
        self.gridLayout_89.setObjectName("gridLayout_89")
        self.sync_confocal_flyback_off_label = QtWidgets.QLabel(self.sync_confocal_flyback_off_tab)
        self.sync_confocal_flyback_off_label.setObjectName("sync_confocal_flyback_off_label")
        self.gridLayout_89.addWidget(self.sync_confocal_flyback_off_label, 0, 0, 1, 1)
        self.sync_confocal_flyback_tab.addTab(self.sync_confocal_flyback_off_tab, "")
        self.sync_confocal_flyback_constant_tab = QtWidgets.QWidget()
        self.sync_confocal_flyback_constant_tab.setObjectName("sync_confocal_flyback_constant_tab")
        self.gridLayout_90 = QtWidgets.QGridLayout(self.sync_confocal_flyback_constant_tab)
        self.gridLayout_90.setObjectName("gridLayout_90")
        self.sync_confocal_flyback_constant_LED_box = QtWidgets.QGroupBox(self.sync_confocal_flyback_constant_tab)
        self.sync_confocal_flyback_constant_LED_box.setObjectName("sync_confocal_flyback_constant_LED_box")
        self.gridLayout_91 = QtWidgets.QGridLayout(self.sync_confocal_flyback_constant_LED_box)
        self.gridLayout_91.setObjectName("gridLayout_91")
        self.sync_confocal_flyback_constant_LED3_button = QtWidgets.QRadioButton(self.sync_confocal_flyback_constant_LED_box)
        self.sync_confocal_flyback_constant_LED3_button.setObjectName("sync_confocal_flyback_constant_LED3_button")
        self.sync_confocal_flyback_LED_channel_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_confocal_flyback_LED_channel_button_group.setObjectName("sync_confocal_flyback_LED_channel_button_group")
        self.sync_confocal_flyback_LED_channel_button_group.addButton(self.sync_confocal_flyback_constant_LED3_button)
        self.gridLayout_91.addWidget(self.sync_confocal_flyback_constant_LED3_button, 0, 2, 1, 1)
        self.sync_confocal_flyback_constant_LED1_button = QtWidgets.QRadioButton(self.sync_confocal_flyback_constant_LED_box)
        self.sync_confocal_flyback_constant_LED1_button.setObjectName("sync_confocal_flyback_constant_LED1_button")
        self.sync_confocal_flyback_LED_channel_button_group.addButton(self.sync_confocal_flyback_constant_LED1_button)
        self.gridLayout_91.addWidget(self.sync_confocal_flyback_constant_LED1_button, 0, 0, 1, 1)
        self.sync_confocal_flyback_constant_LED2_button = QtWidgets.QRadioButton(self.sync_confocal_flyback_constant_LED_box)
        self.sync_confocal_flyback_constant_LED2_button.setObjectName("sync_confocal_flyback_constant_LED2_button")
        self.sync_confocal_flyback_LED_channel_button_group.addButton(self.sync_confocal_flyback_constant_LED2_button)
        self.gridLayout_91.addWidget(self.sync_confocal_flyback_constant_LED2_button, 0, 1, 1, 1)
        self.sync_confocal_flyback_constant_LEDn_button = QtWidgets.QRadioButton(self.sync_confocal_flyback_constant_LED_box)
        self.sync_confocal_flyback_constant_LEDn_button.setChecked(True)
        self.sync_confocal_flyback_constant_LEDn_button.setObjectName("sync_confocal_flyback_constant_LEDn_button")
        self.sync_confocal_flyback_LED_channel_button_group.addButton(self.sync_confocal_flyback_constant_LEDn_button)
        self.gridLayout_91.addWidget(self.sync_confocal_flyback_constant_LEDn_button, 0, 4, 1, 1)
        self.sync_confocal_flyback_constant_LED4_button = QtWidgets.QRadioButton(self.sync_confocal_flyback_constant_LED_box)
        self.sync_confocal_flyback_constant_LED4_button.setObjectName("sync_confocal_flyback_constant_LED4_button")
        self.sync_confocal_flyback_LED_channel_button_group.addButton(self.sync_confocal_flyback_constant_LED4_button)
        self.gridLayout_91.addWidget(self.sync_confocal_flyback_constant_LED4_button, 0, 3, 1, 1)
        self.gridLayout_90.addWidget(self.sync_confocal_flyback_constant_LED_box, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_confocal_flyback_constant_config_frame = QtWidgets.QFrame(self.sync_confocal_flyback_constant_tab)
        self.sync_confocal_flyback_constant_config_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sync_confocal_flyback_constant_config_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sync_confocal_flyback_constant_config_frame.setObjectName("sync_confocal_flyback_constant_config_frame")
        self.gridLayout_92 = QtWidgets.QGridLayout(self.sync_confocal_flyback_constant_config_frame)
        self.gridLayout_92.setObjectName("gridLayout_92")
        self.sync_confocal_flyback_constant_config_current_label2 = QtWidgets.QLabel(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_current_label2.setObjectName("sync_confocal_flyback_constant_config_current_label2")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_current_label2, 1, 2, 1, 1)
        self.sync_confocal_flyback_constant_config_PWM_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_PWM_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_flyback_constant_config_PWM_box.setDecimals(3)
        self.sync_confocal_flyback_constant_config_PWM_box.setMaximum(100.0)
        self.sync_confocal_flyback_constant_config_PWM_box.setObjectName("sync_confocal_flyback_constant_config_PWM_box")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_PWM_box, 0, 1, 1, 1)
        self.sync_confocal_flyback_constant_config_PWM_label2 = QtWidgets.QLabel(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_PWM_label2.setObjectName("sync_confocal_flyback_constant_config_PWM_label2")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_PWM_label2, 0, 2, 1, 1)
        self.sync_confocal_flyback_constant_config_duration_label1 = QtWidgets.QLabel(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_duration_label1.setObjectName("sync_confocal_flyback_constant_config_duration_label1")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_duration_label1, 2, 0, 1, 1)
        self.sync_confocal_flyback_constant_config_duration_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_duration_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_flyback_constant_config_duration_box.setReadOnly(False)
        self.sync_confocal_flyback_constant_config_duration_box.setSpecialValueText("")
        self.sync_confocal_flyback_constant_config_duration_box.setDecimals(3)
        self.sync_confocal_flyback_constant_config_duration_box.setMaximum(4294.96)
        self.sync_confocal_flyback_constant_config_duration_box.setObjectName("sync_confocal_flyback_constant_config_duration_box")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_duration_box, 2, 1, 1, 1)
        self.sync_confocal_flyback_constant_config_current_box = QtWidgets.QDoubleSpinBox(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_current_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sync_confocal_flyback_constant_config_current_box.setDecimals(3)
        self.sync_confocal_flyback_constant_config_current_box.setMaximum(100.0)
        self.sync_confocal_flyback_constant_config_current_box.setObjectName("sync_confocal_flyback_constant_config_current_box")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_current_box, 1, 1, 1, 1)
        self.sync_confocal_flyback_constant_config_PWM_label1 = QtWidgets.QLabel(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_PWM_label1.setObjectName("sync_confocal_flyback_constant_config_PWM_label1")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_PWM_label1, 0, 0, 1, 1)
        self.sync_confocal_flyback_constant_config_duration_label2 = QtWidgets.QLabel(self.sync_confocal_flyback_constant_config_frame)
        font = QtGui.QFont()
        font.setStrikeOut(False)
        self.sync_confocal_flyback_constant_config_duration_label2.setFont(font)
        self.sync_confocal_flyback_constant_config_duration_label2.setObjectName("sync_confocal_flyback_constant_config_duration_label2")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_duration_label2, 2, 2, 1, 1)
        self.sync_confocal_flyback_constant_config_current_label1 = QtWidgets.QLabel(self.sync_confocal_flyback_constant_config_frame)
        self.sync_confocal_flyback_constant_config_current_label1.setObjectName("sync_confocal_flyback_constant_config_current_label1")
        self.gridLayout_92.addWidget(self.sync_confocal_flyback_constant_config_current_label1, 1, 0, 1, 1)
        self.gridLayout_92.setColumnStretch(1, 10)
        self.gridLayout_90.addWidget(self.sync_confocal_flyback_constant_config_frame, 1, 0, 1, 1)
        self.sync_confocal_flyback_tab.addTab(self.sync_confocal_flyback_constant_tab, "")
        self.sync_confocal_flyback_sequence_tab = QtWidgets.QWidget()
        self.sync_confocal_flyback_sequence_tab.setObjectName("sync_confocal_flyback_sequence_tab")
        self.gridLayout_93 = QtWidgets.QGridLayout(self.sync_confocal_flyback_sequence_tab)
        self.gridLayout_93.setObjectName("gridLayout_93")
        self.sync_confocal_flyback_sequence_table = QtWidgets.QTableWidget(self.sync_confocal_flyback_sequence_tab)
        self.sync_confocal_flyback_sequence_table.setRowCount(100)
        self.sync_confocal_flyback_sequence_table.setColumnCount(4)
        self.sync_confocal_flyback_sequence_table.setObjectName("sync_confocal_flyback_sequence_table")
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_flyback_sequence_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_flyback_sequence_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_flyback_sequence_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sync_confocal_flyback_sequence_table.setHorizontalHeaderItem(3, item)
        self.gridLayout_93.addWidget(self.sync_confocal_flyback_sequence_table, 0, 0, 1, 2)
        self.sync_confocal_flyback_sequence_load_button = QtWidgets.QPushButton(self.sync_confocal_flyback_sequence_tab)
        self.sync_confocal_flyback_sequence_load_button.setObjectName("sync_confocal_flyback_sequence_load_button")
        self.gridLayout_93.addWidget(self.sync_confocal_flyback_sequence_load_button, 1, 0, 1, 1)
        self.sync_confocal_flyback_sequence_save_button = QtWidgets.QPushButton(self.sync_confocal_flyback_sequence_tab)
        self.sync_confocal_flyback_sequence_save_button.setObjectName("sync_confocal_flyback_sequence_save_button")
        self.gridLayout_93.addWidget(self.sync_confocal_flyback_sequence_save_button, 1, 1, 1, 1)
        self.sync_confocal_flyback_tab.addTab(self.sync_confocal_flyback_sequence_tab, "")
        self.sync_confocal_flyback_external_tab = QtWidgets.QWidget()
        self.sync_confocal_flyback_external_tab.setObjectName("sync_confocal_flyback_external_tab")
        self.gridLayout_38 = QtWidgets.QGridLayout(self.sync_confocal_flyback_external_tab)
        self.gridLayout_38.setObjectName("gridLayout_38")
        self.sync_confocal_flyback_external_label = QtWidgets.QLabel(self.sync_confocal_flyback_external_tab)
        self.sync_confocal_flyback_external_label.setWordWrap(True)
        self.sync_confocal_flyback_external_label.setObjectName("sync_confocal_flyback_external_label")
        self.gridLayout_38.addWidget(self.sync_confocal_flyback_external_label, 0, 0, 1, 1)
        self.sync_confocal_flyback_tab.addTab(self.sync_confocal_flyback_external_tab, "")
        self.gridLayout_52.addWidget(self.sync_confocal_flyback_tab, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.gridLayout_39.addWidget(self.sync_confocal_flyback_box, 4, 0, 1, 1)
        self.gridLayout_26.addWidget(self.sync_confocal_frame, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_toolbox.addItem(self.sync_confocal_page, "")

        # Sync - serial
        self.sync_serial_page = QtWidgets.QWidget()
        self.sync_serial_page.setGeometry(QtCore.QRect(0, 0, 752, 598))
        self.sync_serial_page.setObjectName("sync_serial_page")
        self.gridLayout_68 = QtWidgets.QGridLayout(self.sync_serial_page)
        self.gridLayout_68.setObjectName("gridLayout_68")
        self.sync_serial_label = QtWidgets.QLabel(self.sync_serial_page)
        self.sync_serial_label.setObjectName("sync_serial_label")
        self.gridLayout_68.addWidget(self.sync_serial_label, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_toolbox.addItem(self.sync_serial_page, "")

        # Sync - custom
        self.sync_custom_page = QtWidgets.QWidget()
        self.sync_custom_page.setGeometry(QtCore.QRect(0, 0, 752, 598))
        self.sync_custom_page.setObjectName("sync_custom_page")
        self.gridLayout_27 = QtWidgets.QGridLayout(self.sync_custom_page)
        self.gridLayout_27.setObjectName("gridLayout_27")
        self.sync_custom_label = QtWidgets.QLabel(self.sync_custom_page)
        self.sync_custom_label.setObjectName("sync_custom_label")
        self.gridLayout_27.addWidget(self.sync_custom_label, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.sync_toolbox.addItem(self.sync_custom_page, "")

        # Sync - global options
        self.gridLayout_23.addWidget(self.sync_toolbox, 1, 0, 1, 1)
        self.sync_scroll_area.setWidget(self.sync_scroll_contents)
        self.gridLayout_9.addWidget(self.sync_scroll_area, 0, 1, 1, 5)
        self.sync_save_button = QtWidgets.QPushButton(self.sync_tab)
        self.sync_save_button.setObjectName("sync_save_button")
        self.gridLayout_9.addWidget(self.sync_save_button, 2, 4, 1, 1)
        self.sync_upload_button = QtWidgets.QPushButton(self.sync_tab)
        self.sync_upload_button.setObjectName("sync_upload_button")
        self.gridLayout_9.addWidget(self.sync_upload_button, 2, 2, 1, 1)
        self.sync_output_box = QtWidgets.QGroupBox(self.sync_tab)
        self.sync_output_box.setObjectName("sync_output_box")
        self.gridLayout_40 = QtWidgets.QGridLayout(self.sync_output_box)
        self.gridLayout_40.setObjectName("gridLayout_40")
        self.sync_output1_button = QtWidgets.QRadioButton(self.sync_output_box)
        self.sync_output1_button.setObjectName("sync_output1_button")
        self.sync_output_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.sync_output_button_group.setObjectName("sync_output_button_group")
        self.sync_output_button_group.addButton(self.sync_output1_button)
        self.gridLayout_40.addWidget(self.sync_output1_button, 0, 0, 1, 1)
        self.sync_output3_button = QtWidgets.QRadioButton(self.sync_output_box)
        self.sync_output3_button.setObjectName("sync_output3_button")
        self.sync_output_button_group.addButton(self.sync_output3_button)
        self.gridLayout_40.addWidget(self.sync_output3_button, 0, 2, 1, 1)
        self.sync_output2_button = QtWidgets.QRadioButton(self.sync_output_box)
        self.sync_output2_button.setObjectName("sync_output2_button")
        self.sync_output_button_group.addButton(self.sync_output2_button)
        self.gridLayout_40.addWidget(self.sync_output2_button, 0, 1, 1, 1)
        self.sync_output_none_button = QtWidgets.QRadioButton(self.sync_output_box)
        self.sync_output_none_button.setChecked(True)
        self.sync_output_none_button.setObjectName("sync_output_none_button")
        self.sync_output_button_group.addButton(self.sync_output_none_button)
        self.gridLayout_40.addWidget(self.sync_output_none_button, 0, 3, 1, 1)
        self.gridLayout_9.addWidget(self.sync_output_box, 1, 1, 1, 5)
        self.gui_master_tab.addTab(self.sync_tab, "")


        ###   Configure Tab   ###
        self.configure_tab = QtWidgets.QWidget()
        self.configure_tab.setMinimumSize(QtCore.QSize(0, 0))
        self.configure_tab.setObjectName("configure_tab")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.configure_tab)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.configure_upload_button = QtWidgets.QPushButton(self.configure_tab)
        self.configure_upload_button.setObjectName("configure_upload_button")
        self.gridLayout_10.addWidget(self.configure_upload_button, 1, 1, 1, 1)
        self.configure_scroll_area = QtWidgets.QScrollArea(self.configure_tab)
        self.configure_scroll_area.setWidgetResizable(True)
        self.configure_scroll_area.setObjectName("configure_scroll_area")
        self.configure_scroll_area_contents = QtWidgets.QWidget()
        self.configure_scroll_area_contents.setGeometry(QtCore.QRect(0, 0, 611, 1103))
        self.configure_scroll_area_contents.setObjectName("configure_scroll_area_contents")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.configure_scroll_area_contents)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.configure_current_limit_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_current_limit_box.setObjectName("configure_current_limit_box")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.configure_current_limit_box)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.configure_current_limit_LED4_spin_box = QtWidgets.QDoubleSpinBox(self.configure_current_limit_box)
        self.configure_current_limit_LED4_spin_box.setSpecialValueText("")
        self.configure_current_limit_LED4_spin_box.setProperty("value", 1.0)
        self.configure_current_limit_LED4_spin_box.setObjectName("configure_current_limit_LED4_spin_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED4_spin_box, 1, 3, 1, 1)
        self.configure_current_limit_test_button = QtWidgets.QPushButton(self.configure_current_limit_box)
        self.configure_current_limit_test_button.setObjectName("configure_current_limit_test_button")
        self.gridLayout_17.addWidget(self.configure_current_limit_test_button, 2, 0, 1, 4)
        self.configure_current_limit_LED3_box = QtWidgets.QCheckBox(self.configure_current_limit_box)
        self.configure_current_limit_LED3_box.setChecked(True)
        self.configure_current_limit_LED3_box.setObjectName("configure_current_limit_LED3_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED3_box, 0, 2, 1, 1)
        self.configure_current_limit_LED2_box = QtWidgets.QCheckBox(self.configure_current_limit_box)
        self.configure_current_limit_LED2_box.setChecked(True)
        self.configure_current_limit_LED2_box.setObjectName("configure_current_limit_LED2_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED2_box, 1, 0, 1, 1)
        self.configure_current_limit_LED1_spin_box = QtWidgets.QDoubleSpinBox(self.configure_current_limit_box)
        self.configure_current_limit_LED1_spin_box.setSpecialValueText("")
        self.configure_current_limit_LED1_spin_box.setProperty("value", 1.0)
        self.configure_current_limit_LED1_spin_box.setObjectName("configure_current_limit_LED1_spin_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED1_spin_box, 0, 1, 1, 1)
        self.configure_current_limit_LED3_spin_box = QtWidgets.QDoubleSpinBox(self.configure_current_limit_box)
        self.configure_current_limit_LED3_spin_box.setSpecialValueText("")
        self.configure_current_limit_LED3_spin_box.setProperty("value", 1.0)
        self.configure_current_limit_LED3_spin_box.setObjectName("configure_current_limit_LED3_spin_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED3_spin_box, 0, 3, 1, 1)
        self.configure_current_limit_LED4_box = QtWidgets.QCheckBox(self.configure_current_limit_box)
        self.configure_current_limit_LED4_box.setChecked(True)
        self.configure_current_limit_LED4_box.setObjectName("configure_current_limit_LED4_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED4_box, 1, 2, 1, 1)
        self.configure_current_limit_LED2_spin_box = QtWidgets.QDoubleSpinBox(self.configure_current_limit_box)
        self.configure_current_limit_LED2_spin_box.setSpecialValueText("")
        self.configure_current_limit_LED2_spin_box.setProperty("value", 1.0)
        self.configure_current_limit_LED2_spin_box.setObjectName("configure_current_limit_LED2_spin_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED2_spin_box, 1, 1, 1, 1)
        self.configure_current_limit_LED1_box = QtWidgets.QCheckBox(self.configure_current_limit_box)
        self.configure_current_limit_LED1_box.setChecked(True)
        self.configure_current_limit_LED1_box.setObjectName("configure_current_limit_LED1_box")
        self.gridLayout_17.addWidget(self.configure_current_limit_LED1_box, 0, 0, 1, 1)
        self.gridLayout_17.setColumnStretch(1, 10)
        self.gridLayout_17.setColumnStretch(3, 10)
        self.gridLayout_16.addWidget(self.configure_current_limit_box, 1, 0, 1, 1)
        self.configure_fan_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_fan_box.setObjectName("configure_fan_box")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.configure_fan_box)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.configure_fan_driver_max_box = QtWidgets.QSpinBox(self.configure_fan_box)
        self.configure_fan_driver_max_box.setSpecialValueText("")
        self.configure_fan_driver_max_box.setMaximum(150)
        self.configure_fan_driver_max_box.setProperty("value", 60)
        self.configure_fan_driver_max_box.setObjectName("configure_fan_driver_max_box")
        self.gridLayout_13.addWidget(self.configure_fan_driver_max_box, 1, 1, 1, 1)
        self.configure_fan_external_min_label = QtWidgets.QLabel(self.configure_fan_box)
        self.configure_fan_external_min_label.setObjectName("configure_fan_external_min_label")
        self.gridLayout_13.addWidget(self.configure_fan_external_min_label, 0, 2, 1, 1)
        self.configure_fan_driver_min_label = QtWidgets.QLabel(self.configure_fan_box)
        self.configure_fan_driver_min_label.setObjectName("configure_fan_driver_min_label")
        self.gridLayout_13.addWidget(self.configure_fan_driver_min_label, 0, 0, 1, 1)
        self.configure_fan_driver_min_box = QtWidgets.QSpinBox(self.configure_fan_box)
        self.configure_fan_driver_min_box.setSpecialValueText("")
        self.configure_fan_driver_min_box.setMaximum(150)
        self.configure_fan_driver_min_box.setProperty("value", 30)
        self.configure_fan_driver_min_box.setObjectName("configure_fan_driver_min_box")
        self.gridLayout_13.addWidget(self.configure_fan_driver_min_box, 0, 1, 1, 1)
        self.configure_fan_external_max_label = QtWidgets.QLabel(self.configure_fan_box)
        self.configure_fan_external_max_label.setObjectName("configure_fan_external_max_label")
        self.gridLayout_13.addWidget(self.configure_fan_external_max_label, 1, 2, 1, 1)
        self.configure_fan_external_output_frame = QtWidgets.QFrame(self.configure_fan_box)
        self.configure_fan_external_output_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.configure_fan_external_output_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.configure_fan_external_output_frame.setObjectName("configure_fan_external_output_frame")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.configure_fan_external_output_frame)
        self.gridLayout_22.setContentsMargins(0, -1, 0, -1)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.configure_fan_external_output1_box = QtWidgets.QRadioButton(self.configure_fan_external_output_frame)
        self.configure_fan_external_output1_box.setObjectName("configure_fan_external_output1_box")
        self.configure_ext_fan_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.configure_ext_fan_button_group.setObjectName("configure_ext_fan_button_group")
        self.configure_ext_fan_button_group.addButton(self.configure_fan_external_output1_box)
        self.gridLayout_22.addWidget(self.configure_fan_external_output1_box, 0, 1, 1, 1)
        self.configure_fan_external_output2_box = QtWidgets.QRadioButton(self.configure_fan_external_output_frame)
        self.configure_fan_external_output2_box.setObjectName("configure_fan_external_output2_box")
        self.configure_ext_fan_button_group.addButton(self.configure_fan_external_output2_box)
        self.gridLayout_22.addWidget(self.configure_fan_external_output2_box, 0, 2, 1, 1)
        self.configure_fan_external_output_label = QtWidgets.QLabel(self.configure_fan_external_output_frame)
        self.configure_fan_external_output_label.setObjectName("configure_fan_external_output_label")
        self.gridLayout_22.addWidget(self.configure_fan_external_output_label, 0, 0, 1, 1)
        self.configure_fan_external_output3_box = QtWidgets.QRadioButton(self.configure_fan_external_output_frame)
        self.configure_fan_external_output3_box.setObjectName("configure_fan_external_output3_box")
        self.configure_ext_fan_button_group.addButton(self.configure_fan_external_output3_box)
        self.gridLayout_22.addWidget(self.configure_fan_external_output3_box, 0, 3, 1, 1)
        self.configure_fan_external_no_output_box = QtWidgets.QRadioButton(self.configure_fan_external_output_frame)
        self.configure_fan_external_no_output_box.setChecked(True)
        self.configure_fan_external_no_output_box.setObjectName("configure_fan_external_no_output_box")
        self.configure_ext_fan_button_group.addButton(self.configure_fan_external_no_output_box)
        self.gridLayout_22.addWidget(self.configure_fan_external_no_output_box, 0, 4, 1, 1)
        self.gridLayout_22.setColumnStretch(0, 1)
        self.gridLayout_22.setColumnStretch(1, 1)
        self.gridLayout_22.setColumnStretch(2, 1)
        self.gridLayout_22.setColumnStretch(3, 1)
        self.gridLayout_22.setColumnStretch(4, 1)
        self.gridLayout_13.addWidget(self.configure_fan_external_output_frame, 2, 0, 1, 6)
        self.configure_fan_driver_max_label = QtWidgets.QLabel(self.configure_fan_box)
        self.configure_fan_driver_max_label.setObjectName("configure_fan_driver_max_label")
        self.gridLayout_13.addWidget(self.configure_fan_driver_max_label, 1, 0, 1, 1)
        self.configure_fan_external_max_box = QtWidgets.QSpinBox(self.configure_fan_box)
        self.configure_fan_external_max_box.setSpecialValueText("")
        self.configure_fan_external_max_box.setMaximum(150)
        self.configure_fan_external_max_box.setProperty("value", 60)
        self.configure_fan_external_max_box.setObjectName("configure_fan_external_max_box")
        self.gridLayout_13.addWidget(self.configure_fan_external_max_box, 1, 3, 1, 3)
        self.configure_fan_external_min_box = QtWidgets.QSpinBox(self.configure_fan_box)
        self.configure_fan_external_min_box.setSpecialValueText("")
        self.configure_fan_external_min_box.setMaximum(150)
        self.configure_fan_external_min_box.setProperty("value", 30)
        self.configure_fan_external_min_box.setObjectName("configure_fan_external_min_box")
        self.gridLayout_13.addWidget(self.configure_fan_external_min_box, 0, 3, 1, 3)
        self.gridLayout_13.setColumnStretch(1, 10)
        self.gridLayout_13.setColumnStretch(3, 10)
        self.gridLayout_16.addWidget(self.configure_fan_box, 6, 0, 1, 1)
        self.configure_temperature_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_temperature_box.setObjectName("configure_temperature_box")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.configure_temperature_box)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.configure_temperature_transistor_fault_box = QtWidgets.QSpinBox(self.configure_temperature_box)
        self.configure_temperature_transistor_fault_box.setSpecialValueText("")
        self.configure_temperature_transistor_fault_box.setMaximum(150)
        self.configure_temperature_transistor_fault_box.setProperty("value", 80)
        self.configure_temperature_transistor_fault_box.setObjectName("configure_temperature_transistor_fault_box")
        self.gridLayout_12.addWidget(self.configure_temperature_transistor_fault_box, 1, 1, 1, 1)
        self.configure_temperature_resistor_warn_box = QtWidgets.QSpinBox(self.configure_temperature_box)
        self.configure_temperature_resistor_warn_box.setSpecialValueText("")
        self.configure_temperature_resistor_warn_box.setMaximum(180)
        self.configure_temperature_resistor_warn_box.setProperty("value", 60)
        self.configure_temperature_resistor_warn_box.setObjectName("configure_temperature_resistor_warn_box")
        self.gridLayout_12.addWidget(self.configure_temperature_resistor_warn_box, 0, 3, 1, 1)
        self.configure_temperature_transistor_warn_box = QtWidgets.QSpinBox(self.configure_temperature_box)
        self.configure_temperature_transistor_warn_box.setSpecialValueText("")
        self.configure_temperature_transistor_warn_box.setMaximum(150)
        self.configure_temperature_transistor_warn_box.setProperty("value", 60)
        self.configure_temperature_transistor_warn_box.setObjectName("configure_temperature_transistor_warn_box")
        self.gridLayout_12.addWidget(self.configure_temperature_transistor_warn_box, 0, 1, 1, 1)
        self.configure_temperature_resistor_fault_label = QtWidgets.QLabel(self.configure_temperature_box)
        self.configure_temperature_resistor_fault_label.setObjectName("configure_temperature_resistor_fault_label")
        self.gridLayout_12.addWidget(self.configure_temperature_resistor_fault_label, 1, 2, 1, 1)
        self.configure_temperature_resistor_fault_box = QtWidgets.QSpinBox(self.configure_temperature_box)
        self.configure_temperature_resistor_fault_box.setSpecialValueText("")
        self.configure_temperature_resistor_fault_box.setMaximum(180)
        self.configure_temperature_resistor_fault_box.setProperty("value", 80)
        self.configure_temperature_resistor_fault_box.setObjectName("configure_temperature_resistor_fault_box")
        self.gridLayout_12.addWidget(self.configure_temperature_resistor_fault_box, 1, 3, 1, 1)
        self.configure_temperature_transistor_warn_label = QtWidgets.QLabel(self.configure_temperature_box)
        self.configure_temperature_transistor_warn_label.setObjectName("configure_temperature_transistor_warn_label")
        self.gridLayout_12.addWidget(self.configure_temperature_transistor_warn_label, 0, 0, 1, 1)
        self.configure_temperature_transistor_fault_label = QtWidgets.QLabel(self.configure_temperature_box)
        self.configure_temperature_transistor_fault_label.setObjectName("configure_temperature_transistor_fault_label")
        self.gridLayout_12.addWidget(self.configure_temperature_transistor_fault_label, 1, 0, 1, 1)
        self.configure_temperature_resistor_warn_label = QtWidgets.QLabel(self.configure_temperature_box)
        self.configure_temperature_resistor_warn_label.setObjectName("configure_temperature_resistor_warn_label")
        self.gridLayout_12.addWidget(self.configure_temperature_resistor_warn_label, 0, 2, 1, 1)
        self.gridLayout_12.setColumnStretch(1, 10)
        self.gridLayout_12.setColumnStretch(3, 10)
        self.gridLayout_16.addWidget(self.configure_temperature_box, 5, 0, 1, 1)
        self.configure_line2 = QtWidgets.QFrame(self.configure_scroll_area_contents)
        self.configure_line2.setFrameShape(QtWidgets.QFrame.HLine)
        self.configure_line2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.configure_line2.setObjectName("configure_line2")
        self.gridLayout_16.addWidget(self.configure_line2, 8, 0, 1, 1)
        self.configure_LED_merge_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_LED_merge_box.setEnabled(True)
        self.configure_LED_merge_box.setObjectName("configure_LED_merge_box")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.configure_LED_merge_box)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.configure_LED_merge_channel2_button1 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel2_button1.setObjectName("configure_LED_merge_channel2_button1")
        self.configure_ch_merge_2_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.configure_ch_merge_2_button_group.setObjectName("configure_ch_merge_2_button_group")
        self.configure_ch_merge_2_button_group.addButton(self.configure_LED_merge_channel2_button1)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel2_button1, 1, 1, 1, 1)
        self.configure_LED_merge_channel3_button2 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel3_button2.setObjectName("configure_LED_merge_channel3_button2")
        self.configure_ch_merge_3_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.configure_ch_merge_3_button_group.setObjectName("configure_ch_merge_3_button_group")
        self.configure_ch_merge_3_button_group.addButton(self.configure_LED_merge_channel3_button2)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel3_button2, 2, 3, 2, 1)
        self.configure_LED_merge_channel2_label = QtWidgets.QLabel(self.configure_LED_merge_box)
        self.configure_LED_merge_channel2_label.setObjectName("configure_LED_merge_channel2_label")
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel2_label, 1, 0, 1, 1)
        self.configure_LED_merge_channel4_label = QtWidgets.QLabel(self.configure_LED_merge_box)
        self.configure_LED_merge_channel4_label.setObjectName("configure_LED_merge_channel4_label")
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel4_label, 4, 0, 1, 1)
        self.configure_LED_merge_channel2_button2 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel2_button2.setChecked(True)
        self.configure_LED_merge_channel2_button2.setObjectName("configure_LED_merge_channel2_button2")
        self.configure_ch_merge_2_button_group.addButton(self.configure_LED_merge_channel2_button2)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel2_button2, 1, 3, 1, 1)
        self.configure_LED_merge_channel3_label = QtWidgets.QLabel(self.configure_LED_merge_box)
        self.configure_LED_merge_channel3_label.setObjectName("configure_LED_merge_channel3_label")
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel3_label, 2, 0, 1, 1)
        self.configure_LED_merge_channel1_label = QtWidgets.QLabel(self.configure_LED_merge_box)
        self.configure_LED_merge_channel1_label.setObjectName("configure_LED_merge_channel1_label")
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel1_label, 0, 0, 1, 1)
        self.configure_LED_merge_channel3_button1 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel3_button1.setObjectName("configure_LED_merge_channel3_button1")
        self.configure_ch_merge_3_button_group.addButton(self.configure_LED_merge_channel3_button1)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel3_button1, 2, 1, 2, 1)
        self.configure_LED_merge_channel4_button1 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel4_button1.setObjectName("configure_LED_merge_channel4_button1")
        self.configure_ch_merge_4_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.configure_ch_merge_4_button_group.setObjectName("configure_ch_merge_4_button_group")
        self.configure_ch_merge_4_button_group.addButton(self.configure_LED_merge_channel4_button1)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel4_button1, 4, 1, 1, 1)
        self.configure_LED_merge_channel1_button1 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel1_button1.setChecked(True)
        self.configure_LED_merge_channel1_button1.setObjectName("configure_LED_merge_channel1_button1")
        self.configure_ch_merge_1_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.configure_ch_merge_1_button_group.setObjectName("configure_ch_merge_1_button_group")
        self.configure_ch_merge_1_button_group.addButton(self.configure_LED_merge_channel1_button1)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel1_button1, 0, 1, 1, 1)
        self.configure_LED_merge_channel4_button2 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel4_button2.setObjectName("configure_LED_merge_channel4_button2")
        self.configure_ch_merge_4_button_group.addButton(self.configure_LED_merge_channel4_button2)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel4_button2, 4, 3, 1, 1)
        self.configure_LED_merge_channel3_button3 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel3_button3.setChecked(True)
        self.configure_LED_merge_channel3_button3.setObjectName("configure_LED_merge_channel3_button3")
        self.configure_ch_merge_3_button_group.addButton(self.configure_LED_merge_channel3_button3)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel3_button3, 2, 5, 2, 1)
        self.configure_LED_merge_channel4_button3 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel4_button3.setObjectName("configure_LED_merge_channel4_button3")
        self.configure_ch_merge_4_button_group.addButton(self.configure_LED_merge_channel4_button3)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel4_button3, 4, 5, 1, 1)
        self.configure_LED_merge_channel4_button4 = QtWidgets.QRadioButton(self.configure_LED_merge_box)
        self.configure_LED_merge_channel4_button4.setChecked(True)
        self.configure_LED_merge_channel4_button4.setObjectName("configure_LED_merge_channel4_button4")
        self.configure_ch_merge_4_button_group.addButton(self.configure_LED_merge_channel4_button4)
        self.gridLayout_19.addWidget(self.configure_LED_merge_channel4_button4, 4, 7, 1, 1)
        self.gridLayout_16.addWidget(self.configure_LED_merge_box, 3, 0, 1, 1, QtCore.Qt.AlignTop)
        self.configure_name_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_name_box.setObjectName("configure_name_box")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.configure_name_box)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.configure_name_driver_line_edit = QtWidgets.QLineEdit(self.configure_name_box)
        self.configure_name_driver_line_edit.setMaxLength(15)
        self.configure_name_driver_line_edit.setObjectName("configure_name_driver_line_edit")
        self.gridLayout_20.addWidget(self.configure_name_driver_line_edit, 0, 1, 1, 1)
        self.configure_name_driver_label = QtWidgets.QLabel(self.configure_name_box)
        self.configure_name_driver_label.setObjectName("configure_name_driver_label")
        self.gridLayout_20.addWidget(self.configure_name_driver_label, 0, 0, 1, 1)
        self.configure_name_driver_serial_label = QtWidgets.QLabel(self.configure_name_box)
        self.configure_name_driver_serial_label.setLineWidth(10)
        self.configure_name_driver_serial_label.setObjectName("configure_name_driver_serial_label")
        self.gridLayout_20.addWidget(self.configure_name_driver_serial_label, 0, 2, 1, 1)
        self.configure_name_LED_frame = QtWidgets.QFrame(self.configure_name_box)
        self.configure_name_LED_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.configure_name_LED_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.configure_name_LED_frame.setObjectName("configure_name_LED_frame")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.configure_name_LED_frame)
        self.gridLayout_21.setContentsMargins(0, -1, 0, -1)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.configure_name_LED1_box = QtWidgets.QCheckBox(self.configure_name_LED_frame)
        self.configure_name_LED1_box.setChecked(True)
        self.configure_name_LED1_box.setObjectName("configure_name_LED1_box")
        self.gridLayout_21.addWidget(self.configure_name_LED1_box, 0, 0, 1, 1)
        self.configure_name_LED2_line_edit = QtWidgets.QLineEdit(self.configure_name_LED_frame)
        self.configure_name_LED2_line_edit.setMaxLength(15)
        self.configure_name_LED2_line_edit.setObjectName("configure_name_LED2_line_edit")
        self.gridLayout_21.addWidget(self.configure_name_LED2_line_edit, 1, 1, 1, 2)
        self.configure_name_LED1_line_edit = QtWidgets.QLineEdit(self.configure_name_LED_frame)
        self.configure_name_LED1_line_edit.setMaxLength(15)
        self.configure_name_LED1_line_edit.setObjectName("configure_name_LED1_line_edit")
        self.gridLayout_21.addWidget(self.configure_name_LED1_line_edit, 0, 1, 1, 2)
        self.configure_name_LED4_box = QtWidgets.QCheckBox(self.configure_name_LED_frame)
        self.configure_name_LED4_box.setChecked(True)
        self.configure_name_LED4_box.setObjectName("configure_name_LED4_box")
        self.gridLayout_21.addWidget(self.configure_name_LED4_box, 1, 3, 1, 1)
        self.configure_name_LED2_box = QtWidgets.QCheckBox(self.configure_name_LED_frame)
        self.configure_name_LED2_box.setChecked(True)
        self.configure_name_LED2_box.setObjectName("configure_name_LED2_box")
        self.gridLayout_21.addWidget(self.configure_name_LED2_box, 1, 0, 1, 1)
        self.configure_name_LED3_box = QtWidgets.QCheckBox(self.configure_name_LED_frame)
        self.configure_name_LED3_box.setChecked(True)
        self.configure_name_LED3_box.setObjectName("configure_name_LED3_box")
        self.gridLayout_21.addWidget(self.configure_name_LED3_box, 0, 3, 1, 1)
        self.configure_name_LED3_line_edit = QtWidgets.QLineEdit(self.configure_name_LED_frame)
        self.configure_name_LED3_line_edit.setMaxLength(15)
        self.configure_name_LED3_line_edit.setObjectName("configure_name_LED3_line_edit")
        self.gridLayout_21.addWidget(self.configure_name_LED3_line_edit, 0, 4, 1, 1)
        self.configure_name_LED4_line_edit = QtWidgets.QLineEdit(self.configure_name_LED_frame)
        self.configure_name_LED4_line_edit.setMaxLength(15)
        self.configure_name_LED4_line_edit.setObjectName("configure_name_LED4_line_edit")
        self.gridLayout_21.addWidget(self.configure_name_LED4_line_edit, 1, 4, 1, 1)
        self.gridLayout_21.setColumnStretch(1, 10)
        self.gridLayout_21.setColumnStretch(4, 10)
        self.gridLayout_20.addWidget(self.configure_name_LED_frame, 1, 0, 1, 4)
        self.gridLayout_16.addWidget(self.configure_name_box, 0, 0, 1, 1)
        self.configure_line1 = QtWidgets.QFrame(self.configure_scroll_area_contents)
        self.configure_line1.setFrameShape(QtWidgets.QFrame.HLine)
        self.configure_line1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.configure_line1.setObjectName("configure_line1")
        self.gridLayout_16.addWidget(self.configure_line1, 4, 0, 1, 2)
        self.configure_resistor_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_resistor_box.setObjectName("configure_resistor_box")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.configure_resistor_box)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.configure_resistor1_box = QtWidgets.QCheckBox(self.configure_resistor_box)
        self.configure_resistor1_box.setEnabled(False)
        self.configure_resistor1_box.setText("")
        self.configure_resistor1_box.setCheckable(True)
        self.configure_resistor1_box.setChecked(True)
        self.configure_resistor1_box.setObjectName("configure_resistor1_box")
        self.gridLayout_15.addWidget(self.configure_resistor1_box, 0, 0, 1, 1)
        self.configure_resistor2_box = QtWidgets.QCheckBox(self.configure_resistor_box)
        self.configure_resistor2_box.setText("")
        self.configure_resistor2_box.setChecked(False)
        self.configure_resistor2_box.setObjectName("configure_resistor2_box")
        self.gridLayout_15.addWidget(self.configure_resistor2_box, 0, 2, 1, 1)
        self.configure_resistor3_box = QtWidgets.QCheckBox(self.configure_resistor_box)
        self.configure_resistor3_box.setText("")
        self.configure_resistor3_box.setObjectName("configure_resistor3_box")
        self.gridLayout_15.addWidget(self.configure_resistor3_box, 0, 4, 1, 1)
        self.configure_resistor4_box = QtWidgets.QCheckBox(self.configure_resistor_box)
        self.configure_resistor4_box.setText("")
        self.configure_resistor4_box.setObjectName("configure_resistor4_box")
        self.gridLayout_15.addWidget(self.configure_resistor4_box, 0, 6, 1, 1)
        self.configure_resistor1_spin_box = QtWidgets.QDoubleSpinBox(self.configure_resistor_box)
        self.configure_resistor1_spin_box.setSpecialValueText("")
        self.configure_resistor1_spin_box.setMinimum(0.01)
        self.configure_resistor1_spin_box.setMaximum(1000.0)
        self.configure_resistor1_spin_box.setProperty("value", 5.0)
        self.configure_resistor1_spin_box.setObjectName("configure_resistor1_spin_box")
        self.gridLayout_15.addWidget(self.configure_resistor1_spin_box, 0, 1, 1, 1)
        self.configure_resistor2_spin_box = QtWidgets.QDoubleSpinBox(self.configure_resistor_box)
        self.configure_resistor2_spin_box.setEnabled(False)
        self.configure_resistor2_spin_box.setSpecialValueText("")
        self.configure_resistor2_spin_box.setMinimum(0.01)
        self.configure_resistor2_spin_box.setMaximum(1000.0)
        self.configure_resistor2_spin_box.setProperty("value", 1000.0)
        self.configure_resistor2_spin_box.setObjectName("configure_resistor2_spin_box")
        self.gridLayout_15.addWidget(self.configure_resistor2_spin_box, 0, 3, 1, 1)
        self.configure_resistor3_spin_box = QtWidgets.QDoubleSpinBox(self.configure_resistor_box)
        self.configure_resistor3_spin_box.setEnabled(False)
        self.configure_resistor3_spin_box.setMinimum(0.01)
        self.configure_resistor3_spin_box.setMaximum(1000.0)
        self.configure_resistor3_spin_box.setProperty("value", 1000.0)
        self.configure_resistor3_spin_box.setObjectName("configure_resistor3_spin_box")
        self.gridLayout_15.addWidget(self.configure_resistor3_spin_box, 0, 5, 1, 1)
        self.configure_resistor4_spin_box = QtWidgets.QDoubleSpinBox(self.configure_resistor_box)
        self.configure_resistor4_spin_box.setEnabled(False)
        self.configure_resistor4_spin_box.setMinimum(0.01)
        self.configure_resistor4_spin_box.setMaximum(1000.0)
        self.configure_resistor4_spin_box.setProperty("value", 1000.0)
        self.configure_resistor4_spin_box.setObjectName("configure_resistor4_spin_box")
        self.gridLayout_15.addWidget(self.configure_resistor4_spin_box, 0, 7, 1, 1)
        self.gridLayout_15.setColumnStretch(1, 10)
        self.gridLayout_15.setColumnStretch(3, 10)
        self.gridLayout_15.setColumnStretch(5, 10)
        self.gridLayout_15.setColumnStretch(7, 10)
        self.gridLayout_16.addWidget(self.configure_resistor_box, 2, 0, 1, 1)
        self.configure_thermistor_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_thermistor_box.setObjectName("configure_thermistor_box")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.configure_thermistor_box)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.configure_thermistor_beta_label = QtWidgets.QLabel(self.configure_thermistor_box)
        self.configure_thermistor_beta_label.setObjectName("configure_thermistor_beta_label")
        self.gridLayout_14.addWidget(self.configure_thermistor_beta_label, 1, 0, 1, 1)
        self.configure_thermistor_resistance_box = QtWidgets.QSpinBox(self.configure_thermistor_box)
        self.configure_thermistor_resistance_box.setSpecialValueText("")
        self.configure_thermistor_resistance_box.setMinimum(1)
        self.configure_thermistor_resistance_box.setMaximum(100000)
        self.configure_thermistor_resistance_box.setProperty("value", 4700)
        self.configure_thermistor_resistance_box.setObjectName("configure_thermistor_resistance_box")
        self.gridLayout_14.addWidget(self.configure_thermistor_resistance_box, 0, 1, 1, 1)
        self.configure_thermistor_beta_box = QtWidgets.QSpinBox(self.configure_thermistor_box)
        self.configure_thermistor_beta_box.setSpecialValueText("")
        self.configure_thermistor_beta_box.setMinimum(1)
        self.configure_thermistor_beta_box.setMaximum(9999)
        self.configure_thermistor_beta_box.setProperty("value", 3560)
        self.configure_thermistor_beta_box.setObjectName("configure_thermistor_beta_box")
        self.gridLayout_14.addWidget(self.configure_thermistor_beta_box, 1, 1, 1, 1)
        self.configure_thermistor_resistance_label = QtWidgets.QLabel(self.configure_thermistor_box)
        self.configure_thermistor_resistance_label.setObjectName("configure_thermistor_resistance_label")
        self.gridLayout_14.addWidget(self.configure_thermistor_resistance_label, 0, 0, 1, 1)
        self.configure_thermistor_warn_label = QtWidgets.QLabel(self.configure_thermistor_box)
        self.configure_thermistor_warn_label.setObjectName("configure_thermistor_warn_label")
        self.gridLayout_14.addWidget(self.configure_thermistor_warn_label, 0, 2, 1, 1)
        self.configure_thermistor_warn_box = QtWidgets.QSpinBox(self.configure_thermistor_box)
        self.configure_thermistor_warn_box.setMaximum(150)
        self.configure_thermistor_warn_box.setProperty("value", 60)
        self.configure_thermistor_warn_box.setObjectName("configure_thermistor_warn_box")
        self.gridLayout_14.addWidget(self.configure_thermistor_warn_box, 0, 3, 1, 1)
        self.configure_thermistor_fault_label = QtWidgets.QLabel(self.configure_thermistor_box)
        self.configure_thermistor_fault_label.setObjectName("configure_thermistor_fault_label")
        self.gridLayout_14.addWidget(self.configure_thermistor_fault_label, 1, 2, 1, 1)
        self.configure_thermistor_fault_box = QtWidgets.QSpinBox(self.configure_thermistor_box)
        self.configure_thermistor_fault_box.setMaximum(150)
        self.configure_thermistor_fault_box.setProperty("value", 80)
        self.configure_thermistor_fault_box.setObjectName("configure_thermistor_fault_box")
        self.gridLayout_14.addWidget(self.configure_thermistor_fault_box, 1, 3, 1, 1)
        self.gridLayout_14.setColumnStretch(1, 10)
        self.gridLayout_14.setColumnStretch(3, 10)
        self.gridLayout_16.addWidget(self.configure_thermistor_box, 7, 0, 1, 1)
        self.configure_pushbutton_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_pushbutton_box.setObjectName("configure_pushbutton_box")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.configure_pushbutton_box)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.configure_pushbutton_intensity_label = QtWidgets.QLabel(self.configure_pushbutton_box)
        self.configure_pushbutton_intensity_label.setObjectName("configure_pushbutton_intensity_label")
        self.gridLayout_18.addWidget(self.configure_pushbutton_intensity_label, 0, 0, 1, 1)
        self.configure_pushbutton_intensity_button = QtWidgets.QPushButton(self.configure_pushbutton_box)
        self.configure_pushbutton_intensity_button.setObjectName("configure_pushbutton_intensity_button")
        self.gridLayout_18.addWidget(self.configure_pushbutton_intensity_button, 0, 6, 1, 1)
        self.configure_pushbutton_alarm_label = QtWidgets.QLabel(self.configure_pushbutton_box)
        self.configure_pushbutton_alarm_label.setObjectName("configure_pushbutton_alarm_label")
        self.gridLayout_18.addWidget(self.configure_pushbutton_alarm_label, 1, 0, 1, 1)
        self.configure_pushbutton_alarm_solid_button = QtWidgets.QRadioButton(self.configure_pushbutton_box)
        self.configure_pushbutton_alarm_solid_button.setObjectName("configure_pushbutton_alarm_solid_button")
        self.configure_pushbutton_LED_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.configure_pushbutton_LED_button_group.setObjectName("configure_pushbutton_LED_button_group")
        self.configure_pushbutton_LED_button_group.addButton(self.configure_pushbutton_alarm_solid_button)
        self.gridLayout_18.addWidget(self.configure_pushbutton_alarm_solid_button, 1, 4, 1, 1)
        self.configure_pushbutton_alarm_chase_button = QtWidgets.QRadioButton(self.configure_pushbutton_box)
        self.configure_pushbutton_alarm_chase_button.setObjectName("configure_pushbutton_alarm_chase_button")
        self.configure_pushbutton_LED_button_group.addButton(self.configure_pushbutton_alarm_chase_button)
        self.gridLayout_18.addWidget(self.configure_pushbutton_alarm_chase_button, 1, 2, 1, 1)
        self.configure_pushbutton_alarm_flash_button = QtWidgets.QRadioButton(self.configure_pushbutton_box)
        self.configure_pushbutton_alarm_flash_button.setChecked(True)
        self.configure_pushbutton_alarm_flash_button.setObjectName("configure_pushbutton_alarm_flash_button")
        self.configure_pushbutton_LED_button_group.addButton(self.configure_pushbutton_alarm_flash_button)
        self.gridLayout_18.addWidget(self.configure_pushbutton_alarm_flash_button, 1, 1, 1, 1)
        self.configure_pushbutton_alarm_test_button = QtWidgets.QPushButton(self.configure_pushbutton_box)
        self.configure_pushbutton_alarm_test_button.setObjectName("configure_pushbutton_alarm_test_button")
        self.gridLayout_18.addWidget(self.configure_pushbutton_alarm_test_button, 1, 6, 1, 1)
        self.configure_pushbutton_alarm_pulse_button = QtWidgets.QRadioButton(self.configure_pushbutton_box)
        self.configure_pushbutton_alarm_pulse_button.setObjectName("configure_pushbutton_alarm_pulse_button")
        self.configure_pushbutton_LED_button_group.addButton(self.configure_pushbutton_alarm_pulse_button)
        self.gridLayout_18.addWidget(self.configure_pushbutton_alarm_pulse_button, 1, 3, 1, 1)
        self.configure_pushbutton_intensity_slider = QtWidgets.QSlider(self.configure_pushbutton_box)
        self.configure_pushbutton_intensity_slider.setMaximum(100)
        self.configure_pushbutton_intensity_slider.setProperty("value", 100)
        self.configure_pushbutton_intensity_slider.setOrientation(QtCore.Qt.Horizontal)
        self.configure_pushbutton_intensity_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.configure_pushbutton_intensity_slider.setTickInterval(10)
        self.configure_pushbutton_intensity_slider.setObjectName("configure_pushbutton_intensity_slider")
        self.gridLayout_18.addWidget(self.configure_pushbutton_intensity_slider, 0, 1, 1, 5)
        self.configure_pushbutton_alarm_disable_button = QtWidgets.QRadioButton(self.configure_pushbutton_box)
        self.configure_pushbutton_alarm_disable_button.setObjectName("configure_pushbutton_alarm_disable_button")
        self.configure_pushbutton_LED_button_group.addButton(self.configure_pushbutton_alarm_disable_button)
        self.gridLayout_18.addWidget(self.configure_pushbutton_alarm_disable_button, 1, 5, 1, 1)
        self.gridLayout_16.addWidget(self.configure_pushbutton_box, 10, 0, 1, 1)
        self.configure_audio_box = QtWidgets.QGroupBox(self.configure_scroll_area_contents)
        self.configure_audio_box.setObjectName("configure_audio_box")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.configure_audio_box)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.configure_audio_alarm_slider = QtWidgets.QSlider(self.configure_audio_box)
        self.configure_audio_alarm_slider.setMaximum(100)
        self.configure_audio_alarm_slider.setProperty("value", 100)
        self.configure_audio_alarm_slider.setOrientation(QtCore.Qt.Horizontal)
        self.configure_audio_alarm_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.configure_audio_alarm_slider.setTickInterval(10)
        self.configure_audio_alarm_slider.setObjectName("configure_audio_alarm_slider")
        self.gridLayout_11.addWidget(self.configure_audio_alarm_slider, 1, 1, 1, 1)
        self.configure_audio_alarm_label = QtWidgets.QLabel(self.configure_audio_box)
        self.configure_audio_alarm_label.setObjectName("configure_audio_alarm_label")
        self.gridLayout_11.addWidget(self.configure_audio_alarm_label, 1, 0, 1, 1)
        self.configure_audio_status_label = QtWidgets.QLabel(self.configure_audio_box)
        self.configure_audio_status_label.setObjectName("configure_audio_status_label")
        self.gridLayout_11.addWidget(self.configure_audio_status_label, 0, 0, 1, 1)
        self.configure_audio_status_slider = QtWidgets.QSlider(self.configure_audio_box)
        self.configure_audio_status_slider.setMaximum(100)
        self.configure_audio_status_slider.setProperty("value", 20)
        self.configure_audio_status_slider.setOrientation(QtCore.Qt.Horizontal)
        self.configure_audio_status_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.configure_audio_status_slider.setTickInterval(10)
        self.configure_audio_status_slider.setObjectName("configure_audio_status_slider")
        self.gridLayout_11.addWidget(self.configure_audio_status_slider, 0, 1, 1, 1)
        self.configure_audio_status_button = QtWidgets.QPushButton(self.configure_audio_box)
        self.configure_audio_status_button.setObjectName("configure_audio_status_button")
        self.gridLayout_11.addWidget(self.configure_audio_status_button, 0, 2, 1, 1)
        self.configure_audio_alarm_button = QtWidgets.QPushButton(self.configure_audio_box)
        self.configure_audio_alarm_button.setObjectName("configure_audio_alarm_button")
        self.gridLayout_11.addWidget(self.configure_audio_alarm_button, 1, 2, 1, 1)
        self.gridLayout_16.addWidget(self.configure_audio_box, 9, 0, 1, 1)
        self.configure_scroll_area.setWidget(self.configure_scroll_area_contents)
        self.gridLayout_10.addWidget(self.configure_scroll_area, 0, 0, 1, 5)
        self.configure_load_button = QtWidgets.QPushButton(self.configure_tab)
        self.configure_load_button.setObjectName("configure_load_button")
        self.gridLayout_10.addWidget(self.configure_load_button, 1, 4, 1, 1)
        self.configure_button_line = QtWidgets.QFrame(self.configure_tab)
        self.configure_button_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.configure_button_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.configure_button_line.setObjectName("configure_button_line")
        self.gridLayout_10.addWidget(self.configure_button_line, 1, 2, 1, 1)
        self.configure_save_button = QtWidgets.QPushButton(self.configure_tab)
        self.configure_save_button.setObjectName("configure_save_button")
        self.gridLayout_10.addWidget(self.configure_save_button, 1, 3, 1, 1)
        self.configure_download_button = QtWidgets.QPushButton(self.configure_tab)
        self.configure_download_button.setObjectName("configure_download_button")
        self.gridLayout_10.addWidget(self.configure_download_button, 1, 0, 1, 1)
        self.gui_master_tab.addTab(self.configure_tab, "")
        self.calibration_tab = QtWidgets.QWidget()
        self.calibration_tab.setObjectName("calibration_tab")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.calibration_tab)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.calibration_scale_box = QtWidgets.QGroupBox(self.calibration_tab)
        self.calibration_scale_box.setObjectName("calibration_scale_box")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.calibration_scale_box)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.calibration_scale_custom_box = QtWidgets.QDoubleSpinBox(self.calibration_scale_box)
        self.calibration_scale_custom_box.setDecimals(1)
        self.calibration_scale_custom_box.setMinimum(0.1)
        self.calibration_scale_custom_box.setMaximum(1000.0)
        self.calibration_scale_custom_box.setSingleStep(0.0)
        self.calibration_scale_custom_box.setProperty("value", 1.0)
        self.calibration_scale_custom_box.setObjectName("calibration_scale_custom_box")
        self.gridLayout_8.addWidget(self.calibration_scale_custom_box, 0, 6, 1, 1)
        self.calibration_scale_10_button = QtWidgets.QRadioButton(self.calibration_scale_box)
        self.calibration_scale_10_button.setObjectName("calibration_scale_10_button")
        self.calibration_axis_button_group = QtWidgets.QButtonGroup(MainWindow)
        self.calibration_axis_button_group.setObjectName("calibration_axis_button_group")
        self.calibration_axis_button_group.addButton(self.calibration_scale_10_button)
        self.gridLayout_8.addWidget(self.calibration_scale_10_button, 0, 3, 1, 1)
        self.calibration_scale_100_button = QtWidgets.QRadioButton(self.calibration_scale_box)
        self.calibration_scale_100_button.setChecked(True)
        self.calibration_scale_100_button.setObjectName("calibration_scale_100_button")
        self.calibration_axis_button_group.addButton(self.calibration_scale_100_button)
        self.gridLayout_8.addWidget(self.calibration_scale_100_button, 0, 0, 1, 1)
        self.calibration_scale_custom_button = QtWidgets.QRadioButton(self.calibration_scale_box)
        self.calibration_scale_custom_button.setObjectName("calibration_scale_custom_button")
        self.calibration_axis_button_group.addButton(self.calibration_scale_custom_button)
        self.gridLayout_8.addWidget(self.calibration_scale_custom_button, 0, 5, 1, 1)
        self.calibration_scale_50_button = QtWidgets.QRadioButton(self.calibration_scale_box)
        self.calibration_scale_50_button.setObjectName("calibration_scale_50_button")
        self.calibration_axis_button_group.addButton(self.calibration_scale_50_button)
        self.gridLayout_8.addWidget(self.calibration_scale_50_button, 0, 1, 1, 1)
        self.calibration_scale_25_button = QtWidgets.QRadioButton(self.calibration_scale_box)
        self.calibration_scale_25_button.setObjectName("calibration_scale_25_button")
        self.calibration_axis_button_group.addButton(self.calibration_scale_25_button)
        self.gridLayout_8.addWidget(self.calibration_scale_25_button, 0, 2, 1, 1)
        self.calibration_scale_5_button = QtWidgets.QRadioButton(self.calibration_scale_box)
        self.calibration_scale_5_button.setObjectName("calibration_scale_5_button")
        self.calibration_axis_button_group.addButton(self.calibration_scale_5_button)
        self.gridLayout_8.addWidget(self.calibration_scale_5_button, 0, 4, 1, 1)
        self.calibration_scale_custom_label = QtWidgets.QLabel(self.calibration_scale_box)
        self.calibration_scale_custom_label.setObjectName("calibration_scale_custom_label")
        self.gridLayout_8.addWidget(self.calibration_scale_custom_label, 0, 7, 1, 1)
        self.gridLayout_8.setColumnStretch(0, 10)
        self.gridLayout_8.setColumnStretch(1, 10)
        self.gridLayout_8.setColumnStretch(2, 10)
        self.gridLayout_8.setColumnStretch(3, 10)
        self.gridLayout_8.setColumnStretch(4, 10)
        self.gridLayout_7.addWidget(self.calibration_scale_box, 3, 0, 1, 3)
        self.calibration_plot_window = PlotWidget(self.calibration_tab)
        self.calibration_plot_window.setObjectName("calibration_plot_window")
        self.gridLayout_7.addWidget(self.calibration_plot_window, 0, 0, 1, 4)
        self.calibration_run_button = QtWidgets.QPushButton(self.calibration_tab)
        self.calibration_run_button.setObjectName("calibration_run_button")
        self.gridLayout_7.addWidget(self.calibration_run_button, 2, 0, 1, 1)
        self.calibration_current_box = QtWidgets.QDoubleSpinBox(self.calibration_tab)
        self.calibration_current_box.setEnabled(True)
        self.calibration_current_box.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.calibration_current_box.setDecimals(1)
        self.calibration_current_box.setProperty("value", 100.0)
        self.calibration_current_box.setObjectName("calibration_current_box")
        self.gridLayout_7.addWidget(self.calibration_current_box, 2, 2, 1, 1)
        self.calibration_current_label1 = QtWidgets.QLabel(self.calibration_tab)
        self.calibration_current_label1.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.calibration_current_label1.setObjectName("calibration_current_label1")
        self.gridLayout_7.addWidget(self.calibration_current_label1, 2, 1, 1, 1)
        self.calibration_current_label2 = QtWidgets.QLabel(self.calibration_tab)
        self.calibration_current_label2.setObjectName("calibration_current_label2")
        self.gridLayout_7.addWidget(self.calibration_current_label2, 2, 3, 1, 1)
        self.calibration_software_control_box = QtWidgets.QCheckBox(self.calibration_tab)
        self.calibration_software_control_box.setObjectName("calibration_software_control_box")
        self.gridLayout_7.addWidget(self.calibration_software_control_box, 4, 0, 1, 4)
        self.gridLayout_7.setColumnStretch(0, 10)
        self.gui_master_tab.addTab(self.calibration_tab, "")
        self.about_tab = QtWidgets.QWidget()
        self.about_tab.setObjectName("about_tab")
        self.gridLayout_46 = QtWidgets.QGridLayout(self.about_tab)
        self.gridLayout_46.setObjectName("gridLayout_46")
        self.about_label = QtWidgets.QLabel(self.about_tab)
        self.about_label.setObjectName("about_label")
        self.gridLayout_46.addWidget(self.about_label, 0, 0, 1, 1)
        self.gui_master_tab.addTab(self.about_tab, "")
        self.gridLayout.addWidget(self.gui_master_tab, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menu_bar = QtWidgets.QMenuBar(MainWindow)
        self.menu_bar.setGeometry(QtCore.QRect(0, 0, 475, 21))
        self.menu_bar.setObjectName("menu_bar")
        self.menu_connection = QtWidgets.QMenu(self.menu_bar)
        self.menu_connection.setToolTip("")
        self.menu_connection.setObjectName("menu_connection")
        self.menu_view = QtWidgets.QMenu(self.menu_bar)
        self.menu_view.setObjectName("menu_view")
        MainWindow.setMenuBar(self.menu_bar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menu_connection_disconnect = QtWidgets.QAction(MainWindow)
        self.menu_connection_disconnect.setCheckable(True)
        self.menu_connection_disconnect.setChecked(True)
        self.menu_connection_disconnect.setObjectName("menu_connection_disconnect")
        self.menu_view_status = QtWidgets.QAction(MainWindow)
        self.menu_view_status.setObjectName("menu_view_status")
        self.menu_view_sync = QtWidgets.QAction(MainWindow)
        self.menu_view_sync.setObjectName("menu_view_sync")
        self.actionDriver_Configuration = QtWidgets.QAction(MainWindow)
        self.actionDriver_Configuration.setObjectName("actionDriver_Configuration")
        self.actionAWG_File = QtWidgets.QAction(MainWindow)
        self.actionAWG_File.setObjectName("actionAWG_File")
        self.actionSync_file = QtWidgets.QAction(MainWindow)
        self.actionSync_file.setObjectName("actionSync_file")
        self.menu_connection_test_connection = QtWidgets.QAction(MainWindow)
        self.menu_connection_test_connection.setObjectName("menu_connection_test_connection")
        self.menu_connection.addAction(self.menu_connection_disconnect)
        self.menu_connection.addSeparator()
        self.menu_connection.addAction(self.menu_connection_test_connection)
        self.menu_view.addAction(self.menu_view_status)
        self.menu_view.addAction(self.menu_view_sync)
        self.menu_bar.addAction(self.menu_connection.menuAction())
        self.menu_bar.addAction(self.menu_view.menuAction())

        self.retranslateUi(MainWindow)
        self.gui_master_tab.setCurrentIndex(0)
        self.sync_toolbox.setCurrentIndex(0)
        self.sync_digital_trigger_low_tab.setCurrentIndex(0)
        self.sync_digital_trigger_high_tab.setCurrentIndex(1)
        self.sync_analog_output_tab.setCurrentIndex(0)
        self.sync_confocal_line_tab.setCurrentIndex(1)
        self.sync_confocal_image_tab.setCurrentIndex(0)
        self.sync_confocal_flyback_tab.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.gui_master_tab.setToolTip(_translate("MainWindow", "Switch between driver configuration panels"))
        self.main_tab.setToolTip(_translate("MainWindow", "This tab shows the current operating status of the LED driver"))
        self.main_channel_box.setToolTip(_translate("MainWindow", "Select active LED channel on driver"))
        self.main_channel_box.setTitle(_translate("MainWindow", "Channel"))
        self.main_channel_LED3_button.setToolTip(_translate("MainWindow", "Set LED #3 as the active LED"))
        self.main_channel_LED3_button.setText(_translate("MainWindow", "LED #3"))
        self.main_channel_LED1_button.setToolTip(_translate("MainWindow", "Set LED #1 as the active LED"))
        self.main_channel_LED1_button.setText(_translate("MainWindow", "LED #1"))
        self.main_channel_LED2_button.setToolTip(_translate("MainWindow", "Set LED #2 as the active LED"))
        self.main_channel_LED2_button.setText(_translate("MainWindow", "LED #2"))
        self.main_channel_LED4_button.setToolTip(_translate("MainWindow", "Set LED #4 as the active LED"))
        self.main_channel_LED4_button.setText(_translate("MainWindow", "LED #4"))
        self.main_driver_ID_box.setToolTip(_translate("MainWindow", "Identification of the active LED driver"))
        self.main_driver_ID_box.setTitle(_translate("MainWindow", "Driver ID"))
        self.main_driver_name_label.setToolTip(_translate("MainWindow", "Custom driver name set in configuration"))
        self.main_driver_name_label.setText(_translate("MainWindow", "Name:"))
        self.main_driver_serial_label.setToolTip(_translate("MainWindow", "USB serial number of the Teensy controlling the LED driver."))
        self.main_driver_serial_label.setText(_translate("MainWindow", "Serial #:"))
        self.main_software_control_checkbox.setToolTip(_translate("MainWindow", "Ignores physical knob and toggle switch"))
        self.main_software_control_checkbox.setText(_translate("MainWindow", "Enable software control of LED driver"))
        self.main_toggle_box.setTitle(_translate("MainWindow", "Toggle"))
        self.main_toggle_sync_button.setToolTip(_translate("MainWindow", "Sync mode allows driver to be driven by remote inputs"))
        self.main_toggle_sync_button.setText(_translate("MainWindow", "Sync"))
        self.main_toggle_manual_button.setToolTip(_translate("MainWindow", "Manual mode allows the driver intensity to be manually set."))
        self.main_toggle_manual_button.setText(_translate("MainWindow", "Manual"))
        self.main_lock_interface_button.setToolTip(_translate("MainWindow", "Locks out user interface.  Click button again to unlock."))
        self.main_lock_interface_button.setText(_translate("MainWindow", "Lock Interface"))
        self.main_intensity_control_box.setToolTip(_translate("MainWindow", "Adjust the active LED intensity"))
        self.main_intensity_control_box.setTitle(_translate("MainWindow", "Intensity"))
        self.main_intensity_percent_label.setText(_translate("MainWindow", "%"))
        self.main_intensity_spinbox.setToolTip(_translate("MainWindow", "Shows/sets the LED intensity "))
        self.main_intensity_dial.setToolTip(_translate("MainWindow", "Rotate to adjust the active LED intensity"))
        self.main_intensity_PWM_button.setToolTip(_translate("MainWindow", "Adjust the LED intensity via PWM"))
        self.main_intensity_PWM_button.setText(_translate("MainWindow", "LED PWM"))
        self.main_intensity_current_button.setToolTip(_translate("MainWindow", "Adjust the LED intensity via current"))
        self.main_intensity_current_button.setText(_translate("MainWindow", "LED Current"))
        self.main_intensity_off_button.setToolTip(_translate("MainWindow", "Turn LED off"))
        self.main_intensity_off_button.setText(_translate("MainWindow", "LED Off"))
        self.gui_master_tab.setTabText(self.gui_master_tab.indexOf(self.main_tab), _translate("MainWindow", "Main"))
        self.sync_download_button.setToolTip(_translate("MainWindow", "Update sync window with the current driver sync configuration."))
        self.sync_download_button.setText(_translate("MainWindow", "Download from Driver"))
        self.sync_load_button.setToolTip(_translate("MainWindow", "Load a sync configuration text file (*.lsc)"))
        self.sync_load_button.setText(_translate("MainWindow", "Load Configuration"))
        self.sync_toolbox.setToolTip(_translate("MainWindow", "Select the active sync mode to configure"))
        self.sync_digital_page.setToolTip(_translate("MainWindow", "Digital sync mode to remotely trigger the LED driver"))
        self.sync_digital_trigger_channel_box.setToolTip(_translate("MainWindow", "Select the input channel the trigger is connected to."))
        self.sync_digital_trigger_channel_box.setTitle(_translate("MainWindow", "Trigger Channel"))
        self.sync_digital_input1_button.setToolTip(_translate("MainWindow", "Trigger on input channel #1"))
        self.sync_digital_input1_button.setText(_translate("MainWindow", "Channel #1"))
        self.sync_digital_input2_button.setToolTip(_translate("MainWindow", "Trigger on input channel #2"))
        self.sync_digital_input2_button.setText(_translate("MainWindow", "Channel #2"))
        self.sync_digital_input3_button.setToolTip(_translate("MainWindow", "Trigger on input channel #3"))
        self.sync_digital_input3_button.setText(_translate("MainWindow", "Channel #3"))
        self.sync_digital_input4_button.setToolTip(_translate("MainWindow", "Trigger on input channel #4"))
        self.sync_digital_input4_button.setText(_translate("MainWindow", "Channel #4"))
        self.sync_digital_trigger_low_box.setToolTip(_translate("MainWindow", "Driver configration when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_box.setTitle(_translate("MainWindow", "Event: Trigger LOW (<1.0V)"))
        self.sync_digital_trigger_low_tab.setToolTip(_translate("MainWindow", "Select event type for when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_off_tab.setToolTip(_translate("MainWindow", "Turn LED off when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_off_label.setToolTip(_translate("MainWindow", "Turn LED off when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_off_label.setText(_translate("MainWindow", "Turn active LED off"))
        self.sync_digital_trigger_low_tab.setTabText(self.sync_digital_trigger_low_tab.indexOf(self.sync_digital_trigger_low_off_tab), _translate("MainWindow", "LED Off"))
        self.sync_digital_trigger_low_constant_tab.setToolTip(_translate("MainWindow", "Turn LED on to constant intensity when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_LED_box.setToolTip(_translate("MainWindow", "Select the active LED channel when trigger is LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_LED_box.setTitle(_translate("MainWindow", "LED Channel"))
        self.sync_digital_trigger_low_constant_LED3_button.setToolTip(_translate("MainWindow", "Set LED #3 active when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_LED3_button.setText(_translate("MainWindow", "LED #3"))
        self.sync_digital_trigger_low_constant_LED1_button.setToolTip(_translate("MainWindow", "Set LED #1 active when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_LED1_button.setText(_translate("MainWindow", "LED #1"))
        self.sync_digital_trigger_low_constant_LED2_button.setToolTip(_translate("MainWindow", "Set LED #2 active when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_LED2_button.setText(_translate("MainWindow", "LED #2"))
        self.sync_digital_trigger_low_constant_LEDn_button.setToolTip(_translate("MainWindow", "Do not change active LED when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_LEDn_button.setText(_translate("MainWindow", "Current LED"))
        self.sync_digital_trigger_low_constant_LED4_button.setToolTip(_translate("MainWindow", "Set LED #4 active when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_LED4_button.setText(_translate("MainWindow", "LED #4"))
        self.sync_digital_trigger_low_constant_config_frame.setToolTip(_translate("MainWindow", "Set the LED intensity and duration when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_config_current_label2.setToolTip(_translate("MainWindow", "Set the LED current when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_config_current_label2.setText(_translate("MainWindow", "%"))
        self.sync_digital_trigger_low_constant_config_PWM_box.setToolTip(_translate("MainWindow", "Set the LED PWM when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_config_PWM_label2.setToolTip(_translate("MainWindow", "Set the LED PWM when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_config_PWM_label2.setText(_translate("MainWindow", "%"))
        self.sync_digital_trigger_low_constant_config_duration_label1.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on until trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_low_constant_config_duration_label1.setText(_translate("MainWindow", "Duration:"))
        self.sync_digital_trigger_low_constant_config_duration_box.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on until trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_low_constant_config_current_box.setToolTip(_translate("MainWindow", "Set the LED current when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_config_PWM_label1.setToolTip(_translate("MainWindow", "Set the LED PWM when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_config_PWM_label1.setText(_translate("MainWindow", "LED PWM:"))
        self.sync_digital_trigger_low_constant_config_duration_label2.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on until trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_low_constant_config_duration_label2.setText(_translate("MainWindow", "sec"))
        self.sync_digital_trigger_low_constant_config_current_label1.setToolTip(_translate("MainWindow", "Set the LED current when the digital trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_constant_config_current_label1.setText(_translate("MainWindow", "LED Current:"))
        self.sync_digital_trigger_low_tab.setTabText(self.sync_digital_trigger_low_tab.indexOf(self.sync_digital_trigger_low_constant_tab), _translate("MainWindow", "Constant Value"))
        self.sync_digital_trigger_low_sequence_tab.setToolTip(_translate("MainWindow", "Run LED through sequence of intensities when trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_low_sequence_table.setToolTip(_translate("MainWindow", "LED intensity sequence file"))
        item = self.sync_digital_trigger_low_sequence_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "LED #"))
        item = self.sync_digital_trigger_low_sequence_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "LED PWM (%)"))
        item = self.sync_digital_trigger_low_sequence_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "LED current (%)"))
        item = self.sync_digital_trigger_low_sequence_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Duration (s)"))
        self.sync_digital_trigger_low_sequence_load_button.setToolTip(_translate("MainWindow", "Load LED intensity sequence file (*.lsq)"))
        self.sync_digital_trigger_low_sequence_load_button.setText(_translate("MainWindow", "Load Wave File"))
        self.sync_digital_trigger_low_sequence_save_button.setToolTip(_translate("MainWindow", "Save LED intensity sequence file (*.lsq)"))
        self.sync_digital_trigger_low_sequence_save_button.setText(_translate("MainWindow", "Save Wave File"))
        self.sync_digital_trigger_low_tab.setTabText(self.sync_digital_trigger_low_tab.indexOf(self.sync_digital_trigger_low_sequence_tab), _translate("MainWindow", "Sequence"))
        self.sync_digital_trigger_high_box.setToolTip(_translate("MainWindow", "Driver configration when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_box.setTitle(_translate("MainWindow", "Event: Trigger HIGH (>2.5V)"))
        self.sync_digital_trigger_high_tab.setToolTip(_translate("MainWindow", "Select event type for when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_off_tab.setToolTip(_translate("MainWindow", "Turn LED off when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_off_label.setToolTip(_translate("MainWindow", "Turn LED off when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_off_label.setText(_translate("MainWindow", "Turn active LED off"))
        self.sync_digital_trigger_high_tab.setTabText(self.sync_digital_trigger_high_tab.indexOf(self.sync_digital_trigger_high_off_tab), _translate("MainWindow", "LED Off"))
        self.sync_digital_trigger_high_constant_tab.setToolTip(_translate("MainWindow", "Turn LED on to constant intensity when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_LED_box.setToolTip(_translate("MainWindow", "Select the active LED channel when trigger is HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_LED_box.setTitle(_translate("MainWindow", "LED Channel"))
        self.sync_digital_trigger_high_constant_LED3_button.setToolTip(_translate("MainWindow", "Set LED #3 active when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_LED3_button.setText(_translate("MainWindow", "LED #3"))
        self.sync_digital_trigger_high_constant_LED1_button.setToolTip(_translate("MainWindow", "Set LED #1 active when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_LED1_button.setText(_translate("MainWindow", "LED #1"))
        self.sync_digital_trigger_high_constant_LED2_button.setToolTip(_translate("MainWindow", "Set LED #2 active when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_LED2_button.setText(_translate("MainWindow", "LED #2"))
        self.sync_digital_trigger_high_constant_LEDn_button.setToolTip(_translate("MainWindow", "Do not change active LED when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_LEDn_button.setText(_translate("MainWindow", "Current LED"))
        self.sync_digital_trigger_high_constant_LED4_button.setToolTip(_translate("MainWindow", "Set LED #4 active when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_LED4_button.setText(_translate("MainWindow", "LED #4"))
        self.sync_digital_trigger_high_constant_config_frame.setToolTip(_translate("MainWindow", "Set the LED intensity and duration when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_config_current_label2.setToolTip(_translate("MainWindow", "Set the LED current when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_config_current_label2.setText(_translate("MainWindow", "%"))
        self.sync_digital_trigger_high_constant_config_PWM_box.setToolTip(_translate("MainWindow", "Set the LED PWM when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_config_PWM_label2.setToolTip(_translate("MainWindow", "Set the LED PWM when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_config_PWM_label2.setText(_translate("MainWindow", "%"))
        self.sync_digital_trigger_high_constant_config_duration_label1.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on until trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_high_constant_config_duration_label1.setText(_translate("MainWindow", "Duration:"))
        self.sync_digital_trigger_high_constant_config_duration_box.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on until trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_high_constant_config_current_box.setToolTip(_translate("MainWindow", "Set the LED current when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_config_PWM_label1.setToolTip(_translate("MainWindow", "Set the LED PWM when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_config_PWM_label1.setText(_translate("MainWindow", "LED PWM:"))
        self.sync_digital_trigger_high_constant_config_duration_label2.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on until trigger goes LOW (<1.0V)"))
        self.sync_digital_trigger_high_constant_config_duration_label2.setText(_translate("MainWindow", "sec"))
        self.sync_digital_trigger_high_constant_config_current_label1.setToolTip(_translate("MainWindow", "Set the LED current when the digital trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_constant_config_current_label1.setText(_translate("MainWindow", "LED Current:"))
        self.sync_digital_trigger_high_tab.setTabText(self.sync_digital_trigger_high_tab.indexOf(self.sync_digital_trigger_high_constant_tab), _translate("MainWindow", "Constant Value"))
        self.sync_digital_trigger_high_sequence_tab.setToolTip(_translate("MainWindow", "Run LED through sequence of intensities when trigger goes HIGH (>2.5V)"))
        self.sync_digital_trigger_high_sequence_table.setToolTip(_translate("MainWindow", "LED intensity sequence file"))
        item = self.sync_digital_trigger_high_sequence_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "LED #"))
        item = self.sync_digital_trigger_high_sequence_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "LED PWM (%)"))
        item = self.sync_digital_trigger_high_sequence_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "LED current (%)"))
        item = self.sync_digital_trigger_high_sequence_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Duration (s)"))
        self.sync_digital_trigger_high_sequence_load_button.setToolTip(_translate("MainWindow", "Load LED intensity sequence file (*.lsq)"))
        self.sync_digital_trigger_high_sequence_load_button.setText(_translate("MainWindow", "Load Wave File"))
        self.sync_digital_trigger_high_sequence_save_button.setToolTip(_translate("MainWindow", "Save LED intensity sequence file (*.lsq)"))
        self.sync_digital_trigger_high_sequence_save_button.setText(_translate("MainWindow", "Save Wave File"))
        self.sync_digital_trigger_high_tab.setTabText(self.sync_digital_trigger_high_tab.indexOf(self.sync_digital_trigger_high_sequence_tab), _translate("MainWindow", "Sequence"))
        self.sync_toolbox.setItemText(self.sync_toolbox.indexOf(self.sync_digital_page), _translate("MainWindow", "Digital"))
        self.sync_analog_page.setToolTip(_translate("MainWindow", "Control LED intensity remotely with an analog voltage"))
        self.sync_analog_output_tab.setToolTip(_translate("MainWindow", "Configure how the analog input will be converted to LED output."))
        self.sync_analog_output_PWM_tab.setToolTip(_translate("MainWindow", "Convert analog input voltage to LED PWM output"))
        self.sync_analog_output_PWM_avg_slider_label.setToolTip(_translate("MainWindow", "Set the number of individual reads to average to filter the input ADC"))
        self.sync_analog_output_PWM_avg_slider_label.setText(_translate("MainWindow", "# of ADC samples per step:"))
        self.sync_analog_output_PWM_avg_slider.setToolTip(_translate("MainWindow", "Set the number of individual reads to average to filter the input ADC"))
        self.sync_analog_output_PWM_avg_frame.setToolTip(_translate("MainWindow", "Current number of ADC samples per step"))
        self.sync_analog_output_PWM_avg_num_label.setToolTip(_translate("MainWindow", "The number of ADC samples per step."))
        self.sync_analog_output_PWM_avg_num_label.setText(_translate("MainWindow", "# of averages: 1"))
        self.sync_analog_output_PWM_avg_bandiwdth_label.setToolTip(_translate("MainWindow", "Estimated maximum bandwidth analog output."))
        self.sync_analog_output_PWM_avg_bandiwdth_label.setText(_translate("MainWindow", "Approximate bandwidth: x kHz"))
        self.sync_analog_output_PWM_label.setToolTip(_translate("MainWindow", "LED current will be set to the configured current limit for the LED."))
        self.sync_analog_output_PWM_label.setText(_translate("MainWindow", "Control LED intensity by converting a 0 - 3.3V analog input to LED PWM"))
        self.sync_analog_output_tab.setTabText(self.sync_analog_output_tab.indexOf(self.sync_analog_output_PWM_tab), _translate("MainWindow", "Buffered - PWM"))
        self.sync_analog_output_current_tab.setToolTip(_translate("MainWindow", "Convert analog input voltage to LED current output"))
        self.sync_analog_output_current_avg_frame.setToolTip(_translate("MainWindow", "Current number of ADC samples per step"))
        self.sync_analog_output_current_avg_num_label.setToolTip(_translate("MainWindow", "The number of ADC samples per step."))
        self.sync_analog_output_current_avg_num_label.setText(_translate("MainWindow", "# of averages: 1"))
        self.sync_analog_output_current_avg_bandiwdth_label.setToolTip(_translate("MainWindow", "Estimated maximum bandwidth analog output."))
        self.sync_analog_output_current_avg_bandiwdth_label.setText(_translate("MainWindow", "Approximate bandwidth: x kHz"))
        self.sync_analog_output_current_avg_slider.setToolTip(_translate("MainWindow", "Set the number of individual reads to average to filter the input ADC"))
        self.sync_analog_output_current_avg_slider_label.setToolTip(_translate("MainWindow", "Set the number of individual reads to average to filter the input ADC"))
        self.sync_analog_output_current_avg_slider_label.setText(_translate("MainWindow", "# of ADC samples per step:"))
        self.sync_analog_output_current_label.setToolTip(_translate("MainWindow", "The LED current will be adjusted so the voltage across the current sense resistor matches the input voltage."))
        self.sync_analog_output_current_label.setText(_translate("MainWindow", "Control LED intensity by converting analog input voltage to LED current"))
        self.sync_analog_output_tab.setTabText(self.sync_analog_output_tab.indexOf(self.sync_analog_output_current_tab), _translate("MainWindow", "Buffered - Current"))
        self.sync_analog_output_unbuffered_tab.setToolTip(_translate("MainWindow", "Directly drive the op-amp non-inverting input with an external analog voltage"))
        self.sync_analog_output_unbuffered_label.setToolTip(_translate("MainWindow", "Use at your own risk..."))
        self.sync_analog_output_unbuffered_label.setText(_translate("MainWindow", "Warning: This mode bypasses any programmed current limits and uses the dedicated \"External Analog\" channel to directly connect the input analog voltage to the non-inverting input of the driver\'s op-amp.  Supplying excessive voltage to this input can damage the LED, Teensy, and driver circuit.  This mode should be used only when very low-latency and/or high-bandwidth is required. Use this mode at your own risk.\n"
"\n"
"This input is clamped to 0-3.3V, and is rated for -3V to +6V max.  The input has a very high impedance in the 0-3.3V range, and a low 200 ohm impedance outside the 0-3.3V range.\n"
"\n"
"Due to the input offset voltage on the op-amp, a small negative voltage (around -50mV) will need to be input to fully turn off the LED.    "))
        self.sync_analog_output_tab.setTabText(self.sync_analog_output_tab.indexOf(self.sync_analog_output_unbuffered_tab), _translate("MainWindow", "Unbuffered - Current"))
        self.sync_analog_input_channel_box.setToolTip(_translate("MainWindow", "Select the input channel the external analog signal is connected to."))
        self.sync_analog_input_channel_box.setTitle(_translate("MainWindow", "Input Channel"))
        self.sync_analog_input1_button.setToolTip(_translate("MainWindow", "Analog signal on input channel #1"))
        self.sync_analog_input1_button.setText(_translate("MainWindow", "Channel #1"))
        self.sync_analog_input2_button.setToolTip(_translate("MainWindow", "Analog signal on input channel #2"))
        self.sync_analog_input2_button.setText(_translate("MainWindow", "Channel #2"))
        self.sync_analog_input3_button.setToolTip(_translate("MainWindow", "Analog signal on input channel #3"))
        self.sync_analog_input3_button.setText(_translate("MainWindow", "Channel #3"))
        self.sync_analog_input4_button.setToolTip(_translate("MainWindow", "Analog signal on input channel #4"))
        self.sync_analog_input4_button.setText(_translate("MainWindow", "Channel #4"))
        self.sync_analog_LED_box.setToolTip(_translate("MainWindow", "Select the LED channel to be synced "))
        self.sync_analog_LED_box.setTitle(_translate("MainWindow", "LED Channel"))
        self.sync_analog_LED1_button.setToolTip(_translate("MainWindow", "Sync LED #1 to the analog input"))
        self.sync_analog_LED1_button.setText(_translate("MainWindow", "LED #1"))
        self.sync_analog_LED4_button.setToolTip(_translate("MainWindow", "Sync LED #4 to the analog input"))
        self.sync_analog_LED4_button.setText(_translate("MainWindow", "LED #4"))
        self.sync_analog_LEDn_button.setToolTip(_translate("MainWindow", "Sync current active LED to the analog input"))
        self.sync_analog_LEDn_button.setText(_translate("MainWindow", "Current LED"))
        self.sync_analog_LED2_button.setToolTip(_translate("MainWindow", "Sync LED #2 to the analog input"))
        self.sync_analog_LED2_button.setText(_translate("MainWindow", "LED #2"))
        self.sync_analog_LED3_button.setToolTip(_translate("MainWindow", "Sync LED #3 to the analog input"))
        self.sync_analog_LED3_button.setText(_translate("MainWindow", "LED #3"))
        self.sync_toolbox.setItemText(self.sync_toolbox.indexOf(self.sync_analog_page), _translate("MainWindow", "Analog"))
        self.sync_confocal_page.setToolTip(_translate("MainWindow", "Sync the LED output to a confocal laser scanning microscope"))
        self.sync_confocal_shutter_box.setToolTip(_translate("MainWindow", "The shutter output voltage is used to determine the start and stop of a scan."))
        self.sync_confocal_shutter_box.setTitle(_translate("MainWindow", "Shutter Sync"))
        self.sync_confocal_shutter_high_button.setToolTip(_translate("MainWindow", "Shutter output voltage goes HIGH (>2.5V) when shutter is open"))
        self.sync_confocal_shutter_high_button.setText(_translate("MainWindow", "HIGH"))
        self.sync_confocal_shutter_polarity_label.setToolTip(_translate("MainWindow", "The polarity of the shutter output voltage when the shutter is open."))
        self.sync_confocal_shutter_polarity_label.setText(_translate("MainWindow", "Shutter open trigger polarity:"))
        self.sync_confocal_shutter_low_button.setToolTip(_translate("MainWindow", "Shutter output voltage goes LOW (<1.0V) when shutter is open"))
        self.sync_confocal_shutter_low_button.setText(_translate("MainWindow", "LOW"))
        self.sync_confocal_shutter_label.setToolTip(_translate("MainWindow", "The shutter input channel is fixed to channel #1"))
        self.sync_confocal_shutter_label.setText(_translate("MainWindow", "NOTE: Connect the shutter sync input to channel #1."))
        self.sync_confocal_line_box.setToolTip(_translate("MainWindow", "Configure the input for syncing the driver to the line scan"))
        self.sync_confocal_line_box.setTitle(_translate("MainWindow", "Line Sync"))
        self.sync_confocal_line_channel_box.setToolTip(_translate("MainWindow", "Select the input channel the line sync is connected to."))
        self.sync_confocal_line_channel_box.setTitle(_translate("MainWindow", "Input Channel"))
        self.sync_confocal_line_input1_button.setToolTip(_translate("MainWindow", "Channel #1 is fixed as the shutter input"))
        self.sync_confocal_line_input1_button.setText(_translate("MainWindow", "Shutter only"))
        self.sync_confocal_line_input2_button.setToolTip(_translate("MainWindow", "Line sync input on channel #2"))
        self.sync_confocal_line_input2_button.setText(_translate("MainWindow", "Channel #2"))
        self.sync_confocal_line_input3_button.setToolTip(_translate("MainWindow", "Line sync input on channel #3"))
        self.sync_confocal_line_input3_button.setText(_translate("MainWindow", "Channel #3"))
        self.sync_confocal_line_input4_button.setToolTip(_translate("MainWindow", "Line sync input on channel #4"))
        self.sync_confocal_line_input4_button.setText(_translate("MainWindow", "Channel #4"))
        self.sync_confocal_line_digital_tab.setToolTip(_translate("MainWindow", "Sync the driver to a digital line clock"))
        self.sync_confocal_line_digital_label.setToolTip(_translate("MainWindow", "Polarity of the line clock trigger."))
        self.sync_confocal_line_digital_label.setText(_translate("MainWindow", "Trigger Polarity:"))
        self.sync_confocal_line_digital_high_button.setToolTip(_translate("MainWindow", "Sync the driver to the line clock when it goes HIGH (>2.5V)."))
        self.sync_confocal_line_digital_high_button.setText(_translate("MainWindow", "HIGH"))
        self.sync_confocal_line_digital_low_button.setToolTip(_translate("MainWindow", "Sync the driver to the line clock when it goes LOW (<1.0V)."))
        self.sync_confocal_line_digital_low_button.setText(_translate("MainWindow", "LOW"))
        self.sync_confocal_line_tab.setTabText(self.sync_confocal_line_tab.indexOf(self.sync_confocal_line_digital_tab), _translate("MainWindow", "Digital - Line Clock"))
        self.sync_confocal_line_analog_tab.setToolTip(_translate("MainWindow", "Sync the driver to the analog voltage driving the scanning mirror."))
        self.sync_confocal_line_analog_polarity_label.setToolTip(_translate("MainWindow", "Set the polarity of the driver sync."))
        self.sync_confocal_line_analog_polarity_label.setText(_translate("MainWindow", "Trigger polarity:"))
        self.sync_confocal_line_analog_threshold_label1.setToolTip(_translate("MainWindow", "The voltage threshold that the driver will sync to."))
        self.sync_confocal_line_analog_threshold_label1.setText(_translate("MainWindow", "Threshold Voltage:"))
        self.sync_confocal_line_analog_polarity_above_button.setToolTip(_translate("MainWindow", "Sync the driver when the mirror voltage rises above the set threshold."))
        self.sync_confocal_line_analog_polarity_above_button.setText(_translate("MainWindow", "Above Threshold"))
        self.sync_confocal_line_analog_polarity_below_button.setToolTip(_translate("MainWindow", "Sync the driver when the mirror voltage falls below the set threshold."))
        self.sync_confocal_line_analog_polarity_below_button.setText(_translate("MainWindow", "Below Threshold"))
        self.sync_confocal_line_analog_threshold_box.setToolTip(_translate("MainWindow", "The voltage threshold that the driver will sync to (0.01V - 3.29V)."))
        self.sync_confocal_line_analog_threshold_label2.setToolTip(_translate("MainWindow", "The voltage threshold that the driver will sync to."))
        self.sync_confocal_line_analog_threshold_label2.setText(_translate("MainWindow", "V"))
        self.sync_confocal_line_tab.setTabText(self.sync_confocal_line_tab.indexOf(self.sync_confocal_line_analog_tab), _translate("MainWindow", "Analog - Mirror Voltage"))
        self.sync_confocal_delay_box.setToolTip(_translate("MainWindow", "Configure the delays relative to the sync trigger to align the LED output with the edges of the FOV."))
        self.sync_confocal_delay_box.setTitle(_translate("MainWindow", "Delays"))
        self.sync_confocal_delay2_box.setToolTip(_translate("MainWindow", "Set the time between the start of flyback and when the scan re-enters the FOV."))
        self.sync_confocal_delay3_label1.setToolTip(_translate("MainWindow", "Set the time required for the scan to traverse the FOV (i.e. the end of one flyback to the start of another)."))
        self.sync_confocal_delay3_label1.setText(_translate("MainWindow", "3) Bidirectional: time between windows:"))
        self.sync_confocal_delay1_box.setToolTip(_translate("MainWindow", "Set the time between the line sync trigger and the edge of the FOV/start of flyback."))
        self.sync_confocal_scan_mode_frame.setToolTip(_translate("MainWindow", "Set whether the confocal microscope will be doing a unidirectional or bidirectional scan."))
        self.sync_confocal_scan_unidirectional_button.setToolTip(_translate("MainWindow", "The confocal microscope is scanning in unidirectional mode (one scan line per mirror cycle)"))
        self.sync_confocal_scan_unidirectional_button.setText(_translate("MainWindow", "Unidirectional"))
        self.sync_confocal_scan_mode_label.setToolTip(_translate("MainWindow", "Set the scan mode the confocal microscope is using"))
        self.sync_confocal_scan_mode_label.setText(_translate("MainWindow", "Scan mode:"))
        self.sync_confocal_scan_bidirectional_button.setToolTip(_translate("MainWindow", "The confocal microscope is scanning in bidirectional mode (two scan lines per mirror cycle)"))
        self.sync_confocal_scan_bidirectional_button.setText(_translate("MainWindow", "Bidirectional"))
        self.sync_confocal_delay1_label1.setToolTip(_translate("MainWindow", "Set the time between the line sync trigger and the edge of the FOV/start of flyback."))
        self.sync_confocal_delay1_label1.setText(_translate("MainWindow", "1) From trigger to flyback window:"))
        self.sync_confocal_delay3_box.setToolTip(_translate("MainWindow", "Set the time required for the scan to traverse the FOV (i.e. the end of one flyback to the start of another)."))
        self.sync_confocal_delay2_label2.setToolTip(_translate("MainWindow", "Set the time between the start of flyback and when the scan re-enters the FOV."))
        self.sync_confocal_delay2_label2.setText(_translate("MainWindow", "µs"))
        self.sync_confocal_delay2_label1.setToolTip(_translate("MainWindow", "Set the time between the start of flyback and when the scan re-enters the FOV."))
        self.sync_confocal_delay2_label1.setText(_translate("MainWindow", "2) Duration of flyback window:"))
        self.sync_confocal_delay1_label2.setToolTip(_translate("MainWindow", "Set the time between the line sync trigger and the edge of the FOV/start of flyback."))
        self.sync_confocal_delay1_label2.setText(_translate("MainWindow", "µs"))
        self.sync_confocal_delay3_label2.setToolTip(_translate("MainWindow", "Set the time required for the scan to traverse the FOV (i.e. the end of one flyback to the start of another)."))
        self.sync_confocal_delay3_label2.setText(_translate("MainWindow", "µs"))
        self.sync_confocal_image_box.setToolTip(_translate("MainWindow", "Configure LED intensity when the laser is inside the image FOV"))
        self.sync_confocal_image_box.setTitle(_translate("MainWindow", "Event: Image Scan"))
        self.sync_confocal_image_tab.setToolTip(_translate("MainWindow", "Select event type for when the laser is inside the image FOV"))
        self.sync_confocal_image_off_tab.setToolTip(_translate("MainWindow", "Turn LED off when the laser is inside the image FOV"))
        self.sync_confocal_image_off_label.setToolTip(_translate("MainWindow", "Turn LED off when the laser is inside the image FOV"))
        self.sync_confocal_image_off_label.setText(_translate("MainWindow", "Turn active LED off"))
        self.sync_confocal_image_tab.setTabText(self.sync_confocal_image_tab.indexOf(self.sync_confocal_image_off_tab), _translate("MainWindow", "LED Off"))
        self.sync_confocal_image_constant_tab.setToolTip(_translate("MainWindow", "Turn LED on to constant intensity when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_LED_box.setToolTip(_translate("MainWindow", "Select the active LED channel when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_LED_box.setTitle(_translate("MainWindow", "LED Channel"))
        self.sync_confocal_image_constant_LED3_button.setToolTip(_translate("MainWindow", "Set LED #3 active when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_LED3_button.setText(_translate("MainWindow", "LED #3"))
        self.sync_confocal_image_constant_LED1_button.setToolTip(_translate("MainWindow", "Set LED #1 active when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_LED1_button.setText(_translate("MainWindow", "LED #1"))
        self.sync_confocal_image_constant_LED2_button.setToolTip(_translate("MainWindow", "Set LED #2 active when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_LED2_button.setText(_translate("MainWindow", "LED #2"))
        self.sync_confocal_image_constant_LEDn_button.setToolTip(_translate("MainWindow", "Do not change active LED when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_LEDn_button.setText(_translate("MainWindow", "Current LED"))
        self.sync_confocal_image_constant_LED4_button.setToolTip(_translate("MainWindow", "Set LED #4 active when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_LED4_button.setText(_translate("MainWindow", "LED #4"))
        self.sync_confocal_image_constant_config_frame.setToolTip(_translate("MainWindow", "Set the LED intensity and duration when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_config_current_label2.setToolTip(_translate("MainWindow", "Set the LED current when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_config_current_label2.setText(_translate("MainWindow", "%"))
        self.sync_confocal_image_constant_config_PWM_box.setToolTip(_translate("MainWindow", "Set the LED PWM when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_config_PWM_label2.setToolTip(_translate("MainWindow", "Set the LED PWM when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_config_PWM_label2.setText(_translate("MainWindow", "%"))
        self.sync_confocal_image_constant_config_duration_label1.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on when the laser is inside the image FOV until end of scan"))
        self.sync_confocal_image_constant_config_duration_label1.setText(_translate("MainWindow", "Duration:"))
        self.sync_confocal_image_constant_config_duration_box.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on when the laser is inside the image FOV until end of scan"))
        self.sync_confocal_image_constant_config_current_box.setToolTip(_translate("MainWindow", "Set the LED current when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_config_PWM_label1.setToolTip(_translate("MainWindow", "Set the LED PWM when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_config_PWM_label1.setText(_translate("MainWindow", "LED PWM:"))
        self.sync_confocal_image_constant_config_duration_label2.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on when the laser is inside the image FOV until end of scan"))
        self.sync_confocal_image_constant_config_duration_label2.setText(_translate("MainWindow", "sec"))
        self.sync_confocal_image_constant_config_current_label1.setToolTip(_translate("MainWindow", "Set the LED current when the laser is inside the image FOV"))
        self.sync_confocal_image_constant_config_current_label1.setText(_translate("MainWindow", "LED Current:"))
        self.sync_confocal_image_tab.setTabText(self.sync_confocal_image_tab.indexOf(self.sync_confocal_image_constant_tab), _translate("MainWindow", "Constant Value"))
        self.sync_confocal_image_sequence_tab.setToolTip(_translate("MainWindow", "Run LED through sequence of intensities when the laser is inside the image FOV"))
        self.sync_confocal_image_sequence_table.setToolTip(_translate("MainWindow", "LED intensity sequence file"))
        item = self.sync_confocal_image_sequence_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "LED #"))
        item = self.sync_confocal_image_sequence_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "LED PWM (%)"))
        item = self.sync_confocal_image_sequence_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "LED current (%)"))
        item = self.sync_confocal_image_sequence_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Duration (s)"))
        self.sync_confocal_image_sequence_load_button.setToolTip(_translate("MainWindow", "Load LED intensity sequence file (*.lsq)"))
        self.sync_confocal_image_sequence_load_button.setText(_translate("MainWindow", "Load Wave File"))
        self.sync_confocal_image_sequence_save_button.setToolTip(_translate("MainWindow", "Save LED intensity sequence file (*.lsq)"))
        self.sync_confocal_image_sequence_save_button.setText(_translate("MainWindow", "Save Wave File"))
        self.sync_confocal_image_tab.setTabText(self.sync_confocal_image_tab.indexOf(self.sync_confocal_image_sequence_tab), _translate("MainWindow", "Sequence"))
        self.sync_confocal_image_external_tab.setToolTip(_translate("MainWindow", "Directly drive the op-amp non-inverting input with an external analog voltage"))
        self.sync_confocal_image_external_label.setToolTip(_translate("MainWindow", "Use at your own risk..."))
        self.sync_confocal_image_external_label.setText(_translate("MainWindow", "Warning: This mode bypasses preset current limits and uses the dedicated \"External Analog\" channel to directly connect the input analog voltage to the non-inverting input of the driver\'s op-amp.  Supplying excessive voltage to this input can damage the LED, Teensy, and driver circuit. Use this mode at your own risk.\n"
"\n"
"This input is clamped to 0-3.3V, and is rated for -3V to +6V max. A small negative voltage (around -50mV) will need to be input to fully turn off the LED.    "))
        self.sync_confocal_image_tab.setTabText(self.sync_confocal_image_tab.indexOf(self.sync_confocal_image_external_tab), _translate("MainWindow", "External Analog"))
        self.sync_confocal_flyback_box.setToolTip(_translate("MainWindow", "Configure LED intensity when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_box.setTitle(_translate("MainWindow", "Event: Mirror Flyback"))
        self.sync_confocal_flyback_tab.setToolTip(_translate("MainWindow", "Select event type for when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_off_tab.setToolTip(_translate("MainWindow", "Turn LED off when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_off_label.setToolTip(_translate("MainWindow", "Turn LED off when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_off_label.setText(_translate("MainWindow", "Turn active LED off"))
        self.sync_confocal_flyback_tab.setTabText(self.sync_confocal_flyback_tab.indexOf(self.sync_confocal_flyback_off_tab), _translate("MainWindow", "LED Off"))
        self.sync_confocal_flyback_constant_tab.setToolTip(_translate("MainWindow", "Turn LED on to constant intensity when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_LED_box.setToolTip(_translate("MainWindow", "Select the active LED channel when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_LED_box.setTitle(_translate("MainWindow", "LED Channel"))
        self.sync_confocal_flyback_constant_LED3_button.setToolTip(_translate("MainWindow", "Set LED #3 active when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_LED3_button.setText(_translate("MainWindow", "LED #3"))
        self.sync_confocal_flyback_constant_LED1_button.setToolTip(_translate("MainWindow", "Set LED #1 active when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_LED1_button.setText(_translate("MainWindow", "LED #1"))
        self.sync_confocal_flyback_constant_LED2_button.setToolTip(_translate("MainWindow", "Set LED #2 active when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_LED2_button.setText(_translate("MainWindow", "LED #2"))
        self.sync_confocal_flyback_constant_LEDn_button.setToolTip(_translate("MainWindow", "Do not change active LED when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_LEDn_button.setText(_translate("MainWindow", "Current LED"))
        self.sync_confocal_flyback_constant_LED4_button.setToolTip(_translate("MainWindow", "Set LED #4 active when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_LED4_button.setText(_translate("MainWindow", "LED #4"))
        self.sync_confocal_flyback_constant_config_frame.setToolTip(_translate("MainWindow", "Set the LED intensity and duration when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_config_current_label2.setToolTip(_translate("MainWindow", "Set the LED current when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_config_current_label2.setText(_translate("MainWindow", "%"))
        self.sync_confocal_flyback_constant_config_PWM_box.setToolTip(_translate("MainWindow", "Set the LED PWM when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_config_PWM_label2.setToolTip(_translate("MainWindow", "Set the LED PWM when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_config_PWM_label2.setText(_translate("MainWindow", "%"))
        self.sync_confocal_flyback_constant_config_duration_label1.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on during flyback until end of scan"))
        self.sync_confocal_flyback_constant_config_duration_label1.setText(_translate("MainWindow", "Duration:"))
        self.sync_confocal_flyback_constant_config_duration_box.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on during flyback until end of scan"))
        self.sync_confocal_flyback_constant_config_current_box.setToolTip(_translate("MainWindow", "Set the LED current when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_config_PWM_label1.setToolTip(_translate("MainWindow", "Set the LED duration when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_config_PWM_label1.setText(_translate("MainWindow", "LED PWM:"))
        self.sync_confocal_flyback_constant_config_duration_label2.setToolTip(_translate("MainWindow", "NOTE: 0 seconds = LED stays on during flyback until end of scan"))
        self.sync_confocal_flyback_constant_config_duration_label2.setText(_translate("MainWindow", "sec"))
        self.sync_confocal_flyback_constant_config_current_label1.setToolTip(_translate("MainWindow", "Set the LED current when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_constant_config_current_label1.setText(_translate("MainWindow", "LED Current:"))
        self.sync_confocal_flyback_tab.setTabText(self.sync_confocal_flyback_tab.indexOf(self.sync_confocal_flyback_constant_tab), _translate("MainWindow", "Constant Value"))
        self.sync_confocal_flyback_sequence_tab.setToolTip(_translate("MainWindow", "Run LED through sequence of intensities when the laser is outside the image FOV (flyback)"))
        self.sync_confocal_flyback_sequence_table.setToolTip(_translate("MainWindow", "LED intensity sequence file"))
        item = self.sync_confocal_flyback_sequence_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "LED #"))
        item = self.sync_confocal_flyback_sequence_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "LED PWM (%)"))
        item = self.sync_confocal_flyback_sequence_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "LED current (%)"))
        item = self.sync_confocal_flyback_sequence_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Duration (s)"))
        self.sync_confocal_flyback_sequence_load_button.setToolTip(_translate("MainWindow", "Load LED intensity sequence file (*.lsq)"))
        self.sync_confocal_flyback_sequence_load_button.setText(_translate("MainWindow", "Load Wave File"))
        self.sync_confocal_flyback_sequence_save_button.setToolTip(_translate("MainWindow", "Save LED intensity sequence file (*.lsq)"))
        self.sync_confocal_flyback_sequence_save_button.setText(_translate("MainWindow", "Save Wave File"))
        self.sync_confocal_flyback_tab.setTabText(self.sync_confocal_flyback_tab.indexOf(self.sync_confocal_flyback_sequence_tab), _translate("MainWindow", "Sequence"))
        self.sync_confocal_flyback_external_tab.setToolTip(_translate("MainWindow", "Directly drive the op-amp non-inverting input with an external analog voltage"))
        self.sync_confocal_flyback_external_label.setToolTip(_translate("MainWindow", "Use at your own risk..."))
        self.sync_confocal_flyback_external_label.setText(_translate("MainWindow", "Warning: This mode bypasses preset current limits and uses the dedicated \"External Analog\" channel to directly connect the input analog voltage to the non-inverting input of the driver\'s op-amp.  Supplying excessive voltage to this input can damage the LED, Teensy, and driver circuit. Use this mode at your own risk.\n"
"\n"
"This input is clamped to 0-3.3V, and is rated for -3V to +6V max. A small negative voltage (around -50mV) will need to be input to fully turn off the LED.    "))
        self.sync_confocal_flyback_tab.setTabText(self.sync_confocal_flyback_tab.indexOf(self.sync_confocal_flyback_external_tab), _translate("MainWindow", "External Analog"))
        self.sync_toolbox.setItemText(self.sync_toolbox.indexOf(self.sync_confocal_page), _translate("MainWindow", "Confocal"))
        self.sync_serial_page.setToolTip(_translate("MainWindow", "Stream LED intensity changes to driver over USB"))
        self.sync_serial_label.setToolTip(_translate("MainWindow", "Stream LED intensity changes to driver over USB"))
        self.sync_serial_label.setText(_translate("MainWindow", "Description for serial connection protocol"))
        self.sync_toolbox.setItemText(self.sync_toolbox.indexOf(self.sync_serial_page), _translate("MainWindow", "Serial"))
        self.sync_custom_page.setToolTip(_translate("MainWindow", "Use custom written LED sync function in the LED driver code"))
        self.sync_custom_label.setToolTip(_translate("MainWindow", "Use the \"custom\" sync function in the LED driver code"))
        self.sync_custom_label.setText(_translate("MainWindow", "Description for custom sync function"))
        self.sync_toolbox.setItemText(self.sync_toolbox.indexOf(self.sync_custom_page), _translate("MainWindow", "Custom"))
        self.sync_save_button.setToolTip(_translate("MainWindow", "Save sync configuration as a text file (*.lsc)"))
        self.sync_save_button.setText(_translate("MainWindow", "Save Configuration"))
        self.sync_upload_button.setToolTip(_translate("MainWindow", "Upload the new sync configuration to the LED driver."))
        self.sync_upload_button.setText(_translate("MainWindow", "Upload to Driver"))
        self.sync_output_box.setToolTip(_translate("MainWindow", "Select a sync output channel.  This channel will output 5V when the LED is on, and 0V when the LED is off."))
        self.sync_output_box.setTitle(_translate("MainWindow", "Sync Output"))
        self.sync_output1_button.setToolTip(_translate("MainWindow", "Sync output #1 to the LED on/off state (5V out = LED on, 0V out = LED off)"))
        self.sync_output1_button.setText(_translate("MainWindow", "Output #1"))
        self.sync_output3_button.setToolTip(_translate("MainWindow", "Sync output #3 to the LED on/off state (5V out = LED on, 0V out = LED off)"))
        self.sync_output3_button.setText(_translate("MainWindow", "Output #3"))
        self.sync_output2_button.setToolTip(_translate("MainWindow", "Sync output #2 to the LED on/off state (5V out = LED on, 0V out = LED off)"))
        self.sync_output2_button.setText(_translate("MainWindow", "Output #2"))
        self.sync_output_none_button.setToolTip(_translate("MainWindow", "Deactivate sync output."))
        self.sync_output_none_button.setText(_translate("MainWindow", "None"))
        self.gui_master_tab.setTabText(self.gui_master_tab.indexOf(self.sync_tab), _translate("MainWindow", "Sync"))
        self.configure_upload_button.setToolTip(_translate("MainWindow", "Upload the new configuration to the LED driver."))
        self.configure_upload_button.setText(_translate("MainWindow", "Upload to Driver"))
        self.configure_current_limit_box.setToolTip(_translate("MainWindow", "Set the current limit for each LED channel."))
        self.configure_current_limit_box.setTitle(_translate("MainWindow", "LED Current Limit (A)"))
        self.configure_current_limit_LED4_spin_box.setToolTip(_translate("MainWindow", "Set the current limit (in amps) for LED channel #4"))
        self.configure_current_limit_test_button.setToolTip(_translate("MainWindow", "This will briefly drive each active LED channel at the maximum current.  Any LED channels that failed to reach the set current (such as a disconnected channel) will be deactivated."))
        self.configure_current_limit_test_button.setText(_translate("MainWindow", "Test LED Current"))
        self.configure_current_limit_LED3_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #3"))
        self.configure_current_limit_LED3_box.setText(_translate("MainWindow", "LED #3"))
        self.configure_current_limit_LED2_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #2"))
        self.configure_current_limit_LED2_box.setText(_translate("MainWindow", "LED #2"))
        self.configure_current_limit_LED1_spin_box.setToolTip(_translate("MainWindow", "Set the current limit (in amps) for LED channel #1"))
        self.configure_current_limit_LED3_spin_box.setToolTip(_translate("MainWindow", "Set the current limit (in amps) for LED channel #3"))
        self.configure_current_limit_LED4_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #4"))
        self.configure_current_limit_LED4_box.setText(_translate("MainWindow", "LED #4"))
        self.configure_current_limit_LED2_spin_box.setToolTip(_translate("MainWindow", "Set the current limit (in amps) for LED channel #2"))
        self.configure_current_limit_LED1_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #1"))
        self.configure_current_limit_LED1_box.setText(_translate("MainWindow", "LED #1"))
        self.configure_fan_box.setToolTip(_translate("MainWindow", "Configure the fan speed as a function of temperature"))
        self.configure_fan_box.setTitle(_translate("MainWindow", "Fan"))
        self.configure_fan_driver_max_box.setToolTip(_translate("MainWindow", "Internal fan speed will linearly increase with temperature, reaching full speed at this temperature."))
        self.configure_fan_external_min_label.setToolTip(_translate("MainWindow", "External fan will turn off below this temperature."))
        self.configure_fan_external_min_label.setText(_translate("MainWindow", "External Fan Min (°C):"))
        self.configure_fan_driver_min_label.setToolTip(_translate("MainWindow", "Internal fan will turn off below this temperature."))
        self.configure_fan_driver_min_label.setText(_translate("MainWindow", "Driver Fan Min (°C):"))
        self.configure_fan_driver_min_box.setToolTip(_translate("MainWindow", "Internal fan will turn off below this temperature."))
        self.configure_fan_external_max_label.setToolTip(_translate("MainWindow", "External fan speed will linearly increase with temperature, reaching full speed at this temperature."))
        self.configure_fan_external_max_label.setText(_translate("MainWindow", "External Fan Max (°C):"))
        self.configure_fan_external_output1_box.setToolTip(_translate("MainWindow", "Use ouput #1 for the 5V PWM that will control the external fan speed."))
        self.configure_fan_external_output1_box.setText(_translate("MainWindow", "Output #1"))
        self.configure_fan_external_output2_box.setToolTip(_translate("MainWindow", "Use ouput #2 for the 5V PWM that will control the external fan speed."))
        self.configure_fan_external_output2_box.setText(_translate("MainWindow", "Output #2"))
        self.configure_fan_external_output_label.setToolTip(_translate("MainWindow", "Select the ouput for the 5V PWM that will control the external fan speed."))
        self.configure_fan_external_output_label.setText(_translate("MainWindow", "External Fan PWM Output:"))
        self.configure_fan_external_output3_box.setToolTip(_translate("MainWindow", "Use ouput #3 for the 5V PWM that will control the external fan speed."))
        self.configure_fan_external_output3_box.setText(_translate("MainWindow", "Output #3"))
        self.configure_fan_external_no_output_box.setToolTip(_translate("MainWindow", "Deactivate external fan speed control"))
        self.configure_fan_external_no_output_box.setText(_translate("MainWindow", "None"))
        self.configure_fan_driver_max_label.setToolTip(_translate("MainWindow", "Internal fan speed will linearly increase with temperature, reaching full speed at this temperature."))
        self.configure_fan_driver_max_label.setText(_translate("MainWindow", "Driver Fan Max (°C):"))
        self.configure_fan_external_max_box.setToolTip(_translate("MainWindow", "External fan speed will linearly increase with temperature, reaching full speed at this temperature."))
        self.configure_fan_external_min_box.setToolTip(_translate("MainWindow", "External fan will turn off below this temperature."))
        self.configure_temperature_box.setToolTip(_translate("MainWindow", "Configure the temperature limits for the LED driver"))
        self.configure_temperature_box.setTitle(_translate("MainWindow", "Temperature"))
        self.configure_temperature_transistor_fault_box.setToolTip(_translate("MainWindow", "If the transistor exceeds this temperature the driver will automatically turn off until it cools back down."))
        self.configure_temperature_resistor_warn_box.setToolTip(_translate("MainWindow", "This is the temperature the resistor(s) must cool back down to before the driver turns back on after a thermal fault."))
        self.configure_temperature_transistor_warn_box.setToolTip(_translate("MainWindow", "This is the temperature the transistor must cool back down to before the driver turns back on after a thermal fault."))
        self.configure_temperature_resistor_fault_label.setToolTip(_translate("MainWindow", "If the resistor(s) exceed this temperature the driver will automatically turn off until they cool back down."))
        self.configure_temperature_resistor_fault_label.setText(_translate("MainWindow", "Resistor Fault (°C):"))
        self.configure_temperature_resistor_fault_box.setToolTip(_translate("MainWindow", "If the resistor(s) exceed this temperature the driver will automatically turn off until they cool back down."))
        self.configure_temperature_transistor_warn_label.setToolTip(_translate("MainWindow", "This is the temperature the transistor must cool back down to before the driver turns back on after a thermal fault."))
        self.configure_temperature_transistor_warn_label.setText(_translate("MainWindow", "Transistor Warn (°C):"))
        self.configure_temperature_transistor_fault_label.setToolTip(_translate("MainWindow", "If the transistor exceeds this temperature the driver will automatically turn off until it cools back down."))
        self.configure_temperature_transistor_fault_label.setText(_translate("MainWindow", "Transistor Fault (°C):"))
        self.configure_temperature_resistor_warn_label.setToolTip(_translate("MainWindow", "This is the temperature the resistor(s) must cool back down to before the driver turns back on after a thermal fault."))
        self.configure_temperature_resistor_warn_label.setText(_translate("MainWindow", "Resistor Warn (°C):"))
        self.configure_LED_merge_box.setToolTip(_translate("MainWindow", "Combine individual LED channels to drive LEDs at up to 4 amps (1 amp per channel)."))
        self.configure_LED_merge_box.setTitle(_translate("MainWindow", "Merge Channels"))
        self.configure_LED_merge_channel2_button1.setToolTip(_translate("MainWindow", "Connect LED #1 to channel #2"))
        self.configure_LED_merge_channel2_button1.setText(_translate("MainWindow", "LED #1"))
        self.configure_LED_merge_channel3_button2.setToolTip(_translate("MainWindow", "Connect LED #2 to channel #3"))
        self.configure_LED_merge_channel3_button2.setText(_translate("MainWindow", "LED #2"))
        self.configure_LED_merge_channel2_label.setToolTip(_translate("MainWindow", "Select the LED # connected to channel #2"))
        self.configure_LED_merge_channel2_label.setText(_translate("MainWindow", "Channel #2:"))
        self.configure_LED_merge_channel4_label.setToolTip(_translate("MainWindow", "Select the LED # connected to channel #4"))
        self.configure_LED_merge_channel4_label.setText(_translate("MainWindow", "Channel #4:"))
        self.configure_LED_merge_channel2_button2.setToolTip(_translate("MainWindow", "Connect LED #2 to channel #2"))
        self.configure_LED_merge_channel2_button2.setText(_translate("MainWindow", "LED #2"))
        self.configure_LED_merge_channel3_label.setToolTip(_translate("MainWindow", "Select the LED # connected to channel #3"))
        self.configure_LED_merge_channel3_label.setText(_translate("MainWindow", "Channel #3:"))
        self.configure_LED_merge_channel1_label.setToolTip(_translate("MainWindow", "LED #1 is always connected to channel #1"))
        self.configure_LED_merge_channel1_label.setText(_translate("MainWindow", "Channel #1:"))
        self.configure_LED_merge_channel3_button1.setToolTip(_translate("MainWindow", "Connect LED #1 to channel #3"))
        self.configure_LED_merge_channel3_button1.setText(_translate("MainWindow", "LED #1"))
        self.configure_LED_merge_channel4_button1.setToolTip(_translate("MainWindow", "Connect LED #1 to channel #4"))
        self.configure_LED_merge_channel4_button1.setText(_translate("MainWindow", "LED #1"))
        self.configure_LED_merge_channel1_button1.setToolTip(_translate("MainWindow", "LED #1 is always connected to channel #1"))
        self.configure_LED_merge_channel1_button1.setText(_translate("MainWindow", "LED #1"))
        self.configure_LED_merge_channel4_button2.setToolTip(_translate("MainWindow", "Connect LED #2 to channel #4"))
        self.configure_LED_merge_channel4_button2.setText(_translate("MainWindow", "LED #2"))
        self.configure_LED_merge_channel3_button3.setToolTip(_translate("MainWindow", "Connect LED #3 to channel #3"))
        self.configure_LED_merge_channel3_button3.setText(_translate("MainWindow", "LED #3"))
        self.configure_LED_merge_channel4_button3.setToolTip(_translate("MainWindow", "Connect LED #1 to channel #4"))
        self.configure_LED_merge_channel4_button3.setText(_translate("MainWindow", "LED #3"))
        self.configure_LED_merge_channel4_button4.setText(_translate("MainWindow", "LED #4"))
        self.configure_name_box.setToolTip(_translate("MainWindow", "Set a unique name for the LED driver and each connected LED"))
        self.configure_name_box.setTitle(_translate("MainWindow", "Name"))
        self.configure_name_driver_line_edit.setToolTip(_translate("MainWindow", "Enter a unique name for the LED driver (optional)"))
        self.configure_name_driver_line_edit.setText(_translate("MainWindow", "123456789"))
        self.configure_name_driver_label.setToolTip(_translate("MainWindow", "Enter a unique name for the LED driver (optional)"))
        self.configure_name_driver_label.setText(_translate("MainWindow", "Driver Name:"))
        self.configure_name_driver_serial_label.setToolTip(_translate("MainWindow", "Serial number for selected LED driver.  This can be editted in the driver code - see manual for details."))
        self.configure_name_driver_serial_label.setText(_translate("MainWindow", "Serial #: 123456789"))
        self.configure_name_LED1_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #1"))
        self.configure_name_LED1_box.setText(_translate("MainWindow", "LED #1"))
        self.configure_name_LED2_line_edit.setToolTip(_translate("MainWindow", "Enter a unique name for LED channel #2 (optional)"))
        self.configure_name_LED2_line_edit.setText(_translate("MainWindow", "LED #2"))
        self.configure_name_LED1_line_edit.setToolTip(_translate("MainWindow", "Enter a unique name for LED channel #1 (optional)"))
        self.configure_name_LED1_line_edit.setText(_translate("MainWindow", "LED #1"))
        self.configure_name_LED4_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #4"))
        self.configure_name_LED4_box.setText(_translate("MainWindow", "LED #4"))
        self.configure_name_LED2_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #2"))
        self.configure_name_LED2_box.setText(_translate("MainWindow", "LED #2"))
        self.configure_name_LED3_box.setToolTip(_translate("MainWindow", "Check this box to activate LED channel #3"))
        self.configure_name_LED3_box.setText(_translate("MainWindow", "LED #3"))
        self.configure_name_LED3_line_edit.setToolTip(_translate("MainWindow", "Enter a unique name for LED channel #3 (optional)"))
        self.configure_name_LED3_line_edit.setText(_translate("MainWindow", "LED #3"))
        self.configure_name_LED4_line_edit.setToolTip(_translate("MainWindow", "Enter a unique name for LED channel #4 (optional)"))
        self.configure_name_LED4_line_edit.setText(_translate("MainWindow", "LED #4"))
        self.configure_resistor_box.setToolTip(_translate("MainWindow", "List the current sense resistor values used on the driver.  It is critical these values are correct for proper driver function."))
        self.configure_resistor_box.setTitle(_translate("MainWindow", "Current Sense Resistors (Ω) "))
        self.configure_resistor1_box.setToolTip(_translate("MainWindow", "This cannot be inactivated.  There must be at least one listed current sense resistor."))
        self.configure_resistor2_box.setToolTip(_translate("MainWindow", "Check if there is a second current sense resistor on the driver."))
        self.configure_resistor3_box.setToolTip(_translate("MainWindow", "Check if there is a third current sense resistor on the driver."))
        self.configure_resistor4_box.setToolTip(_translate("MainWindow", "Check if there is a fourth current sense resistor on the driver."))
        self.configure_resistor1_spin_box.setToolTip(_translate("MainWindow", "Value of the first current sense resistor (in ohms)."))
        self.configure_resistor2_spin_box.setToolTip(_translate("MainWindow", "Value of the second current sense resistor (in ohms)"))
        self.configure_resistor3_spin_box.setToolTip(_translate("MainWindow", "Value of the third current sense resistor (in ohms)."))
        self.configure_resistor4_spin_box.setToolTip(_translate("MainWindow", "Value of the fourth current sense resistor (in ohms)."))
        self.configure_thermistor_box.setToolTip(_translate("MainWindow", "Configure the properties and temperature limits for an external thermistor, such as on a high current COB LED (optional)"))
        self.configure_thermistor_box.setTitle(_translate("MainWindow", "External Thermistor"))
        self.configure_thermistor_beta_label.setToolTip(_translate("MainWindow", "Beta (K) of the thermistor - see data sheet of external device for details."))
        self.configure_thermistor_beta_label.setText(_translate("MainWindow", "Beta (K):"))
        self.configure_thermistor_resistance_box.setToolTip(_translate("MainWindow", "Nominal resistance of the thermistor at 25°C - see data sheet of external device for details."))
        self.configure_thermistor_beta_box.setToolTip(_translate("MainWindow", "Beta (K) of the thermistor - see data sheet of external device for details."))
        self.configure_thermistor_resistance_label.setToolTip(_translate("MainWindow", "Nominal resistance of the thermistor at 25°C - see data sheet of external device for details."))
        self.configure_thermistor_resistance_label.setText(_translate("MainWindow", "Resistance at 25°C (Ω):"))
        self.configure_thermistor_warn_label.setToolTip(_translate("MainWindow", "This is the temperature the external component must cool back down to before the driver turns back on after a thermal fault."))
        self.configure_thermistor_warn_label.setText(_translate("MainWindow", "External Warn (°C):"))
        self.configure_thermistor_warn_box.setToolTip(_translate("MainWindow", "This is the temperature the external component must cool back down to before the driver turns back on after a thermal fault."))
        self.configure_thermistor_fault_label.setToolTip(_translate("MainWindow", "If the external device exceeds this temperature the driver will automatically turn off until it cools back down."))
        self.configure_thermistor_fault_label.setText(_translate("MainWindow", "External Fault (°C):"))
        self.configure_thermistor_fault_box.setToolTip(_translate("MainWindow", "If the external device exceeds this temperature the driver will automatically turn off until it cools back down."))
        self.configure_pushbutton_box.setToolTip(_translate("MainWindow", "Congifure the built-in LEDs on the four pushbuttons."))
        self.configure_pushbutton_box.setTitle(_translate("MainWindow", "Pushbutton LEDs"))
        self.configure_pushbutton_intensity_label.setToolTip(_translate("MainWindow", "Set the intensity of the pushbuttons"))
        self.configure_pushbutton_intensity_label.setText(_translate("MainWindow", "Intensity"))
        self.configure_pushbutton_intensity_button.setToolTip(_translate("MainWindow", "Test pushbutton LED intensity"))
        self.configure_pushbutton_intensity_button.setText(_translate("MainWindow", "Test"))
        self.configure_pushbutton_alarm_label.setToolTip(_translate("MainWindow", "Set the LED display when a critical fault occurs such as an over-temperature fault."))
        self.configure_pushbutton_alarm_label.setText(_translate("MainWindow", "Alarm:"))
        self.configure_pushbutton_alarm_solid_button.setToolTip(_translate("MainWindow", "Illuminate all LEDs during a critical fault such as an over-temperature fault."))
        self.configure_pushbutton_alarm_solid_button.setText(_translate("MainWindow", "Solid"))
        self.configure_pushbutton_alarm_chase_button.setToolTip(_translate("MainWindow", "Sequentially illuminate the LEDs during a critical fault such as an over-temperature fault."))
        self.configure_pushbutton_alarm_chase_button.setText(_translate("MainWindow", "Chase"))
        self.configure_pushbutton_alarm_flash_button.setToolTip(_translate("MainWindow", "Flash the LEDs on and off during a critical fault such as an over-temperature fault."))
        self.configure_pushbutton_alarm_flash_button.setText(_translate("MainWindow", "Flash"))
        self.configure_pushbutton_alarm_test_button.setToolTip(_translate("MainWindow", "Test fault illumination pattern."))
        self.configure_pushbutton_alarm_test_button.setText(_translate("MainWindow", "Test"))
        self.configure_pushbutton_alarm_pulse_button.setToolTip(_translate("MainWindow", "Ramp LED intensity during a critical fault such as an over-temperature fault."))
        self.configure_pushbutton_alarm_pulse_button.setText(_translate("MainWindow", "Pulse"))
        self.configure_pushbutton_intensity_slider.setToolTip(_translate("MainWindow", "Set the intensity of the pushbuttons"))
        self.configure_pushbutton_alarm_disable_button.setToolTip(_translate("MainWindow", "Do not change LEDs during a critical fault such as an over-temperature fault."))
        self.configure_pushbutton_alarm_disable_button.setText(_translate("MainWindow", "Disable"))
        self.configure_audio_box.setToolTip(_translate("MainWindow", "Configure audio settings"))
        self.configure_audio_box.setTitle(_translate("MainWindow", "Audio"))
        self.configure_audio_alarm_slider.setToolTip(_translate("MainWindow", "Set the tone volume for critical faults such as an over-temperature fault."))
        self.configure_audio_alarm_label.setToolTip(_translate("MainWindow", "Set the tone volume for critical faults such as an over-temperature fault."))
        self.configure_audio_alarm_label.setText(_translate("MainWindow", "Alarm Volume"))
        self.configure_audio_status_label.setToolTip(_translate("MainWindow", "Set the tone volume for notifications such as verifying successful boot and successful upload."))
        self.configure_audio_status_label.setText(_translate("MainWindow", "Status Volume"))
        self.configure_audio_status_slider.setToolTip(_translate("MainWindow", "Set the tone volume for notifications such as verifying successful boot and successful upload."))
        self.configure_audio_status_button.setToolTip(_translate("MainWindow", "Test status tone volume."))
        self.configure_audio_status_button.setText(_translate("MainWindow", "Test"))
        self.configure_audio_alarm_button.setToolTip(_translate("MainWindow", "Test alarm tone volume."))
        self.configure_audio_alarm_button.setText(_translate("MainWindow", "Test"))
        self.configure_load_button.setToolTip(_translate("MainWindow", "Load a LED driver configuration text file (*.lcf)"))
        self.configure_load_button.setText(_translate("MainWindow", "Load Configuration"))
        self.configure_save_button.setToolTip(_translate("MainWindow", "Save LED driver configuration as a text file (*.lcf)"))
        self.configure_save_button.setText(_translate("MainWindow", "Save Configuration"))
        self.configure_download_button.setToolTip(_translate("MainWindow", "Update configure window with the current driver configuration."))
        self.configure_download_button.setText(_translate("MainWindow", "Download from Driver"))
        self.gui_master_tab.setTabText(self.gui_master_tab.indexOf(self.configure_tab), _translate("MainWindow", "Configure"))
        self.calibration_scale_box.setToolTip(_translate("MainWindow", "Set the Y-axis scale as percent of the active LED current limit."))
        self.calibration_scale_box.setTitle(_translate("MainWindow", "Y-axis scale"))
        self.calibration_scale_custom_box.setToolTip(_translate("MainWindow", "Set the Y-axis scale to a custom percentage of the active LED current limit."))
        self.calibration_scale_10_button.setToolTip(_translate("MainWindow", "Set the Y-axis scale to 10% of the active LED current limit."))
        self.calibration_scale_10_button.setText(_translate("MainWindow", "10%"))
        self.calibration_scale_100_button.setToolTip(_translate("MainWindow", "Set the Y-axis scale to 100% of the active LED current limit."))
        self.calibration_scale_100_button.setText(_translate("MainWindow", "100%"))
        self.calibration_scale_custom_button.setToolTip(_translate("MainWindow", "Set the Y-axis scale to a custom percentage of the active LED current limit."))
        self.calibration_scale_custom_button.setText(_translate("MainWindow", "Custom:"))
        self.calibration_scale_50_button.setToolTip(_translate("MainWindow", "Set the Y-axis scale to 50% of the active LED current limit."))
        self.calibration_scale_50_button.setText(_translate("MainWindow", "50%"))
        self.calibration_scale_25_button.setToolTip(_translate("MainWindow", "Set the Y-axis scale to 25% of the active LED current limit."))
        self.calibration_scale_25_button.setText(_translate("MainWindow", "25%"))
        self.calibration_scale_5_button.setToolTip(_translate("MainWindow", "Set the Y-axis scale to 5% of the active LED current limit."))
        self.calibration_scale_5_button.setText(_translate("MainWindow", "5%"))
        self.calibration_scale_custom_label.setToolTip(_translate("MainWindow", "Set the Y-axis scale to a custom percentage of the active LED current limit."))
        self.calibration_scale_custom_label.setText(_translate("MainWindow", "%"))
        self.calibration_plot_window.setToolTip(_translate("MainWindow", "Plot of LED current response to two 500 µs square-wave pulses, sampled at 1.1 MHz."))
        self.calibration_run_button.setToolTip(_translate("MainWindow", "Press to start/stop LED driver and plot of resulting LED current."))
        self.calibration_run_button.setText(_translate("MainWindow", "Run"))
        self.calibration_current_box.setToolTip(_translate("MainWindow", "Active LED current as a percent of the set current limit."))
        self.calibration_current_label1.setToolTip(_translate("MainWindow", "Active LED current as a percent of the set current limit."))
        self.calibration_current_label1.setText(_translate("MainWindow", "LED Current:"))
        self.calibration_current_label2.setToolTip(_translate("MainWindow", "Active LED current as a percent of the set current limit."))
        self.calibration_current_label2.setText(_translate("MainWindow", "%"))
        self.calibration_software_control_box.setToolTip(_translate("MainWindow", "Ignores physical knob"))
        self.calibration_software_control_box.setText(_translate("MainWindow", "Enable software control of LED current"))
        self.gui_master_tab.setTabText(self.gui_master_tab.indexOf(self.calibration_tab), _translate("MainWindow", "Calibration"))
        self.about_label.setText(_translate("MainWindow", "About the software and Github link"))
        self.gui_master_tab.setTabText(self.gui_master_tab.indexOf(self.about_tab), _translate("MainWindow", "About"))
        self.menu_connection.setTitle(_translate("MainWindow", "Connection"))
        self.menu_view.setTitle(_translate("MainWindow", "View"))
        self.menu_connection_disconnect.setText(_translate("MainWindow", "Disconnect"))
        self.menu_connection_disconnect.setToolTip(_translate("MainWindow", "Disconnect from active LED driver."))
        self.menu_view_status.setText(_translate("MainWindow", "Status"))
        self.menu_view_status.setToolTip(_translate("MainWindow", "Open a new window showing status information about the active LED driver"))
        self.menu_view_sync.setText(_translate("MainWindow", "Sync plot"))
        self.menu_view_sync.setToolTip(_translate("MainWindow", "Open a new window showing a plot of the programmed sync output"))
        self.actionDriver_Configuration.setText(_translate("MainWindow", "Driver Configuration"))
        self.actionAWG_File.setText(_translate("MainWindow", "AWG File"))
        self.actionSync_file.setText(_translate("MainWindow", "Sync file"))
        self.menu_connection_test_connection.setText(_translate("MainWindow", "Test LED connections"))
        self.menu_connection_test_connection.setToolTip(_translate("MainWindow", "Search for LED driver USB connections"))
from pyqtgraph import PlotWidget

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())